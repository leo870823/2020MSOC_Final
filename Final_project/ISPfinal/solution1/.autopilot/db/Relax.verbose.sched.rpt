

================================================================
== Vivado HLS Report for 'Relax'
================================================================
* Date:           Fri Jan  8 20:55:03 2021

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        ISPfinal
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.741 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+-------+---------+
    |  Latency (cycles) |  Latency (absolute) |    Interval   | Pipeline|
    |   min   |   max   |    min   |    max   |  min  |  max  |   Type  |
    +---------+---------+----------+----------+-------+-------+---------+
    |    16396|    16396| 0.164 ms | 0.164 ms |  16396|  16396|   none  |
    +---------+---------+----------+----------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+---------+---------+----------+-----------+-----------+-------+----------+
        |               |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |   Loop Name   |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +---------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- for_y_for_x  |    16394|    16394|        12|          1|          1|  16384|    yes   |
        +---------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 12


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 14
* Pipeline : 1
  Pipeline-0 : II = 1, D = 12, States = { 2 3 4 5 6 7 8 9 10 11 12 13 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 14 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 2 
14 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 15 [1/1] (1.76ns)   --->   "br label %1" [divergent.cpp:207]   --->   Operation 15 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 8.36>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i15 [ 0, %0 ], [ %add_ln207, %for_x ]" [divergent.cpp:207]   --->   Operation 16 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%j_0 = phi i8 [ 0, %0 ], [ %select_ln212_1, %for_x ]" [divergent.cpp:212]   --->   Operation 17 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%i_0 = phi i8 [ 0, %0 ], [ %i, %for_x ]"   --->   Operation 18 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (2.31ns)   --->   "%icmp_ln207 = icmp eq i15 %indvar_flatten, -16384" [divergent.cpp:207]   --->   Operation 19 'icmp' 'icmp_ln207' <Predicate = true> <Delay = 2.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (1.94ns)   --->   "%add_ln207 = add i15 %indvar_flatten, 1" [divergent.cpp:207]   --->   Operation 20 'add' 'add_ln207' <Predicate = true> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "br i1 %icmp_ln207, label %2, label %for_x" [divergent.cpp:207]   --->   Operation 21 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (1.91ns)   --->   "%j = add i8 1, %j_0" [divergent.cpp:207]   --->   Operation 22 'add' 'j' <Predicate = (!icmp_ln207)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (1.55ns)   --->   "%icmp_ln209 = icmp eq i8 %i_0, -128" [divergent.cpp:209]   --->   Operation 23 'icmp' 'icmp_ln209' <Predicate = (!icmp_ln207)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (1.24ns)   --->   "%select_ln212 = select i1 %icmp_ln209, i8 0, i8 %i_0" [divergent.cpp:212]   --->   Operation 24 'select' 'select_ln212' <Predicate = (!icmp_ln207)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (1.24ns)   --->   "%select_ln212_1 = select i1 %icmp_ln209, i8 %j, i8 %j_0" [divergent.cpp:212]   --->   Operation 25 'select' 'select_ln212_1' <Predicate = (!icmp_ln207)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%tmp = call i15 @_ssdm_op_BitConcatenate.i15.i8.i7(i8 %select_ln212_1, i7 0)" [divergent.cpp:212]   --->   Operation 26 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln210 = zext i15 %tmp to i16" [divergent.cpp:210]   --->   Operation 27 'zext' 'zext_ln210' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln215 = zext i8 %select_ln212 to i16" [divergent.cpp:212]   --->   Operation 28 'zext' 'zext_ln215' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (1.94ns)   --->   "%add_ln215 = add i16 %zext_ln215, %zext_ln210" [divergent.cpp:212]   --->   Operation 29 'add' 'add_ln215' <Predicate = (!icmp_ln207)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln215_7 = zext i16 %add_ln215 to i64" [divergent.cpp:212]   --->   Operation 30 'zext' 'zext_ln215_7' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%x_V_addr = getelementptr [16384 x i8]* %x_V, i64 0, i64 %zext_ln215_7" [divergent.cpp:212]   --->   Operation 31 'getelementptr' 'x_V_addr' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%x_old_V_addr = getelementptr [16384 x i8]* %x_old_V, i64 0, i64 %zext_ln215_7" [divergent.cpp:212]   --->   Operation 32 'getelementptr' 'x_old_V_addr' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_2 : Operation 33 [2/2] (3.25ns)   --->   "%x_V_load = load i8* %x_V_addr, align 1" [divergent.cpp:212]   --->   Operation 33 'load' 'x_V_load' <Predicate = (!icmp_ln207)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_2 : Operation 34 [2/2] (3.25ns)   --->   "%x_old_V_load = load i8* %x_old_V_addr, align 1" [divergent.cpp:212]   --->   Operation 34 'load' 'x_old_V_load' <Predicate = (!icmp_ln207)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_2 : Operation 35 [1/1] (1.91ns)   --->   "%i = add i8 1, %select_ln212" [divergent.cpp:209]   --->   Operation 35 'add' 'i' <Predicate = (!icmp_ln207)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 5.16>
ST_3 : Operation 36 [1/2] (3.25ns)   --->   "%x_V_load = load i8* %x_V_addr, align 1" [divergent.cpp:212]   --->   Operation 36 'load' 'x_V_load' <Predicate = (!icmp_ln207)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%lhs_V = sext i8 %x_V_load to i9" [divergent.cpp:212]   --->   Operation 37 'sext' 'lhs_V' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_3 : Operation 38 [1/2] (3.25ns)   --->   "%x_old_V_load = load i8* %x_old_V_addr, align 1" [divergent.cpp:212]   --->   Operation 38 'load' 'x_old_V_load' <Predicate = (!icmp_ln207)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%rhs_V = sext i8 %x_old_V_load to i9" [divergent.cpp:212]   --->   Operation 39 'sext' 'rhs_V' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (1.91ns)   --->   "%ret_V = sub i9 %lhs_V, %rhs_V" [divergent.cpp:212]   --->   Operation 40 'sub' 'ret_V' <Predicate = (!icmp_ln207)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.28>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%sext_ln1429 = sext i9 %ret_V to i32" [divergent.cpp:212]   --->   Operation 41 'sext' 'sext_ln1429' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_4 : Operation 42 [6/6] (6.28ns)   --->   "%val_assign = sitofp i32 %sext_ln1429 to double" [divergent.cpp:212]   --->   Operation 42 'sitodp' 'val_assign' <Predicate = (!icmp_ln207)> <Delay = 6.28> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 5> <II = 1> <Delay = 6.28> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 5 <SV = 4> <Delay = 6.28>
ST_5 : Operation 43 [5/6] (6.28ns)   --->   "%val_assign = sitofp i32 %sext_ln1429 to double" [divergent.cpp:212]   --->   Operation 43 'sitodp' 'val_assign' <Predicate = (!icmp_ln207)> <Delay = 6.28> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 5> <II = 1> <Delay = 6.28> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 6 <SV = 5> <Delay = 6.28>
ST_6 : Operation 44 [4/6] (6.28ns)   --->   "%val_assign = sitofp i32 %sext_ln1429 to double" [divergent.cpp:212]   --->   Operation 44 'sitodp' 'val_assign' <Predicate = (!icmp_ln207)> <Delay = 6.28> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 5> <II = 1> <Delay = 6.28> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 7 <SV = 6> <Delay = 6.28>
ST_7 : Operation 45 [3/6] (6.28ns)   --->   "%val_assign = sitofp i32 %sext_ln1429 to double" [divergent.cpp:212]   --->   Operation 45 'sitodp' 'val_assign' <Predicate = (!icmp_ln207)> <Delay = 6.28> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 5> <II = 1> <Delay = 6.28> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 8 <SV = 7> <Delay = 6.28>
ST_8 : Operation 46 [2/6] (6.28ns)   --->   "%val_assign = sitofp i32 %sext_ln1429 to double" [divergent.cpp:212]   --->   Operation 46 'sitodp' 'val_assign' <Predicate = (!icmp_ln207)> <Delay = 6.28> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 5> <II = 1> <Delay = 6.28> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 9 <SV = 8> <Delay = 6.28>
ST_9 : Operation 47 [1/6] (6.28ns)   --->   "%val_assign = sitofp i32 %sext_ln1429 to double" [divergent.cpp:212]   --->   Operation 47 'sitodp' 'val_assign' <Predicate = (!icmp_ln207)> <Delay = 6.28> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 5> <II = 1> <Delay = 6.28> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 10 <SV = 9> <Delay = 3.76>
ST_10 : Operation 48 [1/1] (0.00ns)   --->   "%reg_V = bitcast double %val_assign to i64" [divergent.cpp:212]   --->   Operation 48 'bitcast' 'reg_V' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_10 : Operation 49 [1/1] (0.00ns)   --->   "%trunc_ln310 = trunc i64 %reg_V to i63" [divergent.cpp:212]   --->   Operation 49 'trunc' 'trunc_ln310' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_10 : Operation 50 [1/1] (0.00ns)   --->   "%p_Result_31 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %reg_V, i32 63)" [divergent.cpp:212]   --->   Operation 50 'bitselect' 'p_Result_31' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_10 : Operation 51 [1/1] (0.00ns)   --->   "%p_Result_s = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %reg_V, i32 52, i32 62)" [divergent.cpp:212]   --->   Operation 51 'partselect' 'p_Result_s' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_10 : Operation 52 [1/1] (0.00ns)   --->   "%exp_V = zext i11 %p_Result_s to i12" [divergent.cpp:212]   --->   Operation 52 'zext' 'exp_V' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_10 : Operation 53 [1/1] (0.00ns)   --->   "%trunc_ln331 = trunc i64 %reg_V to i8" [divergent.cpp:212]   --->   Operation 53 'trunc' 'trunc_ln331' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_10 : Operation 54 [1/1] (2.78ns)   --->   "%icmp_ln326 = icmp eq i63 %trunc_ln310, 0" [divergent.cpp:212]   --->   Operation 54 'icmp' 'icmp_ln326' <Predicate = (!icmp_ln207)> <Delay = 2.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 55 [1/1] (1.54ns)   --->   "%sh_amt = sub i12 1075, %exp_V" [divergent.cpp:212]   --->   Operation 55 'sub' 'sh_amt' <Predicate = (!icmp_ln207)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 56 [1/1] (1.88ns)   --->   "%icmp_ln330 = icmp eq i11 %p_Result_s, -973" [divergent.cpp:212]   --->   Operation 56 'icmp' 'icmp_ln330' <Predicate = (!icmp_ln207)> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 57 [1/1] (1.99ns)   --->   "%icmp_ln332 = icmp sgt i12 %sh_amt, 0" [divergent.cpp:212]   --->   Operation 57 'icmp' 'icmp_ln332' <Predicate = (!icmp_ln207)> <Delay = 1.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 58 [1/1] (1.99ns)   --->   "%icmp_ln333 = icmp slt i12 %sh_amt, 54" [divergent.cpp:212]   --->   Operation 58 'icmp' 'icmp_ln333' <Predicate = (!icmp_ln207)> <Delay = 1.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 59 [1/1] (0.97ns)   --->   "%or_ln330 = or i1 %icmp_ln326, %icmp_ln330" [divergent.cpp:212]   --->   Operation 59 'or' 'or_ln330' <Predicate = (!icmp_ln207)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 8.74>
ST_11 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node select_ln333)   --->   "%trunc_ln318 = trunc i64 %reg_V to i52" [divergent.cpp:212]   --->   Operation 60 'trunc' 'trunc_ln318' <Predicate = (!icmp_ln207 & !icmp_ln326)> <Delay = 0.00>
ST_11 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node select_ln333)   --->   "%tmp_35 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %trunc_ln318)" [divergent.cpp:212]   --->   Operation 61 'bitconcatenate' 'tmp_35' <Predicate = (!icmp_ln207 & !icmp_ln326)> <Delay = 0.00>
ST_11 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node select_ln333)   --->   "%sext_ln329 = sext i12 %sh_amt to i32" [divergent.cpp:212]   --->   Operation 62 'sext' 'sext_ln329' <Predicate = (!icmp_ln207 & !icmp_ln326)> <Delay = 0.00>
ST_11 : Operation 63 [1/1] (1.54ns)   --->   "%sh_amt_24 = sub i12 0, %sh_amt" [divergent.cpp:212]   --->   Operation 63 'sub' 'sh_amt_24' <Predicate = (!icmp_ln207 & !icmp_ln326)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node select_ln326)   --->   "%trunc_ln342 = trunc i12 %sh_amt_24 to i8" [divergent.cpp:212]   --->   Operation 64 'trunc' 'trunc_ln342' <Predicate = (!icmp_ln207 & !icmp_ln326)> <Delay = 0.00>
ST_11 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_82 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %sh_amt_24, i32 3, i32 10)" [divergent.cpp:212]   --->   Operation 65 'partselect' 'tmp_82' <Predicate = (!icmp_ln207 & !icmp_ln326)> <Delay = 0.00>
ST_11 : Operation 66 [1/1] (1.55ns)   --->   "%icmp_ln343 = icmp slt i8 %tmp_82, 1" [divergent.cpp:212]   --->   Operation 66 'icmp' 'icmp_ln343' <Predicate = (!icmp_ln207 & !icmp_ln326)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node select_ln333)   --->   "%zext_ln334 = zext i32 %sext_ln329 to i53" [divergent.cpp:212]   --->   Operation 67 'zext' 'zext_ln334' <Predicate = (!icmp_ln207 & !icmp_ln326)> <Delay = 0.00>
ST_11 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node select_ln333)   --->   "%lshr_ln334 = lshr i53 %tmp_35, %zext_ln334" [divergent.cpp:212]   --->   Operation 68 'lshr' 'lshr_ln334' <Predicate = (!icmp_ln207 & !icmp_ln326)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.14> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node select_ln333)   --->   "%trunc_ln334 = trunc i53 %lshr_ln334 to i8" [divergent.cpp:212]   --->   Operation 69 'trunc' 'trunc_ln334' <Predicate = (!icmp_ln207 & !icmp_ln326)> <Delay = 0.00>
ST_11 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node select_ln326)   --->   "%shl_ln345 = shl i8 %trunc_ln331, %trunc_ln342" [divergent.cpp:212]   --->   Operation 70 'shl' 'shl_ln345' <Predicate = (!icmp_ln207 & !icmp_ln326)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.14> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node and_ln332)   --->   "%xor_ln330 = xor i1 %or_ln330, true" [divergent.cpp:212]   --->   Operation 71 'xor' 'xor_ln330' <Predicate = (!icmp_ln207)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 72 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln332 = and i1 %icmp_ln332, %xor_ln330" [divergent.cpp:212]   --->   Operation 72 'and' 'and_ln332' <Predicate = (!icmp_ln207)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node select_ln333)   --->   "%and_ln333 = and i1 %and_ln332, %icmp_ln333" [divergent.cpp:212]   --->   Operation 73 'and' 'and_ln333' <Predicate = (!icmp_ln207 & !icmp_ln326)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 74 [1/1] (4.61ns) (out node of the LUT)   --->   "%select_ln333 = select i1 %and_ln333, i8 %trunc_ln334, i8 0" [divergent.cpp:212]   --->   Operation 74 'select' 'select_ln333' <Predicate = (!icmp_ln207 & !icmp_ln326)> <Delay = 4.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node and_ln343)   --->   "%or_ln332 = or i1 %or_ln330, %icmp_ln332" [divergent.cpp:212]   --->   Operation 75 'or' 'or_ln332' <Predicate = (!icmp_ln207 & !icmp_ln326)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node and_ln343)   --->   "%xor_ln332 = xor i1 %or_ln332, true" [divergent.cpp:212]   --->   Operation 76 'xor' 'xor_ln332' <Predicate = (!icmp_ln207 & !icmp_ln326)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 77 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln343 = and i1 %icmp_ln343, %xor_ln332" [divergent.cpp:212]   --->   Operation 77 'and' 'and_ln343' <Predicate = (!icmp_ln207 & !icmp_ln326)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node select_ln326)   --->   "%select_ln343 = select i1 %and_ln343, i8 %shl_ln345, i8 %select_ln333" [divergent.cpp:212]   --->   Operation 78 'select' 'select_ln343' <Predicate = (!icmp_ln207 & !icmp_ln326)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 79 [1/1] (3.14ns) (out node of the LUT)   --->   "%select_ln326 = select i1 %icmp_ln326, i8 0, i8 %select_ln343" [divergent.cpp:212]   --->   Operation 79 'select' 'select_ln326' <Predicate = (!icmp_ln207)> <Delay = 3.14> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 12 <SV = 11> <Delay = 5.65>
ST_12 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node select_ln333_24)   --->   "%tmp_83 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %reg_V, i32 63)" [divergent.cpp:212]   --->   Operation 80 'bitselect' 'tmp_83' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_12 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node select_ln333_24)   --->   "%select_ln336 = select i1 %tmp_83, i8 -1, i8 0" [divergent.cpp:212]   --->   Operation 81 'select' 'select_ln336' <Predicate = (!icmp_ln207)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node select_ln333_24)   --->   "%xor_ln333 = xor i1 %icmp_ln333, true" [divergent.cpp:212]   --->   Operation 82 'xor' 'xor_ln333' <Predicate = (!icmp_ln207)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node select_ln333_24)   --->   "%and_ln333_24 = and i1 %and_ln332, %xor_ln333" [divergent.cpp:212]   --->   Operation 83 'and' 'and_ln333_24' <Predicate = (!icmp_ln207)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 84 [1/1] (1.24ns) (out node of the LUT)   --->   "%select_ln333_24 = select i1 %and_ln333_24, i8 %select_ln336, i8 %select_ln326" [divergent.cpp:212]   --->   Operation 84 'select' 'select_ln333_24' <Predicate = (!icmp_ln207)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node select_ln330)   --->   "%xor_ln326 = xor i1 %icmp_ln326, true" [divergent.cpp:212]   --->   Operation 85 'xor' 'xor_ln326' <Predicate = (!icmp_ln207)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node select_ln330)   --->   "%and_ln330 = and i1 %icmp_ln330, %xor_ln326" [divergent.cpp:212]   --->   Operation 86 'and' 'and_ln330' <Predicate = (!icmp_ln207)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 87 [1/1] (1.24ns) (out node of the LUT)   --->   "%select_ln330 = select i1 %and_ln330, i8 %trunc_ln331, i8 %select_ln333_24" [divergent.cpp:212]   --->   Operation 87 'select' 'select_ln330' <Predicate = (!icmp_ln207)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 88 [1/1] (1.91ns)   --->   "%sub_ln461 = sub i8 0, %select_ln330" [divergent.cpp:212]   --->   Operation 88 'sub' 'sub_ln461' <Predicate = (!icmp_ln207 & p_Result_31)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 89 [1/1] (1.24ns)   --->   "%select_ln351 = select i1 %p_Result_31, i8 %sub_ln461, i8 %select_ln330" [divergent.cpp:212]   --->   Operation 89 'select' 'select_ln351' <Predicate = (!icmp_ln207)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 13 <SV = 12> <Delay = 3.25>
ST_13 : Operation 90 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @for_y_for_x_str)"   --->   Operation 90 'specloopname' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_13 : Operation 91 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16384, i64 16384, i64 16384)"   --->   Operation 91 'speclooptripcount' 'empty' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_13 : Operation 92 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str134) nounwind" [divergent.cpp:210]   --->   Operation 92 'specloopname' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_13 : Operation 93 [1/1] (0.00ns)   --->   "%tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([6 x i8]* @p_str134)" [divergent.cpp:210]   --->   Operation 93 'specregionbegin' 'tmp_s' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_13 : Operation 94 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str235) nounwind" [divergent.cpp:211]   --->   Operation 94 'specpipeline' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_13 : Operation 95 [1/1] (0.00ns)   --->   "%x_bar_V_addr = getelementptr [16384 x i8]* %x_bar_V, i64 0, i64 %zext_ln215_7" [divergent.cpp:212]   --->   Operation 95 'getelementptr' 'x_bar_V_addr' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_13 : Operation 96 [1/1] (3.25ns)   --->   "store i8 %select_ln351, i8* %x_bar_V_addr, align 1" [divergent.cpp:212]   --->   Operation 96 'store' <Predicate = (!icmp_ln207)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_13 : Operation 97 [1/1] (0.00ns)   --->   "%empty_88 = call i32 (...)* @_ssdm_op_SpecRegionEnd([6 x i8]* @p_str134, i32 %tmp_s)" [divergent.cpp:213]   --->   Operation 97 'specregionend' 'empty_88' <Predicate = (!icmp_ln207)> <Delay = 0.00>
ST_13 : Operation 98 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 98 'br' <Predicate = (!icmp_ln207)> <Delay = 0.00>

State 14 <SV = 2> <Delay = 0.00>
ST_14 : Operation 99 [1/1] (0.00ns)   --->   "ret void" [divergent.cpp:215]   --->   Operation 99 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten', divergent.cpp:207) with incoming values : ('add_ln207', divergent.cpp:207) [6]  (1.77 ns)

 <State 2>: 8.36ns
The critical path consists of the following:
	'phi' operation ('j_0', divergent.cpp:212) with incoming values : ('select_ln212_1', divergent.cpp:212) [7]  (0 ns)
	'add' operation ('j', divergent.cpp:207) [13]  (1.92 ns)
	'select' operation ('select_ln212_1', divergent.cpp:212) [18]  (1.25 ns)
	'add' operation ('add_ln215', divergent.cpp:212) [25]  (1.94 ns)
	'getelementptr' operation ('x_V_addr', divergent.cpp:212) [27]  (0 ns)
	'load' operation ('x_V_load', divergent.cpp:212) on array 'x_V' [30]  (3.25 ns)

 <State 3>: 5.17ns
The critical path consists of the following:
	'load' operation ('x_V_load', divergent.cpp:212) on array 'x_V' [30]  (3.25 ns)
	'sub' operation ('ret.V', divergent.cpp:212) [34]  (1.92 ns)

 <State 4>: 6.28ns
The critical path consists of the following:
	'sitodp' operation ('val', divergent.cpp:212) [36]  (6.28 ns)

 <State 5>: 6.28ns
The critical path consists of the following:
	'sitodp' operation ('val', divergent.cpp:212) [36]  (6.28 ns)

 <State 6>: 6.28ns
The critical path consists of the following:
	'sitodp' operation ('val', divergent.cpp:212) [36]  (6.28 ns)

 <State 7>: 6.28ns
The critical path consists of the following:
	'sitodp' operation ('val', divergent.cpp:212) [36]  (6.28 ns)

 <State 8>: 6.28ns
The critical path consists of the following:
	'sitodp' operation ('val', divergent.cpp:212) [36]  (6.28 ns)

 <State 9>: 6.28ns
The critical path consists of the following:
	'sitodp' operation ('val', divergent.cpp:212) [36]  (6.28 ns)

 <State 10>: 3.76ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln326', divergent.cpp:212) [45]  (2.79 ns)
	'or' operation ('or_ln330', divergent.cpp:212) [61]  (0.978 ns)

 <State 11>: 8.74ns
The critical path consists of the following:
	'xor' operation ('xor_ln330', divergent.cpp:212) [62]  (0 ns)
	'and' operation ('and_ln332', divergent.cpp:212) [63]  (0.978 ns)
	'and' operation ('and_ln333', divergent.cpp:212) [64]  (0 ns)
	'select' operation ('select_ln333', divergent.cpp:212) [65]  (4.61 ns)
	'select' operation ('select_ln343', divergent.cpp:212) [69]  (0 ns)
	'select' operation ('select_ln326', divergent.cpp:212) [70]  (3.15 ns)

 <State 12>: 5.66ns
The critical path consists of the following:
	'select' operation ('select_ln336', divergent.cpp:212) [59]  (0 ns)
	'select' operation ('select_ln333_24', divergent.cpp:212) [73]  (1.25 ns)
	'select' operation ('select_ln330', divergent.cpp:212) [76]  (1.25 ns)
	'sub' operation ('sub_ln461', divergent.cpp:212) [77]  (1.92 ns)
	'select' operation ('select_ln351', divergent.cpp:212) [78]  (1.25 ns)

 <State 13>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('x_bar_V_addr', divergent.cpp:212) [29]  (0 ns)
	'store' operation ('store_ln212', divergent.cpp:212) of variable 'select_ln351', divergent.cpp:212 on array 'x_bar_V' [79]  (3.25 ns)

 <State 14>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
