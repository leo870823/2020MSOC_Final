// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ProxGS (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_io_V_address0,
        x_io_V_ce0,
        x_io_V_we0,
        x_io_V_d0,
        x_io_V_q0,
        coe_a_M_real_V_address0,
        coe_a_M_real_V_ce0,
        coe_a_M_real_V_q0,
        coe_a_M_imag_V_address0,
        coe_a_M_imag_V_ce0,
        coe_a_M_imag_V_q0,
        coe_b_V_address0,
        coe_b_V_ce0,
        coe_b_V_q0
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_pp0_stage0 = 9'd2;
parameter    ap_ST_fsm_state4 = 9'd4;
parameter    ap_ST_fsm_state5 = 9'd8;
parameter    ap_ST_fsm_pp1_stage0 = 9'd16;
parameter    ap_ST_fsm_state29 = 9'd32;
parameter    ap_ST_fsm_state30 = 9'd64;
parameter    ap_ST_fsm_pp2_stage0 = 9'd128;
parameter    ap_ST_fsm_state34 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] x_io_V_address0;
output   x_io_V_ce0;
output   x_io_V_we0;
output  [7:0] x_io_V_d0;
input  [7:0] x_io_V_q0;
output  [13:0] coe_a_M_real_V_address0;
output   coe_a_M_real_V_ce0;
input  [15:0] coe_a_M_real_V_q0;
output  [13:0] coe_a_M_imag_V_address0;
output   coe_a_M_imag_V_ce0;
input  [15:0] coe_a_M_imag_V_q0;
output  [13:0] coe_b_V_address0;
output   coe_b_V_ce0;
input  [7:0] coe_b_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] x_io_V_address0;
reg x_io_V_ce0;
reg x_io_V_we0;
reg coe_a_M_real_V_ce0;
reg coe_a_M_imag_V_ce0;
reg coe_b_V_ce0;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [14:0] indvar_flatten_reg_204;
reg   [7:0] y_0_i_reg_215;
reg   [7:0] x_0_i_reg_226;
reg   [14:0] indvar_flatten11_reg_237;
reg   [7:0] y_0_reg_248;
reg   [7:0] x_0_reg_259;
reg   [14:0] indvar_flatten23_reg_270;
reg   [7:0] y_0_i1_reg_281;
reg   [7:0] x_0_i2_reg_292;
wire   [0:0] icmp_ln43_fu_313_p2;
reg   [0:0] icmp_ln43_reg_756;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [14:0] add_ln43_fu_319_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [7:0] select_ln43_fu_337_p3;
reg   [7:0] select_ln43_reg_765;
wire   [7:0] select_ln43_1_fu_345_p3;
reg   [7:0] select_ln43_1_reg_770;
wire   [6:0] trunc_ln43_fu_353_p1;
reg   [6:0] trunc_ln43_reg_775;
wire   [7:0] x_5_fu_384_p2;
wire   [0:0] icmp_ln24_fu_428_p2;
reg   [0:0] icmp_ln24_reg_790;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state6_pp1_stage0_iter0;
wire    ap_block_state7_pp1_stage0_iter1;
wire    ap_block_state8_pp1_stage0_iter2;
wire    ap_block_state9_pp1_stage0_iter3;
wire    ap_block_state10_pp1_stage0_iter4;
wire    ap_block_state11_pp1_stage0_iter5;
wire    ap_block_state12_pp1_stage0_iter6;
wire    ap_block_state13_pp1_stage0_iter7;
wire    ap_block_state14_pp1_stage0_iter8;
wire    ap_block_state15_pp1_stage0_iter9;
wire    ap_block_state16_pp1_stage0_iter10;
wire    ap_block_state17_pp1_stage0_iter11;
wire    ap_block_state18_pp1_stage0_iter12;
wire    ap_block_state19_pp1_stage0_iter13;
wire    ap_block_state20_pp1_stage0_iter14;
wire    ap_block_state21_pp1_stage0_iter15;
wire    ap_block_state22_pp1_stage0_iter16;
wire    ap_block_state23_pp1_stage0_iter17;
wire    ap_block_state24_pp1_stage0_iter18;
wire    ap_block_state25_pp1_stage0_iter19;
wire    ap_block_state26_pp1_stage0_iter20;
wire    ap_block_state27_pp1_stage0_iter21;
wire    ap_block_state28_pp1_stage0_iter22;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln24_reg_790_pp1_iter1_reg;
reg   [0:0] icmp_ln24_reg_790_pp1_iter2_reg;
reg   [0:0] icmp_ln24_reg_790_pp1_iter3_reg;
reg   [0:0] icmp_ln24_reg_790_pp1_iter4_reg;
reg   [0:0] icmp_ln24_reg_790_pp1_iter5_reg;
reg   [0:0] icmp_ln24_reg_790_pp1_iter6_reg;
reg   [0:0] icmp_ln24_reg_790_pp1_iter7_reg;
reg   [0:0] icmp_ln24_reg_790_pp1_iter8_reg;
reg   [0:0] icmp_ln24_reg_790_pp1_iter9_reg;
reg   [0:0] icmp_ln24_reg_790_pp1_iter10_reg;
reg   [0:0] icmp_ln24_reg_790_pp1_iter11_reg;
reg   [0:0] icmp_ln24_reg_790_pp1_iter12_reg;
reg   [0:0] icmp_ln24_reg_790_pp1_iter13_reg;
reg   [0:0] icmp_ln24_reg_790_pp1_iter14_reg;
reg   [0:0] icmp_ln24_reg_790_pp1_iter15_reg;
reg   [0:0] icmp_ln24_reg_790_pp1_iter16_reg;
reg   [0:0] icmp_ln24_reg_790_pp1_iter17_reg;
reg   [0:0] icmp_ln24_reg_790_pp1_iter18_reg;
reg   [0:0] icmp_ln24_reg_790_pp1_iter19_reg;
reg   [0:0] icmp_ln24_reg_790_pp1_iter20_reg;
reg   [0:0] icmp_ln24_reg_790_pp1_iter21_reg;
wire   [14:0] add_ln24_fu_434_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [7:0] select_ln24_1_fu_460_p3;
reg   [7:0] select_ln24_1_reg_799;
wire   [63:0] zext_ln31_fu_502_p1;
reg   [63:0] zext_ln31_reg_804;
reg   [63:0] zext_ln31_reg_804_pp1_iter1_reg;
reg   [63:0] zext_ln31_reg_804_pp1_iter2_reg;
reg   [63:0] zext_ln31_reg_804_pp1_iter3_reg;
reg   [63:0] zext_ln31_reg_804_pp1_iter4_reg;
reg   [63:0] zext_ln31_reg_804_pp1_iter5_reg;
reg   [63:0] zext_ln31_reg_804_pp1_iter6_reg;
reg   [63:0] zext_ln31_reg_804_pp1_iter7_reg;
reg   [63:0] zext_ln31_reg_804_pp1_iter8_reg;
reg   [63:0] zext_ln31_reg_804_pp1_iter9_reg;
reg   [63:0] zext_ln31_reg_804_pp1_iter10_reg;
reg   [63:0] zext_ln31_reg_804_pp1_iter11_reg;
reg   [63:0] zext_ln31_reg_804_pp1_iter12_reg;
reg   [63:0] zext_ln31_reg_804_pp1_iter13_reg;
reg   [63:0] zext_ln31_reg_804_pp1_iter14_reg;
reg   [63:0] zext_ln31_reg_804_pp1_iter15_reg;
reg   [63:0] zext_ln31_reg_804_pp1_iter16_reg;
reg   [63:0] zext_ln31_reg_804_pp1_iter17_reg;
reg   [63:0] zext_ln31_reg_804_pp1_iter18_reg;
reg   [63:0] zext_ln31_reg_804_pp1_iter19_reg;
reg   [63:0] zext_ln31_reg_804_pp1_iter20_reg;
reg   [63:0] zext_ln31_reg_804_pp1_iter21_reg;
wire   [63:0] zext_ln1265_1_fu_517_p1;
reg   [63:0] zext_ln1265_1_reg_809;
wire   [7:0] x_fu_523_p2;
wire   [16:0] ret_V_13_fu_541_p2;
reg   [16:0] ret_V_13_reg_839;
wire   [16:0] ret_V_14_fu_565_p2;
reg   [16:0] ret_V_14_reg_844;
wire  signed [16:0] sext_ln1148_fu_571_p1;
wire   [0:0] icmp_ln57_fu_602_p2;
reg   [0:0] icmp_ln57_reg_855;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state31_pp2_stage0_iter0;
wire    ap_block_state32_pp2_stage0_iter1;
wire    ap_block_state33_pp2_stage0_iter2;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln57_reg_855_pp2_iter1_reg;
wire   [14:0] add_ln57_fu_608_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [7:0] select_ln57_fu_626_p3;
reg   [7:0] select_ln57_reg_864;
reg   [7:0] select_ln57_reg_864_pp2_iter1_reg;
wire   [7:0] select_ln57_1_fu_634_p3;
reg   [7:0] select_ln57_1_reg_869;
reg   [7:0] select_ln57_1_reg_869_pp2_iter1_reg;
wire   [7:0] x_6_fu_669_p2;
wire   [7:0] select_ln359_fu_713_p3;
reg   [7:0] select_ln359_reg_885;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state5;
wire    grp_fft_top_fu_303_ap_ready;
wire    grp_fft_top_fu_303_ap_done;
wire    ap_sync_grp_fft_top_fu_303_ap_ready;
wire    ap_sync_grp_fft_top_fu_303_ap_done;
reg    ap_block_state5_on_subcall_done;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state6;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
reg    ap_enable_reg_pp1_iter12;
reg    ap_enable_reg_pp1_iter13;
reg    ap_enable_reg_pp1_iter14;
reg    ap_enable_reg_pp1_iter15;
reg    ap_enable_reg_pp1_iter16;
reg    ap_enable_reg_pp1_iter17;
reg    ap_enable_reg_pp1_iter18;
reg    ap_enable_reg_pp1_iter19;
reg    ap_enable_reg_pp1_iter20;
reg    ap_enable_reg_pp1_iter21;
reg    ap_enable_reg_pp1_iter22;
wire    ap_CS_fsm_state30;
reg    ap_block_state30_on_subcall_done;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state31;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
reg   [13:0] MAD_address0;
reg    MAD_ce0;
reg    MAD_we0;
wire   [31:0] MAD_d0;
wire   [31:0] MAD_q0;
reg   [13:0] fft_result_address0;
reg    fft_result_ce0;
reg    fft_result_we0;
wire   [31:0] fft_result_q0;
reg   [13:0] tmp9_address0;
reg    tmp9_ce0;
reg   [3:0] tmp9_we0;
wire   [31:0] tmp9_d0;
wire   [31:0] tmp9_q0;
reg    grp_fft_top_fu_303_direction;
wire   [13:0] grp_fft_top_fu_303_in_r_address0;
wire    grp_fft_top_fu_303_in_r_ce0;
wire   [31:0] grp_fft_top_fu_303_in_r_d0;
reg   [31:0] grp_fft_top_fu_303_in_r_q0;
wire    grp_fft_top_fu_303_in_r_we0;
wire   [13:0] grp_fft_top_fu_303_in_r_address1;
wire    grp_fft_top_fu_303_in_r_ce1;
wire   [31:0] grp_fft_top_fu_303_in_r_d1;
wire    grp_fft_top_fu_303_in_r_we1;
wire   [13:0] grp_fft_top_fu_303_out_r_address0;
wire    grp_fft_top_fu_303_out_r_ce0;
wire   [31:0] grp_fft_top_fu_303_out_r_d0;
wire    grp_fft_top_fu_303_out_r_we0;
wire   [13:0] grp_fft_top_fu_303_out_r_address1;
wire    grp_fft_top_fu_303_out_r_ce1;
wire   [31:0] grp_fft_top_fu_303_out_r_d1;
wire    grp_fft_top_fu_303_out_r_we1;
wire    grp_fft_top_fu_303_ovflo;
wire    grp_fft_top_fu_303_direction_ap_ack;
wire    grp_fft_top_fu_303_ap_start;
wire    grp_fft_top_fu_303_ovflo_ap_vld;
wire    grp_fft_top_fu_303_ap_idle;
reg    grp_fft_top_fu_303_ap_continue;
reg   [7:0] ap_phi_mux_y_0_i_phi_fu_219_p4;
wire    ap_block_pp0_stage0;
reg   [7:0] ap_phi_mux_y_0_phi_fu_252_p4;
wire    ap_block_pp1_stage0;
reg   [7:0] ap_phi_mux_y_0_i1_phi_fu_285_p4;
wire    ap_block_pp2_stage0;
reg    grp_fft_top_fu_303_ap_start_reg;
wire    ap_CS_fsm_state4;
reg    ap_sync_reg_grp_fft_top_fu_303_ap_ready;
reg    ap_sync_reg_grp_fft_top_fu_303_ap_done;
wire    ap_CS_fsm_state29;
wire   [63:0] zext_ln446_1_fu_379_p1;
wire   [63:0] zext_ln49_fu_406_p1;
wire   [63:0] zext_ln64_fu_664_p1;
wire   [63:0] zext_ln180_5_fu_741_p1;
wire   [0:0] icmp_ln45_fu_331_p2;
wire   [7:0] y_5_fu_325_p2;
wire   [14:0] tmp_37_fu_357_p3;
wire   [15:0] zext_ln45_1_fu_365_p1;
wire   [15:0] zext_ln446_fu_369_p1;
wire   [15:0] add_ln446_fu_373_p2;
wire   [13:0] zext_ln45_fu_397_p1;
wire   [13:0] shl_ln47_mid2_fu_390_p3;
wire   [13:0] tmp_84_fu_400_p2;
wire   [0:0] trunc_ln728_fu_411_p1;
wire   [15:0] shl_ln_fu_415_p3;
wire   [0:0] icmp_ln26_fu_446_p2;
wire   [7:0] y_fu_440_p2;
wire   [6:0] trunc_ln24_fu_468_p1;
wire   [14:0] tmp_38_fu_480_p3;
wire   [7:0] select_ln24_fu_452_p3;
wire   [13:0] zext_ln26_fu_492_p1;
wire   [13:0] shl_ln29_mid2_fu_472_p3;
wire   [13:0] tmp_fu_496_p2;
wire   [15:0] zext_ln26_1_fu_488_p1;
wire   [15:0] zext_ln1265_fu_507_p1;
wire   [15:0] add_ln1265_fu_511_p2;
wire   [15:0] p_Val2_12_fu_529_p1;
wire  signed [16:0] lhs_V_fu_533_p1;
wire  signed [16:0] rhs_V_fu_537_p1;
wire   [15:0] p_Val2_15_fu_547_p4;
wire  signed [16:0] lhs_V_7_fu_557_p1;
wire  signed [16:0] rhs_V_6_fu_561_p1;
wire  signed [7:0] grp_fu_575_p1;
wire  signed [7:0] grp_fu_580_p1;
wire   [15:0] grp_fu_575_p2;
wire   [15:0] grp_fu_580_p2;
wire   [15:0] trunc_ln703_1_fu_589_p1;
wire   [15:0] trunc_ln703_fu_585_p1;
wire   [0:0] icmp_ln59_fu_620_p2;
wire   [7:0] y_6_fu_614_p2;
wire   [6:0] trunc_ln57_fu_642_p1;
wire   [13:0] zext_ln59_fu_654_p1;
wire   [13:0] shl_ln62_mid2_fu_646_p3;
wire   [13:0] tmp_85_fu_658_p2;
wire   [14:0] trunc_ln851_fu_691_p1;
wire   [0:0] p_Result_s_fu_683_p3;
wire   [0:0] icmp_ln851_fu_695_p2;
wire   [0:0] ret_V_fu_675_p3;
wire   [0:0] and_ln850_fu_701_p2;
wire   [0:0] xor_ln850_fu_707_p2;
wire   [14:0] tmp_39_fu_721_p3;
wire   [15:0] zext_ln180_fu_732_p1;
wire   [15:0] zext_ln59_1_fu_728_p1;
wire   [15:0] add_ln180_fu_735_p2;
wire    ap_CS_fsm_state34;
reg   [8:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter13 = 1'b0;
#0 ap_enable_reg_pp1_iter14 = 1'b0;
#0 ap_enable_reg_pp1_iter15 = 1'b0;
#0 ap_enable_reg_pp1_iter16 = 1'b0;
#0 ap_enable_reg_pp1_iter17 = 1'b0;
#0 ap_enable_reg_pp1_iter18 = 1'b0;
#0 ap_enable_reg_pp1_iter19 = 1'b0;
#0 ap_enable_reg_pp1_iter20 = 1'b0;
#0 ap_enable_reg_pp1_iter21 = 1'b0;
#0 ap_enable_reg_pp1_iter22 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 grp_fft_top_fu_303_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_fft_top_fu_303_ap_ready = 1'b0;
#0 ap_sync_reg_grp_fft_top_fu_303_ap_done = 1'b0;
end

ProxGS_MAD #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
MAD_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(MAD_address0),
    .ce0(MAD_ce0),
    .we0(MAD_we0),
    .d0(MAD_d0),
    .q0(MAD_q0)
);

ProxGS_MAD #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
fft_result_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fft_result_address0),
    .ce0(fft_result_ce0),
    .we0(fft_result_we0),
    .d0(grp_fft_top_fu_303_out_r_d0),
    .q0(fft_result_q0)
);

ProxGS_tmp9 #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
tmp9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp9_address0),
    .ce0(tmp9_ce0),
    .we0(tmp9_we0),
    .d0(tmp9_d0),
    .q0(tmp9_q0)
);

fft_top grp_fft_top_fu_303(
    .direction(grp_fft_top_fu_303_direction),
    .in_r_address0(grp_fft_top_fu_303_in_r_address0),
    .in_r_ce0(grp_fft_top_fu_303_in_r_ce0),
    .in_r_d0(grp_fft_top_fu_303_in_r_d0),
    .in_r_q0(grp_fft_top_fu_303_in_r_q0),
    .in_r_we0(grp_fft_top_fu_303_in_r_we0),
    .in_r_address1(grp_fft_top_fu_303_in_r_address1),
    .in_r_ce1(grp_fft_top_fu_303_in_r_ce1),
    .in_r_d1(grp_fft_top_fu_303_in_r_d1),
    .in_r_q1(32'd0),
    .in_r_we1(grp_fft_top_fu_303_in_r_we1),
    .out_r_address0(grp_fft_top_fu_303_out_r_address0),
    .out_r_ce0(grp_fft_top_fu_303_out_r_ce0),
    .out_r_d0(grp_fft_top_fu_303_out_r_d0),
    .out_r_q0(32'd0),
    .out_r_we0(grp_fft_top_fu_303_out_r_we0),
    .out_r_address1(grp_fft_top_fu_303_out_r_address1),
    .out_r_ce1(grp_fft_top_fu_303_out_r_ce1),
    .out_r_d1(grp_fft_top_fu_303_out_r_d1),
    .out_r_q1(32'd0),
    .out_r_we1(grp_fft_top_fu_303_out_r_we1),
    .ovflo(grp_fft_top_fu_303_ovflo),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .direction_ap_vld(1'b1),
    .direction_ap_ack(grp_fft_top_fu_303_direction_ap_ack),
    .ap_start(grp_fft_top_fu_303_ap_start),
    .ovflo_ap_vld(grp_fft_top_fu_303_ovflo_ap_vld),
    .ap_done(grp_fft_top_fu_303_ap_done),
    .ap_ready(grp_fft_top_fu_303_ap_ready),
    .ap_idle(grp_fft_top_fu_303_ap_idle),
    .ap_continue(grp_fft_top_fu_303_ap_continue)
);

cross_channel_debncg #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
cross_channel_debncg_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_V_13_reg_839),
    .din1(grp_fu_575_p1),
    .ce(1'b1),
    .dout(grp_fu_575_p2)
);

cross_channel_debncg #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
cross_channel_debncg_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_V_14_reg_844),
    .din1(grp_fu_580_p1),
    .ce(1'b1),
    .dout(grp_fu_580_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state6)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state6);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter19 <= ap_enable_reg_pp1_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter20 <= ap_enable_reg_pp1_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter21 <= ap_enable_reg_pp1_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter22 <= ap_enable_reg_pp1_iter21;
        end else if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter22 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state31) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b0 == ap_block_state30_on_subcall_done) & (1'b1 == ap_CS_fsm_state30))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state31)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state31);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if (((1'b0 == ap_block_state30_on_subcall_done) & (1'b1 == ap_CS_fsm_state30))) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_fft_top_fu_303_ap_done <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_state30_on_subcall_done) & (1'b1 == ap_CS_fsm_state30)) | ((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5)))) begin
            ap_sync_reg_grp_fft_top_fu_303_ap_done <= 1'b0;
        end else if ((grp_fft_top_fu_303_ap_done == 1'b1)) begin
            ap_sync_reg_grp_fft_top_fu_303_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_fft_top_fu_303_ap_ready <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_state30_on_subcall_done) & (1'b1 == ap_CS_fsm_state30)) | ((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5)))) begin
            ap_sync_reg_grp_fft_top_fu_303_ap_ready <= 1'b0;
        end else if ((grp_fft_top_fu_303_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_fft_top_fu_303_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_fft_top_fu_303_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state4) | ((ap_sync_grp_fft_top_fu_303_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state30)) | ((ap_sync_grp_fft_top_fu_303_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state5)))) begin
            grp_fft_top_fu_303_ap_start_reg <= 1'b1;
        end else if ((grp_fft_top_fu_303_ap_ready == 1'b1)) begin
            grp_fft_top_fu_303_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_fu_428_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten11_reg_237 <= add_ln24_fu_434_p2;
    end else if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
        indvar_flatten11_reg_237 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_fu_602_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten23_reg_270 <= add_ln57_fu_608_p2;
    end else if (((1'b0 == ap_block_state30_on_subcall_done) & (1'b1 == ap_CS_fsm_state30))) begin
        indvar_flatten23_reg_270 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln43_fu_313_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_204 <= add_ln43_fu_319_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_204 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_fu_602_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        x_0_i2_reg_292 <= x_6_fu_669_p2;
    end else if (((1'b0 == ap_block_state30_on_subcall_done) & (1'b1 == ap_CS_fsm_state30))) begin
        x_0_i2_reg_292 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln43_fu_313_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_0_i_reg_226 <= x_5_fu_384_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        x_0_i_reg_226 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_fu_428_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        x_0_reg_259 <= x_fu_523_p2;
    end else if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
        x_0_reg_259 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_855 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        y_0_i1_reg_281 <= select_ln57_1_reg_869;
    end else if (((1'b0 == ap_block_state30_on_subcall_done) & (1'b1 == ap_CS_fsm_state30))) begin
        y_0_i1_reg_281 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln43_reg_756 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        y_0_i_reg_215 <= select_ln43_1_reg_770;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        y_0_i_reg_215 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_reg_790 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        y_0_reg_248 <= select_ln24_1_reg_799;
    end else if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
        y_0_reg_248 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln24_reg_790 <= icmp_ln24_fu_428_p2;
        icmp_ln24_reg_790_pp1_iter1_reg <= icmp_ln24_reg_790;
        zext_ln31_reg_804_pp1_iter1_reg[13 : 0] <= zext_ln31_reg_804[13 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln24_reg_790_pp1_iter10_reg <= icmp_ln24_reg_790_pp1_iter9_reg;
        icmp_ln24_reg_790_pp1_iter11_reg <= icmp_ln24_reg_790_pp1_iter10_reg;
        icmp_ln24_reg_790_pp1_iter12_reg <= icmp_ln24_reg_790_pp1_iter11_reg;
        icmp_ln24_reg_790_pp1_iter13_reg <= icmp_ln24_reg_790_pp1_iter12_reg;
        icmp_ln24_reg_790_pp1_iter14_reg <= icmp_ln24_reg_790_pp1_iter13_reg;
        icmp_ln24_reg_790_pp1_iter15_reg <= icmp_ln24_reg_790_pp1_iter14_reg;
        icmp_ln24_reg_790_pp1_iter16_reg <= icmp_ln24_reg_790_pp1_iter15_reg;
        icmp_ln24_reg_790_pp1_iter17_reg <= icmp_ln24_reg_790_pp1_iter16_reg;
        icmp_ln24_reg_790_pp1_iter18_reg <= icmp_ln24_reg_790_pp1_iter17_reg;
        icmp_ln24_reg_790_pp1_iter19_reg <= icmp_ln24_reg_790_pp1_iter18_reg;
        icmp_ln24_reg_790_pp1_iter20_reg <= icmp_ln24_reg_790_pp1_iter19_reg;
        icmp_ln24_reg_790_pp1_iter21_reg <= icmp_ln24_reg_790_pp1_iter20_reg;
        icmp_ln24_reg_790_pp1_iter2_reg <= icmp_ln24_reg_790_pp1_iter1_reg;
        icmp_ln24_reg_790_pp1_iter3_reg <= icmp_ln24_reg_790_pp1_iter2_reg;
        icmp_ln24_reg_790_pp1_iter4_reg <= icmp_ln24_reg_790_pp1_iter3_reg;
        icmp_ln24_reg_790_pp1_iter5_reg <= icmp_ln24_reg_790_pp1_iter4_reg;
        icmp_ln24_reg_790_pp1_iter6_reg <= icmp_ln24_reg_790_pp1_iter5_reg;
        icmp_ln24_reg_790_pp1_iter7_reg <= icmp_ln24_reg_790_pp1_iter6_reg;
        icmp_ln24_reg_790_pp1_iter8_reg <= icmp_ln24_reg_790_pp1_iter7_reg;
        icmp_ln24_reg_790_pp1_iter9_reg <= icmp_ln24_reg_790_pp1_iter8_reg;
        zext_ln31_reg_804_pp1_iter10_reg[13 : 0] <= zext_ln31_reg_804_pp1_iter9_reg[13 : 0];
        zext_ln31_reg_804_pp1_iter11_reg[13 : 0] <= zext_ln31_reg_804_pp1_iter10_reg[13 : 0];
        zext_ln31_reg_804_pp1_iter12_reg[13 : 0] <= zext_ln31_reg_804_pp1_iter11_reg[13 : 0];
        zext_ln31_reg_804_pp1_iter13_reg[13 : 0] <= zext_ln31_reg_804_pp1_iter12_reg[13 : 0];
        zext_ln31_reg_804_pp1_iter14_reg[13 : 0] <= zext_ln31_reg_804_pp1_iter13_reg[13 : 0];
        zext_ln31_reg_804_pp1_iter15_reg[13 : 0] <= zext_ln31_reg_804_pp1_iter14_reg[13 : 0];
        zext_ln31_reg_804_pp1_iter16_reg[13 : 0] <= zext_ln31_reg_804_pp1_iter15_reg[13 : 0];
        zext_ln31_reg_804_pp1_iter17_reg[13 : 0] <= zext_ln31_reg_804_pp1_iter16_reg[13 : 0];
        zext_ln31_reg_804_pp1_iter18_reg[13 : 0] <= zext_ln31_reg_804_pp1_iter17_reg[13 : 0];
        zext_ln31_reg_804_pp1_iter19_reg[13 : 0] <= zext_ln31_reg_804_pp1_iter18_reg[13 : 0];
        zext_ln31_reg_804_pp1_iter20_reg[13 : 0] <= zext_ln31_reg_804_pp1_iter19_reg[13 : 0];
        zext_ln31_reg_804_pp1_iter21_reg[13 : 0] <= zext_ln31_reg_804_pp1_iter20_reg[13 : 0];
        zext_ln31_reg_804_pp1_iter2_reg[13 : 0] <= zext_ln31_reg_804_pp1_iter1_reg[13 : 0];
        zext_ln31_reg_804_pp1_iter3_reg[13 : 0] <= zext_ln31_reg_804_pp1_iter2_reg[13 : 0];
        zext_ln31_reg_804_pp1_iter4_reg[13 : 0] <= zext_ln31_reg_804_pp1_iter3_reg[13 : 0];
        zext_ln31_reg_804_pp1_iter5_reg[13 : 0] <= zext_ln31_reg_804_pp1_iter4_reg[13 : 0];
        zext_ln31_reg_804_pp1_iter6_reg[13 : 0] <= zext_ln31_reg_804_pp1_iter5_reg[13 : 0];
        zext_ln31_reg_804_pp1_iter7_reg[13 : 0] <= zext_ln31_reg_804_pp1_iter6_reg[13 : 0];
        zext_ln31_reg_804_pp1_iter8_reg[13 : 0] <= zext_ln31_reg_804_pp1_iter7_reg[13 : 0];
        zext_ln31_reg_804_pp1_iter9_reg[13 : 0] <= zext_ln31_reg_804_pp1_iter8_reg[13 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln43_reg_756 <= icmp_ln43_fu_313_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln57_reg_855 <= icmp_ln57_fu_602_p2;
        icmp_ln57_reg_855_pp2_iter1_reg <= icmp_ln57_reg_855;
        select_ln57_1_reg_869_pp2_iter1_reg <= select_ln57_1_reg_869;
        select_ln57_reg_864_pp2_iter1_reg <= select_ln57_reg_864;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_reg_790 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ret_V_13_reg_839 <= ret_V_13_fu_541_p2;
        ret_V_14_reg_844 <= ret_V_14_fu_565_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_fu_428_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln24_1_reg_799 <= select_ln24_1_fu_460_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_855 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        select_ln359_reg_885 <= select_ln359_fu_713_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln43_fu_313_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln43_1_reg_770 <= select_ln43_1_fu_345_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln43_fu_313_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln43_reg_765 <= select_ln43_fu_337_p3;
        trunc_ln43_reg_775 <= trunc_ln43_fu_353_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_fu_602_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        select_ln57_1_reg_869 <= select_ln57_1_fu_634_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_fu_602_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        select_ln57_reg_864 <= select_ln57_fu_626_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_fu_428_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        zext_ln1265_1_reg_809[15 : 0] <= zext_ln1265_1_fu_517_p1[15 : 0];
        zext_ln31_reg_804[13 : 0] <= zext_ln31_fu_502_p1[13 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter22 == 1'b1))) begin
        MAD_address0 = zext_ln31_reg_804_pp1_iter21_reg;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        MAD_address0 = grp_fft_top_fu_303_in_r_address0;
    end else begin
        MAD_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter22 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        MAD_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        MAD_ce0 = grp_fft_top_fu_303_in_r_ce0;
    end else begin
        MAD_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln24_reg_790_pp1_iter21_reg == 1'd0) & (ap_enable_reg_pp1_iter22 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        MAD_we0 = 1'b1;
    end else begin
        MAD_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln43_fu_313_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln24_fu_428_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln57_fu_602_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state31 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state31 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter22 == 1'b0) & (ap_enable_reg_pp1_iter21 == 1'b0) & (ap_enable_reg_pp1_iter20 == 1'b0) & (ap_enable_reg_pp1_iter19 == 1'b0) & (ap_enable_reg_pp1_iter18 == 1'b0) & (ap_enable_reg_pp1_iter17 == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b0) & (ap_enable_reg_pp1_iter15 == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b0) & (ap_enable_reg_pp1_iter13 == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln57_reg_855 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_y_0_i1_phi_fu_285_p4 = select_ln57_1_reg_869;
    end else begin
        ap_phi_mux_y_0_i1_phi_fu_285_p4 = y_0_i1_reg_281;
    end
end

always @ (*) begin
    if (((icmp_ln43_reg_756 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_y_0_i_phi_fu_219_p4 = select_ln43_1_reg_770;
    end else begin
        ap_phi_mux_y_0_i_phi_fu_219_p4 = y_0_i_reg_215;
    end
end

always @ (*) begin
    if (((icmp_ln24_reg_790 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_y_0_phi_fu_252_p4 = select_ln24_1_reg_799;
    end else begin
        ap_phi_mux_y_0_phi_fu_252_p4 = y_0_reg_248;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        coe_a_M_imag_V_ce0 = 1'b1;
    end else begin
        coe_a_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        coe_a_M_real_V_ce0 = 1'b1;
    end else begin
        coe_a_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        coe_b_V_ce0 = 1'b1;
    end else begin
        coe_b_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        fft_result_address0 = zext_ln64_fu_664_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        fft_result_address0 = zext_ln31_fu_502_p1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state5))) begin
        fft_result_address0 = grp_fft_top_fu_303_out_r_address0;
    end else begin
        fft_result_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        fft_result_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state5))) begin
        fft_result_ce0 = grp_fft_top_fu_303_out_r_ce0;
    end else begin
        fft_result_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state5))) begin
        fft_result_we0 = grp_fft_top_fu_303_out_r_we0;
    end else begin
        fft_result_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state30_on_subcall_done) & (1'b1 == ap_CS_fsm_state30)) | ((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5)))) begin
        grp_fft_top_fu_303_ap_continue = 1'b1;
    end else begin
        grp_fft_top_fu_303_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fft_top_fu_303_direction = 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fft_top_fu_303_direction = 1'd1;
    end else begin
        grp_fft_top_fu_303_direction = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fft_top_fu_303_in_r_q0 = MAD_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fft_top_fu_303_in_r_q0 = tmp9_q0;
    end else begin
        grp_fft_top_fu_303_in_r_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        tmp9_address0 = zext_ln49_fu_406_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp9_address0 = grp_fft_top_fu_303_in_r_address0;
    end else begin
        tmp9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        tmp9_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp9_ce0 = grp_fft_top_fu_303_in_r_ce0;
    end else begin
        tmp9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln43_reg_756 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        tmp9_we0 = 4'd3;
    end else begin
        tmp9_we0 = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        x_io_V_address0 = zext_ln180_5_fu_741_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_io_V_address0 = zext_ln446_1_fu_379_p1;
    end else begin
        x_io_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
        x_io_V_ce0 = 1'b1;
    end else begin
        x_io_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln57_reg_855_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        x_io_V_we0 = 1'b1;
    end else begin
        x_io_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln43_fu_313_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln43_fu_313_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln24_fu_428_p2 == 1'd1)) & ~((ap_enable_reg_pp1_iter21 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter22 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter21 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter22 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln24_fu_428_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((1'b0 == ap_block_state30_on_subcall_done) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln57_fu_602_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln57_fu_602_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign MAD_d0 = {{trunc_ln703_1_fu_589_p1}, {trunc_ln703_fu_585_p1}};

assign add_ln1265_fu_511_p2 = (zext_ln26_1_fu_488_p1 + zext_ln1265_fu_507_p1);

assign add_ln180_fu_735_p2 = (zext_ln180_fu_732_p1 + zext_ln59_1_fu_728_p1);

assign add_ln24_fu_434_p2 = (indvar_flatten11_reg_237 + 15'd1);

assign add_ln43_fu_319_p2 = (indvar_flatten_reg_204 + 15'd1);

assign add_ln446_fu_373_p2 = (zext_ln45_1_fu_365_p1 + zext_ln446_fu_369_p1);

assign add_ln57_fu_608_p2 = (indvar_flatten23_reg_270 + 15'd1);

assign and_ln850_fu_701_p2 = (p_Result_s_fu_683_p3 & icmp_ln851_fu_695_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_on_subcall_done = ((ap_sync_grp_fft_top_fu_303_ap_ready & ap_sync_grp_fft_top_fu_303_ap_done) == 1'b0);
end

assign ap_block_state31_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_on_subcall_done = ((ap_sync_grp_fft_top_fu_303_ap_ready & ap_sync_grp_fft_top_fu_303_ap_done) == 1'b0);
end

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_sync_grp_fft_top_fu_303_ap_done = (grp_fft_top_fu_303_ap_done | ap_sync_reg_grp_fft_top_fu_303_ap_done);

assign ap_sync_grp_fft_top_fu_303_ap_ready = (grp_fft_top_fu_303_ap_ready | ap_sync_reg_grp_fft_top_fu_303_ap_ready);

assign coe_a_M_imag_V_address0 = zext_ln1265_1_fu_517_p1;

assign coe_a_M_real_V_address0 = zext_ln1265_1_fu_517_p1;

assign coe_b_V_address0 = zext_ln1265_1_reg_809;

assign grp_fft_top_fu_303_ap_start = grp_fft_top_fu_303_ap_start_reg;

assign grp_fu_575_p1 = sext_ln1148_fu_571_p1;

assign grp_fu_580_p1 = sext_ln1148_fu_571_p1;

assign icmp_ln24_fu_428_p2 = ((indvar_flatten11_reg_237 == 15'd16384) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_446_p2 = ((x_0_reg_259 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_313_p2 = ((indvar_flatten_reg_204 == 15'd16384) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_331_p2 = ((x_0_i_reg_226 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_602_p2 = ((indvar_flatten23_reg_270 == 15'd16384) ? 1'b1 : 1'b0);

assign icmp_ln59_fu_620_p2 = ((x_0_i2_reg_292 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln851_fu_695_p2 = ((trunc_ln851_fu_691_p1 != 15'd0) ? 1'b1 : 1'b0);

assign lhs_V_7_fu_557_p1 = $signed(p_Val2_15_fu_547_p4);

assign lhs_V_fu_533_p1 = $signed(p_Val2_12_fu_529_p1);

assign p_Result_s_fu_683_p3 = fft_result_q0[32'd15];

assign p_Val2_12_fu_529_p1 = fft_result_q0[15:0];

assign p_Val2_15_fu_547_p4 = {{fft_result_q0[31:16]}};

assign ret_V_13_fu_541_p2 = ($signed(lhs_V_fu_533_p1) + $signed(rhs_V_fu_537_p1));

assign ret_V_14_fu_565_p2 = ($signed(lhs_V_7_fu_557_p1) + $signed(rhs_V_6_fu_561_p1));

assign ret_V_fu_675_p3 = fft_result_q0[32'd15];

assign rhs_V_6_fu_561_p1 = $signed(coe_a_M_imag_V_q0);

assign rhs_V_fu_537_p1 = $signed(coe_a_M_real_V_q0);

assign select_ln24_1_fu_460_p3 = ((icmp_ln26_fu_446_p2[0:0] === 1'b1) ? y_fu_440_p2 : ap_phi_mux_y_0_phi_fu_252_p4);

assign select_ln24_fu_452_p3 = ((icmp_ln26_fu_446_p2[0:0] === 1'b1) ? 8'd0 : x_0_reg_259);

assign select_ln359_fu_713_p3 = ((xor_ln850_fu_707_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln43_1_fu_345_p3 = ((icmp_ln45_fu_331_p2[0:0] === 1'b1) ? y_5_fu_325_p2 : ap_phi_mux_y_0_i_phi_fu_219_p4);

assign select_ln43_fu_337_p3 = ((icmp_ln45_fu_331_p2[0:0] === 1'b1) ? 8'd0 : x_0_i_reg_226);

assign select_ln57_1_fu_634_p3 = ((icmp_ln59_fu_620_p2[0:0] === 1'b1) ? y_6_fu_614_p2 : ap_phi_mux_y_0_i1_phi_fu_285_p4);

assign select_ln57_fu_626_p3 = ((icmp_ln59_fu_620_p2[0:0] === 1'b1) ? 8'd0 : x_0_i2_reg_292);

assign sext_ln1148_fu_571_p1 = $signed(coe_b_V_q0);

assign shl_ln29_mid2_fu_472_p3 = {{trunc_ln24_fu_468_p1}, {7'd0}};

assign shl_ln47_mid2_fu_390_p3 = {{trunc_ln43_reg_775}, {7'd0}};

assign shl_ln62_mid2_fu_646_p3 = {{trunc_ln57_fu_642_p1}, {7'd0}};

assign shl_ln_fu_415_p3 = {{trunc_ln728_fu_411_p1}, {15'd0}};

assign tmp9_d0 = shl_ln_fu_415_p3;

assign tmp_37_fu_357_p3 = {{select_ln43_1_fu_345_p3}, {7'd0}};

assign tmp_38_fu_480_p3 = {{select_ln24_1_fu_460_p3}, {7'd0}};

assign tmp_39_fu_721_p3 = {{select_ln57_1_reg_869_pp2_iter1_reg}, {7'd0}};

assign tmp_84_fu_400_p2 = (zext_ln45_fu_397_p1 + shl_ln47_mid2_fu_390_p3);

assign tmp_85_fu_658_p2 = (zext_ln59_fu_654_p1 + shl_ln62_mid2_fu_646_p3);

assign tmp_fu_496_p2 = (zext_ln26_fu_492_p1 + shl_ln29_mid2_fu_472_p3);

assign trunc_ln24_fu_468_p1 = select_ln24_1_fu_460_p3[6:0];

assign trunc_ln43_fu_353_p1 = select_ln43_1_fu_345_p3[6:0];

assign trunc_ln57_fu_642_p1 = select_ln57_1_fu_634_p3[6:0];

assign trunc_ln703_1_fu_589_p1 = grp_fu_580_p2[15:0];

assign trunc_ln703_fu_585_p1 = grp_fu_575_p2[15:0];

assign trunc_ln728_fu_411_p1 = x_io_V_q0[0:0];

assign trunc_ln851_fu_691_p1 = fft_result_q0[14:0];

assign x_5_fu_384_p2 = (8'd1 + select_ln43_fu_337_p3);

assign x_6_fu_669_p2 = (8'd1 + select_ln57_fu_626_p3);

assign x_fu_523_p2 = (8'd1 + select_ln24_fu_452_p3);

assign x_io_V_d0 = select_ln359_reg_885;

assign xor_ln850_fu_707_p2 = (ret_V_fu_675_p3 ^ and_ln850_fu_701_p2);

assign y_5_fu_325_p2 = (8'd1 + ap_phi_mux_y_0_i_phi_fu_219_p4);

assign y_6_fu_614_p2 = (8'd1 + ap_phi_mux_y_0_i1_phi_fu_285_p4);

assign y_fu_440_p2 = (8'd1 + ap_phi_mux_y_0_phi_fu_252_p4);

assign zext_ln1265_1_fu_517_p1 = add_ln1265_fu_511_p2;

assign zext_ln1265_fu_507_p1 = select_ln24_fu_452_p3;

assign zext_ln180_5_fu_741_p1 = add_ln180_fu_735_p2;

assign zext_ln180_fu_732_p1 = select_ln57_reg_864_pp2_iter1_reg;

assign zext_ln26_1_fu_488_p1 = tmp_38_fu_480_p3;

assign zext_ln26_fu_492_p1 = select_ln24_fu_452_p3;

assign zext_ln31_fu_502_p1 = tmp_fu_496_p2;

assign zext_ln446_1_fu_379_p1 = add_ln446_fu_373_p2;

assign zext_ln446_fu_369_p1 = select_ln43_fu_337_p3;

assign zext_ln45_1_fu_365_p1 = tmp_37_fu_357_p3;

assign zext_ln45_fu_397_p1 = select_ln43_reg_765;

assign zext_ln49_fu_406_p1 = tmp_84_fu_400_p2;

assign zext_ln59_1_fu_728_p1 = tmp_39_fu_721_p3;

assign zext_ln59_fu_654_p1 = select_ln57_fu_626_p3;

assign zext_ln64_fu_664_p1 = tmp_85_fu_658_p2;

always @ (posedge ap_clk) begin
    zext_ln31_reg_804[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln31_reg_804_pp1_iter1_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln31_reg_804_pp1_iter2_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln31_reg_804_pp1_iter3_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln31_reg_804_pp1_iter4_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln31_reg_804_pp1_iter5_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln31_reg_804_pp1_iter6_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln31_reg_804_pp1_iter7_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln31_reg_804_pp1_iter8_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln31_reg_804_pp1_iter9_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln31_reg_804_pp1_iter10_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln31_reg_804_pp1_iter11_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln31_reg_804_pp1_iter12_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln31_reg_804_pp1_iter13_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln31_reg_804_pp1_iter14_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln31_reg_804_pp1_iter15_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln31_reg_804_pp1_iter16_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln31_reg_804_pp1_iter17_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln31_reg_804_pp1_iter18_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln31_reg_804_pp1_iter19_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln31_reg_804_pp1_iter20_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln31_reg_804_pp1_iter21_reg[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln1265_1_reg_809[63:16] <= 48'b000000000000000000000000000000000000000000000000;
end

endmodule //ProxGS
