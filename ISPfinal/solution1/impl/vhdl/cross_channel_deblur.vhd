-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cross_channel_deblur is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    Img_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    Img_V_ce0 : OUT STD_LOGIC;
    Img_V_we0 : OUT STD_LOGIC;
    Img_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Img_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    adjChImg_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    adjChImg_V_ce0 : OUT STD_LOGIC;
    adjChImg_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    adjChImg_V_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    adjChImg_V_ce1 : OUT STD_LOGIC;
    adjChImg_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    coe_a_M_real_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    coe_a_M_real_ce0 : OUT STD_LOGIC;
    coe_a_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coe_a_M_imag_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    coe_a_M_imag_ce0 : OUT STD_LOGIC;
    coe_a_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coe_b_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    coe_b_ce0 : OUT STD_LOGIC;
    coe_b_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of cross_channel_deblur is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv15_4000 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal add_ln41_fu_356_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal select_ln46_1_fu_382_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln41_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_423_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_fu_435_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_reg_543 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal add_ln121_fu_447_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln121_reg_551 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal select_ln126_1_fu_473_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln126_1_reg_556 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln121_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln321_3_fu_503_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_3_reg_561 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_509_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_reg_576 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_bar_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_bar_V_ce0 : STD_LOGIC;
    signal x_bar_V_we0 : STD_LOGIC;
    signal x_bar_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_bar_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_bar_V_ce1 : STD_LOGIC;
    signal x_bar_V_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_old_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_old_V_ce0 : STD_LOGIC;
    signal x_old_V_we0 : STD_LOGIC;
    signal x_old_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_V_ce0 : STD_LOGIC;
    signal x_V_we0 : STD_LOGIC;
    signal x_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_1_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal y_1_V_ce0 : STD_LOGIC;
    signal y_1_V_we0 : STD_LOGIC;
    signal y_1_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_1_V_ce1 : STD_LOGIC;
    signal y_1_V_we1 : STD_LOGIC;
    signal y_2_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal y_2_V_ce0 : STD_LOGIC;
    signal y_2_V_we0 : STD_LOGIC;
    signal y_2_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_2_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_2_V_ce1 : STD_LOGIC;
    signal y_2_V_we1 : STD_LOGIC;
    signal y_3_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal y_3_V_ce0 : STD_LOGIC;
    signal y_3_V_we0 : STD_LOGIC;
    signal y_3_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_3_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_4_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal y_4_V_ce0 : STD_LOGIC;
    signal y_4_V_we0 : STD_LOGIC;
    signal y_4_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_4_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_4_V_ce1 : STD_LOGIC;
    signal y_4_V_we1 : STD_LOGIC;
    signal y_5_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal y_5_V_ce0 : STD_LOGIC;
    signal y_5_V_we0 : STD_LOGIC;
    signal y_5_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_5_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_6_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal y_6_V_ce0 : STD_LOGIC;
    signal y_6_V_we0 : STD_LOGIC;
    signal y_6_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_6_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_6_V_ce1 : STD_LOGIC;
    signal y_6_V_we1 : STD_LOGIC;
    signal y_7_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal y_7_V_ce0 : STD_LOGIC;
    signal y_7_V_we0 : STD_LOGIC;
    signal y_7_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_7_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_7_V_ce1 : STD_LOGIC;
    signal y_7_V_we1 : STD_LOGIC;
    signal grp_ProxGS4_fu_316_ap_start : STD_LOGIC;
    signal grp_ProxGS4_fu_316_ap_done : STD_LOGIC;
    signal grp_ProxGS4_fu_316_ap_idle : STD_LOGIC;
    signal grp_ProxGS4_fu_316_ap_ready : STD_LOGIC;
    signal grp_ProxGS4_fu_316_x_io_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_ProxGS4_fu_316_x_io_V_ce0 : STD_LOGIC;
    signal grp_ProxGS4_fu_316_x_io_V_we0 : STD_LOGIC;
    signal grp_ProxGS4_fu_316_x_io_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ProxGS4_fu_316_coe_a_M_real_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_ProxGS4_fu_316_coe_a_M_real_ce0 : STD_LOGIC;
    signal grp_ProxGS4_fu_316_coe_a_M_imag_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_ProxGS4_fu_316_coe_a_M_imag_ce0 : STD_LOGIC;
    signal grp_ProxGS4_fu_316_coe_b_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_ProxGS4_fu_316_coe_b_ce0 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_ap_start : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_ap_done : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_ap_idle : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_ap_ready : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_f_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_my_filter_v12_fu_327_f_V_ce0 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_f_V_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_my_filter_v12_fu_327_f_V_ce1 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_adjChImg_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_my_filter_v12_fu_327_adjChImg_V_ce0 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_adjChImg_V_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_my_filter_v12_fu_327_adjChImg_V_ce1 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g1_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_my_filter_v12_fu_327_g1_V_ce0 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g1_V_we0 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g1_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_my_filter_v12_fu_327_g1_V_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_my_filter_v12_fu_327_g1_V_ce1 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g1_V_we1 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g1_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_my_filter_v12_fu_327_g2_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_my_filter_v12_fu_327_g2_V_ce0 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g2_V_we0 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g2_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_my_filter_v12_fu_327_g2_V_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_my_filter_v12_fu_327_g2_V_ce1 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g2_V_we1 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g2_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_my_filter_v12_fu_327_g3_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_my_filter_v12_fu_327_g3_V_ce0 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g3_V_we0 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g3_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_my_filter_v12_fu_327_g4_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_my_filter_v12_fu_327_g4_V_ce0 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g4_V_we0 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g4_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_my_filter_v12_fu_327_g4_V_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_my_filter_v12_fu_327_g4_V_ce1 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g4_V_we1 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g4_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_my_filter_v12_fu_327_g5_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_my_filter_v12_fu_327_g5_V_ce0 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g5_V_we0 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g5_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_my_filter_v12_fu_327_g6_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_my_filter_v12_fu_327_g6_V_ce0 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g6_V_we0 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g6_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_my_filter_v12_fu_327_g6_V_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_my_filter_v12_fu_327_g6_V_ce1 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g6_V_we1 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g6_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_my_filter_v12_fu_327_g7_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_my_filter_v12_fu_327_g7_V_ce0 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g7_V_we0 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g7_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_my_filter_v12_fu_327_g7_V_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_my_filter_v12_fu_327_g7_V_ce1 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g7_V_we1 : STD_LOGIC;
    signal grp_my_filter_v12_fu_327_g7_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_array_copy3_fu_341_ap_start : STD_LOGIC;
    signal grp_array_copy3_fu_341_ap_done : STD_LOGIC;
    signal grp_array_copy3_fu_341_ap_idle : STD_LOGIC;
    signal grp_array_copy3_fu_341_ap_ready : STD_LOGIC;
    signal grp_array_copy3_fu_341_data_in_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_array_copy3_fu_341_data_in_V_ce0 : STD_LOGIC;
    signal grp_array_copy3_fu_341_data_in_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_array_copy3_fu_341_data_out_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_array_copy3_fu_341_data_out_V_ce0 : STD_LOGIC;
    signal grp_array_copy3_fu_341_data_out_V_we0 : STD_LOGIC;
    signal grp_array_copy3_fu_341_data_out_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten_reg_239 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal y_0_i_reg_250 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_0_i_reg_261 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_0_reg_272 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal indvar_flatten11_reg_283 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal j_0_i_reg_294 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_0_i_reg_305 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ProxGS4_fu_316_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_my_filter_v12_fu_327_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln78_fu_429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_array_copy3_fu_341_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal zext_ln321_1_fu_412_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln214_fu_515_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln43_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_fu_362_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_390_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln46_fu_374_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln321_fu_402_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln44_fu_398_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln321_fu_406_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln123_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_453_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_481_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln126_fu_465_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln321_2_fu_493_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln124_fu_489_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln321_1_fu_497_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state8_on_subcall_done : BOOLEAN;

    component ProxGS4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_io_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        x_io_V_ce0 : OUT STD_LOGIC;
        x_io_V_we0 : OUT STD_LOGIC;
        x_io_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        x_io_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        coe_a_M_real_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        coe_a_M_real_ce0 : OUT STD_LOGIC;
        coe_a_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        coe_a_M_imag_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        coe_a_M_imag_ce0 : OUT STD_LOGIC;
        coe_a_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        coe_b_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        coe_b_ce0 : OUT STD_LOGIC;
        coe_b_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component my_filter_v12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        f_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        f_V_ce0 : OUT STD_LOGIC;
        f_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        f_V_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        f_V_ce1 : OUT STD_LOGIC;
        f_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        adjChImg_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        adjChImg_V_ce0 : OUT STD_LOGIC;
        adjChImg_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        adjChImg_V_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        adjChImg_V_ce1 : OUT STD_LOGIC;
        adjChImg_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        g1_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        g1_V_ce0 : OUT STD_LOGIC;
        g1_V_we0 : OUT STD_LOGIC;
        g1_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        g1_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        g1_V_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        g1_V_ce1 : OUT STD_LOGIC;
        g1_V_we1 : OUT STD_LOGIC;
        g1_V_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        g2_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        g2_V_ce0 : OUT STD_LOGIC;
        g2_V_we0 : OUT STD_LOGIC;
        g2_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        g2_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        g2_V_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        g2_V_ce1 : OUT STD_LOGIC;
        g2_V_we1 : OUT STD_LOGIC;
        g2_V_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        g3_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        g3_V_ce0 : OUT STD_LOGIC;
        g3_V_we0 : OUT STD_LOGIC;
        g3_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        g3_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        g4_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        g4_V_ce0 : OUT STD_LOGIC;
        g4_V_we0 : OUT STD_LOGIC;
        g4_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        g4_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        g4_V_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        g4_V_ce1 : OUT STD_LOGIC;
        g4_V_we1 : OUT STD_LOGIC;
        g4_V_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        g5_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        g5_V_ce0 : OUT STD_LOGIC;
        g5_V_we0 : OUT STD_LOGIC;
        g5_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        g5_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        g6_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        g6_V_ce0 : OUT STD_LOGIC;
        g6_V_we0 : OUT STD_LOGIC;
        g6_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        g6_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        g6_V_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        g6_V_ce1 : OUT STD_LOGIC;
        g6_V_we1 : OUT STD_LOGIC;
        g6_V_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        g7_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        g7_V_ce0 : OUT STD_LOGIC;
        g7_V_we0 : OUT STD_LOGIC;
        g7_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        g7_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        g7_V_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        g7_V_ce1 : OUT STD_LOGIC;
        g7_V_we1 : OUT STD_LOGIC;
        g7_V_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component array_copy3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_in_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        data_in_V_ce0 : OUT STD_LOGIC;
        data_in_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_out_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        data_out_V_ce0 : OUT STD_LOGIC;
        data_out_V_we0 : OUT STD_LOGIC;
        data_out_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component cross_channel_debtde IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component cross_channel_debudo IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component cross_channel_debwdI IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    x_bar_V_U : component cross_channel_debtde
    generic map (
        DataWidth => 8,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => x_bar_V_address0,
        ce0 => x_bar_V_ce0,
        we0 => x_bar_V_we0,
        d0 => x_bar_V_d0,
        q0 => x_bar_V_q0,
        address1 => grp_my_filter_v12_fu_327_f_V_address1,
        ce1 => x_bar_V_ce1,
        q1 => x_bar_V_q1);

    x_old_V_U : component cross_channel_debudo
    generic map (
        DataWidth => 8,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => x_old_V_address0,
        ce0 => x_old_V_ce0,
        we0 => x_old_V_we0,
        d0 => grp_array_copy3_fu_341_data_out_V_d0,
        q0 => x_old_V_q0);

    x_V_U : component cross_channel_debudo
    generic map (
        DataWidth => 8,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => x_V_address0,
        ce0 => x_V_ce0,
        we0 => x_V_we0,
        d0 => x_V_d0,
        q0 => x_V_q0);

    y_1_V_U : component cross_channel_debwdI
    generic map (
        DataWidth => 8,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => y_1_V_address0,
        ce0 => y_1_V_ce0,
        we0 => y_1_V_we0,
        d0 => y_1_V_d0,
        q0 => y_1_V_q0,
        address1 => grp_my_filter_v12_fu_327_g1_V_address1,
        ce1 => y_1_V_ce1,
        we1 => y_1_V_we1,
        d1 => grp_my_filter_v12_fu_327_g1_V_d1);

    y_2_V_U : component cross_channel_debwdI
    generic map (
        DataWidth => 8,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => y_2_V_address0,
        ce0 => y_2_V_ce0,
        we0 => y_2_V_we0,
        d0 => y_2_V_d0,
        q0 => y_2_V_q0,
        address1 => grp_my_filter_v12_fu_327_g2_V_address1,
        ce1 => y_2_V_ce1,
        we1 => y_2_V_we1,
        d1 => grp_my_filter_v12_fu_327_g2_V_d1);

    y_3_V_U : component cross_channel_debudo
    generic map (
        DataWidth => 8,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => y_3_V_address0,
        ce0 => y_3_V_ce0,
        we0 => y_3_V_we0,
        d0 => y_3_V_d0,
        q0 => y_3_V_q0);

    y_4_V_U : component cross_channel_debwdI
    generic map (
        DataWidth => 8,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => y_4_V_address0,
        ce0 => y_4_V_ce0,
        we0 => y_4_V_we0,
        d0 => y_4_V_d0,
        q0 => y_4_V_q0,
        address1 => grp_my_filter_v12_fu_327_g4_V_address1,
        ce1 => y_4_V_ce1,
        we1 => y_4_V_we1,
        d1 => grp_my_filter_v12_fu_327_g4_V_d1);

    y_5_V_U : component cross_channel_debudo
    generic map (
        DataWidth => 8,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => y_5_V_address0,
        ce0 => y_5_V_ce0,
        we0 => y_5_V_we0,
        d0 => y_5_V_d0,
        q0 => y_5_V_q0);

    y_6_V_U : component cross_channel_debwdI
    generic map (
        DataWidth => 8,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => y_6_V_address0,
        ce0 => y_6_V_ce0,
        we0 => y_6_V_we0,
        d0 => y_6_V_d0,
        q0 => y_6_V_q0,
        address1 => grp_my_filter_v12_fu_327_g6_V_address1,
        ce1 => y_6_V_ce1,
        we1 => y_6_V_we1,
        d1 => grp_my_filter_v12_fu_327_g6_V_d1);

    y_7_V_U : component cross_channel_debwdI
    generic map (
        DataWidth => 8,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => y_7_V_address0,
        ce0 => y_7_V_ce0,
        we0 => y_7_V_we0,
        d0 => y_7_V_d0,
        q0 => y_7_V_q0,
        address1 => grp_my_filter_v12_fu_327_g7_V_address1,
        ce1 => y_7_V_ce1,
        we1 => y_7_V_we1,
        d1 => grp_my_filter_v12_fu_327_g7_V_d1);

    grp_ProxGS4_fu_316 : component ProxGS4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ProxGS4_fu_316_ap_start,
        ap_done => grp_ProxGS4_fu_316_ap_done,
        ap_idle => grp_ProxGS4_fu_316_ap_idle,
        ap_ready => grp_ProxGS4_fu_316_ap_ready,
        x_io_V_address0 => grp_ProxGS4_fu_316_x_io_V_address0,
        x_io_V_ce0 => grp_ProxGS4_fu_316_x_io_V_ce0,
        x_io_V_we0 => grp_ProxGS4_fu_316_x_io_V_we0,
        x_io_V_d0 => grp_ProxGS4_fu_316_x_io_V_d0,
        x_io_V_q0 => x_V_q0,
        coe_a_M_real_address0 => grp_ProxGS4_fu_316_coe_a_M_real_address0,
        coe_a_M_real_ce0 => grp_ProxGS4_fu_316_coe_a_M_real_ce0,
        coe_a_M_real_q0 => coe_a_M_real_q0,
        coe_a_M_imag_address0 => grp_ProxGS4_fu_316_coe_a_M_imag_address0,
        coe_a_M_imag_ce0 => grp_ProxGS4_fu_316_coe_a_M_imag_ce0,
        coe_a_M_imag_q0 => coe_a_M_imag_q0,
        coe_b_address0 => grp_ProxGS4_fu_316_coe_b_address0,
        coe_b_ce0 => grp_ProxGS4_fu_316_coe_b_ce0,
        coe_b_q0 => coe_b_q0);

    grp_my_filter_v12_fu_327 : component my_filter_v12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_my_filter_v12_fu_327_ap_start,
        ap_done => grp_my_filter_v12_fu_327_ap_done,
        ap_idle => grp_my_filter_v12_fu_327_ap_idle,
        ap_ready => grp_my_filter_v12_fu_327_ap_ready,
        f_V_address0 => grp_my_filter_v12_fu_327_f_V_address0,
        f_V_ce0 => grp_my_filter_v12_fu_327_f_V_ce0,
        f_V_q0 => x_bar_V_q0,
        f_V_address1 => grp_my_filter_v12_fu_327_f_V_address1,
        f_V_ce1 => grp_my_filter_v12_fu_327_f_V_ce1,
        f_V_q1 => x_bar_V_q1,
        adjChImg_V_address0 => grp_my_filter_v12_fu_327_adjChImg_V_address0,
        adjChImg_V_ce0 => grp_my_filter_v12_fu_327_adjChImg_V_ce0,
        adjChImg_V_q0 => adjChImg_V_q0,
        adjChImg_V_address1 => grp_my_filter_v12_fu_327_adjChImg_V_address1,
        adjChImg_V_ce1 => grp_my_filter_v12_fu_327_adjChImg_V_ce1,
        adjChImg_V_q1 => adjChImg_V_q1,
        g1_V_address0 => grp_my_filter_v12_fu_327_g1_V_address0,
        g1_V_ce0 => grp_my_filter_v12_fu_327_g1_V_ce0,
        g1_V_we0 => grp_my_filter_v12_fu_327_g1_V_we0,
        g1_V_d0 => grp_my_filter_v12_fu_327_g1_V_d0,
        g1_V_q0 => y_1_V_q0,
        g1_V_address1 => grp_my_filter_v12_fu_327_g1_V_address1,
        g1_V_ce1 => grp_my_filter_v12_fu_327_g1_V_ce1,
        g1_V_we1 => grp_my_filter_v12_fu_327_g1_V_we1,
        g1_V_d1 => grp_my_filter_v12_fu_327_g1_V_d1,
        g2_V_address0 => grp_my_filter_v12_fu_327_g2_V_address0,
        g2_V_ce0 => grp_my_filter_v12_fu_327_g2_V_ce0,
        g2_V_we0 => grp_my_filter_v12_fu_327_g2_V_we0,
        g2_V_d0 => grp_my_filter_v12_fu_327_g2_V_d0,
        g2_V_q0 => y_2_V_q0,
        g2_V_address1 => grp_my_filter_v12_fu_327_g2_V_address1,
        g2_V_ce1 => grp_my_filter_v12_fu_327_g2_V_ce1,
        g2_V_we1 => grp_my_filter_v12_fu_327_g2_V_we1,
        g2_V_d1 => grp_my_filter_v12_fu_327_g2_V_d1,
        g3_V_address0 => grp_my_filter_v12_fu_327_g3_V_address0,
        g3_V_ce0 => grp_my_filter_v12_fu_327_g3_V_ce0,
        g3_V_we0 => grp_my_filter_v12_fu_327_g3_V_we0,
        g3_V_d0 => grp_my_filter_v12_fu_327_g3_V_d0,
        g3_V_q0 => y_3_V_q0,
        g4_V_address0 => grp_my_filter_v12_fu_327_g4_V_address0,
        g4_V_ce0 => grp_my_filter_v12_fu_327_g4_V_ce0,
        g4_V_we0 => grp_my_filter_v12_fu_327_g4_V_we0,
        g4_V_d0 => grp_my_filter_v12_fu_327_g4_V_d0,
        g4_V_q0 => y_4_V_q0,
        g4_V_address1 => grp_my_filter_v12_fu_327_g4_V_address1,
        g4_V_ce1 => grp_my_filter_v12_fu_327_g4_V_ce1,
        g4_V_we1 => grp_my_filter_v12_fu_327_g4_V_we1,
        g4_V_d1 => grp_my_filter_v12_fu_327_g4_V_d1,
        g5_V_address0 => grp_my_filter_v12_fu_327_g5_V_address0,
        g5_V_ce0 => grp_my_filter_v12_fu_327_g5_V_ce0,
        g5_V_we0 => grp_my_filter_v12_fu_327_g5_V_we0,
        g5_V_d0 => grp_my_filter_v12_fu_327_g5_V_d0,
        g5_V_q0 => y_5_V_q0,
        g6_V_address0 => grp_my_filter_v12_fu_327_g6_V_address0,
        g6_V_ce0 => grp_my_filter_v12_fu_327_g6_V_ce0,
        g6_V_we0 => grp_my_filter_v12_fu_327_g6_V_we0,
        g6_V_d0 => grp_my_filter_v12_fu_327_g6_V_d0,
        g6_V_q0 => y_6_V_q0,
        g6_V_address1 => grp_my_filter_v12_fu_327_g6_V_address1,
        g6_V_ce1 => grp_my_filter_v12_fu_327_g6_V_ce1,
        g6_V_we1 => grp_my_filter_v12_fu_327_g6_V_we1,
        g6_V_d1 => grp_my_filter_v12_fu_327_g6_V_d1,
        g7_V_address0 => grp_my_filter_v12_fu_327_g7_V_address0,
        g7_V_ce0 => grp_my_filter_v12_fu_327_g7_V_ce0,
        g7_V_we0 => grp_my_filter_v12_fu_327_g7_V_we0,
        g7_V_d0 => grp_my_filter_v12_fu_327_g7_V_d0,
        g7_V_q0 => y_7_V_q0,
        g7_V_address1 => grp_my_filter_v12_fu_327_g7_V_address1,
        g7_V_ce1 => grp_my_filter_v12_fu_327_g7_V_ce1,
        g7_V_we1 => grp_my_filter_v12_fu_327_g7_V_we1,
        g7_V_d1 => grp_my_filter_v12_fu_327_g7_V_d1);

    grp_array_copy3_fu_341 : component array_copy3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_array_copy3_fu_341_ap_start,
        ap_done => grp_array_copy3_fu_341_ap_done,
        ap_idle => grp_array_copy3_fu_341_ap_idle,
        ap_ready => grp_array_copy3_fu_341_ap_ready,
        data_in_V_address0 => grp_array_copy3_fu_341_data_in_V_address0,
        data_in_V_ce0 => grp_array_copy3_fu_341_data_in_V_ce0,
        data_in_V_q0 => grp_array_copy3_fu_341_data_in_V_q0,
        data_out_V_address0 => grp_array_copy3_fu_341_data_out_V_address0,
        data_out_V_ce0 => grp_array_copy3_fu_341_data_out_V_ce0,
        data_out_V_we0 => grp_array_copy3_fu_341_data_out_V_we0,
        data_out_V_d0 => grp_array_copy3_fu_341_data_out_V_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_ProxGS4_fu_316_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ProxGS4_fu_316_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_ProxGS4_fu_316_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ProxGS4_fu_316_ap_ready = ap_const_logic_1)) then 
                    grp_ProxGS4_fu_316_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_array_copy3_fu_341_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_array_copy3_fu_341_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln78_fu_429_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln78_fu_429_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                    grp_array_copy3_fu_341_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_array_copy3_fu_341_ap_ready = ap_const_logic_1)) then 
                    grp_array_copy3_fu_341_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_my_filter_v12_fu_327_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_my_filter_v12_fu_327_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln78_fu_429_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    grp_my_filter_v12_fu_327_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_my_filter_v12_fu_327_ap_ready = ap_const_logic_1)) then 
                    grp_my_filter_v12_fu_327_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_i_reg_305_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                i_0_i_reg_305 <= i_reg_576;
            elsif (((grp_ProxGS4_fu_316_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                i_0_i_reg_305 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    indvar_flatten11_reg_283_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                indvar_flatten11_reg_283 <= add_ln121_reg_551;
            elsif (((grp_ProxGS4_fu_316_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                indvar_flatten11_reg_283 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_239_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln41_fu_350_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                indvar_flatten_reg_239 <= add_ln41_fu_356_p2;
            elsif (((grp_array_copy3_fu_341_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                indvar_flatten_reg_239 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    j_0_i_reg_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                j_0_i_reg_294 <= select_ln126_1_reg_556;
            elsif (((grp_ProxGS4_fu_316_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                j_0_i_reg_294 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    k_0_reg_272_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                k_0_reg_272 <= ap_const_lv2_0;
            elsif (((icmp_ln121_fu_441_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                k_0_reg_272 <= k_reg_543;
            end if; 
        end if;
    end process;

    x_0_i_reg_261_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln41_fu_350_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                x_0_i_reg_261 <= x_fu_423_p2;
            elsif (((grp_array_copy3_fu_341_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                x_0_i_reg_261 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    y_0_i_reg_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln41_fu_350_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                y_0_i_reg_250 <= select_ln46_1_fu_382_p3;
            elsif (((grp_array_copy3_fu_341_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                y_0_i_reg_250 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                add_ln121_reg_551 <= add_ln121_fu_447_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln121_fu_441_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                i_reg_576 <= i_fu_509_p2;
                select_ln126_1_reg_556 <= select_ln126_1_fu_473_p3;
                    zext_ln321_3_reg_561(15 downto 0) <= zext_ln321_3_fu_503_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                k_reg_543 <= k_fu_435_p2;
            end if;
        end if;
    end process;
    zext_ln321_3_reg_561(63 downto 16) <= "000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state5, icmp_ln41_fu_350_p2, ap_CS_fsm_state7, ap_CS_fsm_state11, icmp_ln121_fu_441_p2, grp_ProxGS4_fu_316_ap_done, grp_array_copy3_fu_341_ap_done, ap_CS_fsm_state4, ap_CS_fsm_state10, icmp_ln78_fu_429_p2, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state13, ap_block_state8_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_array_copy3_fu_341_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_array_copy3_fu_341_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln41_fu_350_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((icmp_ln78_fu_429_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((grp_ProxGS4_fu_316_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((icmp_ln121_fu_441_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state13 => 
                if (((grp_array_copy3_fu_341_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;

    Img_V_address0_assign_proc : process(grp_array_copy3_fu_341_data_in_V_address0, grp_array_copy3_fu_341_data_out_V_address0, ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            Img_V_address0 <= grp_array_copy3_fu_341_data_out_V_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            Img_V_address0 <= grp_array_copy3_fu_341_data_in_V_address0;
        else 
            Img_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    Img_V_ce0_assign_proc : process(grp_array_copy3_fu_341_data_in_V_ce0, grp_array_copy3_fu_341_data_out_V_ce0, ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            Img_V_ce0 <= grp_array_copy3_fu_341_data_out_V_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            Img_V_ce0 <= grp_array_copy3_fu_341_data_in_V_ce0;
        else 
            Img_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Img_V_d0 <= grp_array_copy3_fu_341_data_out_V_d0;

    Img_V_we0_assign_proc : process(grp_array_copy3_fu_341_data_out_V_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            Img_V_we0 <= grp_array_copy3_fu_341_data_out_V_we0;
        else 
            Img_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln121_fu_447_p2 <= std_logic_vector(unsigned(indvar_flatten11_reg_283) + unsigned(ap_const_lv15_1));
    add_ln321_1_fu_497_p2 <= std_logic_vector(unsigned(zext_ln321_2_fu_493_p1) + unsigned(zext_ln124_fu_489_p1));
    add_ln321_fu_406_p2 <= std_logic_vector(unsigned(zext_ln321_fu_402_p1) + unsigned(zext_ln44_fu_398_p1));
    add_ln41_fu_356_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_239) + unsigned(ap_const_lv15_1));
    adjChImg_V_address0 <= grp_my_filter_v12_fu_327_adjChImg_V_address0;
    adjChImg_V_address1 <= grp_my_filter_v12_fu_327_adjChImg_V_address1;
    adjChImg_V_ce0 <= grp_my_filter_v12_fu_327_adjChImg_V_ce0;
    adjChImg_V_ce1 <= grp_my_filter_v12_fu_327_adjChImg_V_ce1;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state8_on_subcall_done_assign_proc : process(grp_my_filter_v12_fu_327_ap_done, grp_array_copy3_fu_341_ap_done)
    begin
                ap_block_state8_on_subcall_done <= ((grp_array_copy3_fu_341_ap_done = ap_const_logic_0) or (grp_my_filter_v12_fu_327_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_array_copy3_fu_341_ap_done, ap_CS_fsm_state13)
    begin
        if ((((grp_array_copy3_fu_341_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_array_copy3_fu_341_ap_done, ap_CS_fsm_state13)
    begin
        if (((grp_array_copy3_fu_341_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    coe_a_M_imag_address0 <= grp_ProxGS4_fu_316_coe_a_M_imag_address0;
    coe_a_M_imag_ce0 <= grp_ProxGS4_fu_316_coe_a_M_imag_ce0;
    coe_a_M_real_address0 <= grp_ProxGS4_fu_316_coe_a_M_real_address0;
    coe_a_M_real_ce0 <= grp_ProxGS4_fu_316_coe_a_M_real_ce0;
    coe_b_address0 <= grp_ProxGS4_fu_316_coe_b_address0;
    coe_b_ce0 <= grp_ProxGS4_fu_316_coe_b_ce0;
    grp_ProxGS4_fu_316_ap_start <= grp_ProxGS4_fu_316_ap_start_reg;
    grp_array_copy3_fu_341_ap_start <= grp_array_copy3_fu_341_ap_start_reg;

    grp_array_copy3_fu_341_data_in_V_q0_assign_proc : process(Img_V_q0, x_V_q0, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_array_copy3_fu_341_data_in_V_q0 <= x_V_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_array_copy3_fu_341_data_in_V_q0 <= Img_V_q0;
        else 
            grp_array_copy3_fu_341_data_in_V_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_my_filter_v12_fu_327_ap_start <= grp_my_filter_v12_fu_327_ap_start_reg;
    i_fu_509_p2 <= std_logic_vector(unsigned(select_ln126_fu_465_p3) + unsigned(ap_const_lv8_1));
    icmp_ln121_fu_441_p2 <= "1" when (indvar_flatten11_reg_283 = ap_const_lv15_4000) else "0";
    icmp_ln123_fu_459_p2 <= "1" when (i_0_i_reg_305 = ap_const_lv8_80) else "0";
    icmp_ln41_fu_350_p2 <= "1" when (indvar_flatten_reg_239 = ap_const_lv15_4000) else "0";
    icmp_ln43_fu_368_p2 <= "1" when (x_0_i_reg_261 = ap_const_lv8_80) else "0";
    icmp_ln78_fu_429_p2 <= "1" when (k_0_reg_272 = ap_const_lv2_3) else "0";
    j_fu_453_p2 <= std_logic_vector(unsigned(j_0_i_reg_294) + unsigned(ap_const_lv8_1));
    k_fu_435_p2 <= std_logic_vector(unsigned(k_0_reg_272) + unsigned(ap_const_lv2_1));
    select_ln126_1_fu_473_p3 <= 
        j_fu_453_p2 when (icmp_ln123_fu_459_p2(0) = '1') else 
        j_0_i_reg_294;
    select_ln126_fu_465_p3 <= 
        ap_const_lv8_0 when (icmp_ln123_fu_459_p2(0) = '1') else 
        i_0_i_reg_305;
    select_ln46_1_fu_382_p3 <= 
        y_fu_362_p2 when (icmp_ln43_fu_368_p2(0) = '1') else 
        y_0_i_reg_250;
    select_ln46_fu_374_p3 <= 
        ap_const_lv8_0 when (icmp_ln43_fu_368_p2(0) = '1') else 
        x_0_i_reg_261;
    sub_ln214_fu_515_p2 <= std_logic_vector(unsigned(x_V_q0) - unsigned(x_old_V_q0));
    tmp_fu_390_p3 <= (select_ln46_1_fu_382_p3 & ap_const_lv7_0);
    tmp_s_fu_481_p3 <= (select_ln126_1_fu_473_p3 & ap_const_lv7_0);

    x_V_address0_assign_proc : process(ap_CS_fsm_state11, zext_ln321_3_fu_503_p1, grp_ProxGS4_fu_316_x_io_V_address0, grp_array_copy3_fu_341_data_in_V_address0, grp_array_copy3_fu_341_data_out_V_address0, ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            x_V_address0 <= zext_ln321_3_fu_503_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            x_V_address0 <= grp_array_copy3_fu_341_data_out_V_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            x_V_address0 <= grp_array_copy3_fu_341_data_in_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            x_V_address0 <= grp_ProxGS4_fu_316_x_io_V_address0;
        else 
            x_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    x_V_ce0_assign_proc : process(ap_CS_fsm_state11, grp_ProxGS4_fu_316_x_io_V_ce0, grp_array_copy3_fu_341_data_in_V_ce0, grp_array_copy3_fu_341_data_out_V_ce0, ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            x_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            x_V_ce0 <= grp_array_copy3_fu_341_data_out_V_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            x_V_ce0 <= grp_array_copy3_fu_341_data_in_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            x_V_ce0 <= grp_ProxGS4_fu_316_x_io_V_ce0;
        else 
            x_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    x_V_d0_assign_proc : process(grp_ProxGS4_fu_316_x_io_V_d0, grp_array_copy3_fu_341_data_out_V_d0, ap_CS_fsm_state4, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            x_V_d0 <= grp_array_copy3_fu_341_data_out_V_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            x_V_d0 <= grp_ProxGS4_fu_316_x_io_V_d0;
        else 
            x_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    x_V_we0_assign_proc : process(grp_ProxGS4_fu_316_x_io_V_we0, grp_array_copy3_fu_341_data_out_V_we0, ap_CS_fsm_state4, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            x_V_we0 <= grp_array_copy3_fu_341_data_out_V_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            x_V_we0 <= grp_ProxGS4_fu_316_x_io_V_we0;
        else 
            x_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    x_bar_V_address0_assign_proc : process(zext_ln321_3_reg_561, grp_my_filter_v12_fu_327_f_V_address0, grp_array_copy3_fu_341_data_out_V_address0, ap_CS_fsm_state12, ap_CS_fsm_state8, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            x_bar_V_address0 <= zext_ln321_3_reg_561(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            x_bar_V_address0 <= grp_array_copy3_fu_341_data_out_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            x_bar_V_address0 <= grp_my_filter_v12_fu_327_f_V_address0;
        else 
            x_bar_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    x_bar_V_ce0_assign_proc : process(grp_my_filter_v12_fu_327_f_V_ce0, grp_array_copy3_fu_341_data_out_V_ce0, ap_CS_fsm_state12, ap_CS_fsm_state8, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            x_bar_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            x_bar_V_ce0 <= grp_array_copy3_fu_341_data_out_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            x_bar_V_ce0 <= grp_my_filter_v12_fu_327_f_V_ce0;
        else 
            x_bar_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    x_bar_V_ce1_assign_proc : process(grp_my_filter_v12_fu_327_f_V_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            x_bar_V_ce1 <= grp_my_filter_v12_fu_327_f_V_ce1;
        else 
            x_bar_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    x_bar_V_d0_assign_proc : process(grp_array_copy3_fu_341_data_out_V_d0, ap_CS_fsm_state12, ap_CS_fsm_state2, sub_ln214_fu_515_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            x_bar_V_d0 <= sub_ln214_fu_515_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            x_bar_V_d0 <= grp_array_copy3_fu_341_data_out_V_d0;
        else 
            x_bar_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    x_bar_V_we0_assign_proc : process(grp_array_copy3_fu_341_data_out_V_we0, ap_CS_fsm_state12, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            x_bar_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            x_bar_V_we0 <= grp_array_copy3_fu_341_data_out_V_we0;
        else 
            x_bar_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_fu_423_p2 <= std_logic_vector(unsigned(select_ln46_fu_374_p3) + unsigned(ap_const_lv8_1));

    x_old_V_address0_assign_proc : process(ap_CS_fsm_state11, zext_ln321_3_fu_503_p1, grp_array_copy3_fu_341_data_out_V_address0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            x_old_V_address0 <= zext_ln321_3_fu_503_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            x_old_V_address0 <= grp_array_copy3_fu_341_data_out_V_address0;
        else 
            x_old_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    x_old_V_ce0_assign_proc : process(ap_CS_fsm_state11, grp_array_copy3_fu_341_data_out_V_ce0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            x_old_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            x_old_V_ce0 <= grp_array_copy3_fu_341_data_out_V_ce0;
        else 
            x_old_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    x_old_V_we0_assign_proc : process(grp_array_copy3_fu_341_data_out_V_we0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            x_old_V_we0 <= grp_array_copy3_fu_341_data_out_V_we0;
        else 
            x_old_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    y_1_V_address0_assign_proc : process(ap_CS_fsm_state5, grp_my_filter_v12_fu_327_g1_V_address0, ap_CS_fsm_state8, zext_ln321_1_fu_412_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_1_V_address0 <= zext_ln321_1_fu_412_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_1_V_address0 <= grp_my_filter_v12_fu_327_g1_V_address0;
        else 
            y_1_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    y_1_V_ce0_assign_proc : process(ap_CS_fsm_state5, grp_my_filter_v12_fu_327_g1_V_ce0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_1_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_1_V_ce0 <= grp_my_filter_v12_fu_327_g1_V_ce0;
        else 
            y_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    y_1_V_ce1_assign_proc : process(grp_my_filter_v12_fu_327_g1_V_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_1_V_ce1 <= grp_my_filter_v12_fu_327_g1_V_ce1;
        else 
            y_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    y_1_V_d0_assign_proc : process(ap_CS_fsm_state5, grp_my_filter_v12_fu_327_g1_V_d0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_1_V_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_1_V_d0 <= grp_my_filter_v12_fu_327_g1_V_d0;
        else 
            y_1_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    y_1_V_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln41_fu_350_p2, grp_my_filter_v12_fu_327_g1_V_we0, ap_CS_fsm_state8)
    begin
        if (((icmp_ln41_fu_350_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            y_1_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_1_V_we0 <= grp_my_filter_v12_fu_327_g1_V_we0;
        else 
            y_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    y_1_V_we1_assign_proc : process(grp_my_filter_v12_fu_327_g1_V_we1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_1_V_we1 <= grp_my_filter_v12_fu_327_g1_V_we1;
        else 
            y_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    y_2_V_address0_assign_proc : process(ap_CS_fsm_state5, grp_my_filter_v12_fu_327_g2_V_address0, ap_CS_fsm_state8, zext_ln321_1_fu_412_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_2_V_address0 <= zext_ln321_1_fu_412_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_2_V_address0 <= grp_my_filter_v12_fu_327_g2_V_address0;
        else 
            y_2_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    y_2_V_ce0_assign_proc : process(ap_CS_fsm_state5, grp_my_filter_v12_fu_327_g2_V_ce0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_2_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_2_V_ce0 <= grp_my_filter_v12_fu_327_g2_V_ce0;
        else 
            y_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    y_2_V_ce1_assign_proc : process(grp_my_filter_v12_fu_327_g2_V_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_2_V_ce1 <= grp_my_filter_v12_fu_327_g2_V_ce1;
        else 
            y_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    y_2_V_d0_assign_proc : process(ap_CS_fsm_state5, grp_my_filter_v12_fu_327_g2_V_d0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_2_V_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_2_V_d0 <= grp_my_filter_v12_fu_327_g2_V_d0;
        else 
            y_2_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    y_2_V_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln41_fu_350_p2, grp_my_filter_v12_fu_327_g2_V_we0, ap_CS_fsm_state8)
    begin
        if (((icmp_ln41_fu_350_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            y_2_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_2_V_we0 <= grp_my_filter_v12_fu_327_g2_V_we0;
        else 
            y_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    y_2_V_we1_assign_proc : process(grp_my_filter_v12_fu_327_g2_V_we1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_2_V_we1 <= grp_my_filter_v12_fu_327_g2_V_we1;
        else 
            y_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    y_3_V_address0_assign_proc : process(ap_CS_fsm_state5, grp_my_filter_v12_fu_327_g3_V_address0, ap_CS_fsm_state8, zext_ln321_1_fu_412_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_3_V_address0 <= zext_ln321_1_fu_412_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_3_V_address0 <= grp_my_filter_v12_fu_327_g3_V_address0;
        else 
            y_3_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    y_3_V_ce0_assign_proc : process(ap_CS_fsm_state5, grp_my_filter_v12_fu_327_g3_V_ce0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_3_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_3_V_ce0 <= grp_my_filter_v12_fu_327_g3_V_ce0;
        else 
            y_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    y_3_V_d0_assign_proc : process(ap_CS_fsm_state5, grp_my_filter_v12_fu_327_g3_V_d0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_3_V_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_3_V_d0 <= grp_my_filter_v12_fu_327_g3_V_d0;
        else 
            y_3_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    y_3_V_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln41_fu_350_p2, grp_my_filter_v12_fu_327_g3_V_we0, ap_CS_fsm_state8)
    begin
        if (((icmp_ln41_fu_350_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            y_3_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_3_V_we0 <= grp_my_filter_v12_fu_327_g3_V_we0;
        else 
            y_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    y_4_V_address0_assign_proc : process(ap_CS_fsm_state5, grp_my_filter_v12_fu_327_g4_V_address0, ap_CS_fsm_state8, zext_ln321_1_fu_412_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_4_V_address0 <= zext_ln321_1_fu_412_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_4_V_address0 <= grp_my_filter_v12_fu_327_g4_V_address0;
        else 
            y_4_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    y_4_V_ce0_assign_proc : process(ap_CS_fsm_state5, grp_my_filter_v12_fu_327_g4_V_ce0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_4_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_4_V_ce0 <= grp_my_filter_v12_fu_327_g4_V_ce0;
        else 
            y_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    y_4_V_ce1_assign_proc : process(grp_my_filter_v12_fu_327_g4_V_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_4_V_ce1 <= grp_my_filter_v12_fu_327_g4_V_ce1;
        else 
            y_4_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    y_4_V_d0_assign_proc : process(ap_CS_fsm_state5, grp_my_filter_v12_fu_327_g4_V_d0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_4_V_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_4_V_d0 <= grp_my_filter_v12_fu_327_g4_V_d0;
        else 
            y_4_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    y_4_V_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln41_fu_350_p2, grp_my_filter_v12_fu_327_g4_V_we0, ap_CS_fsm_state8)
    begin
        if (((icmp_ln41_fu_350_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            y_4_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_4_V_we0 <= grp_my_filter_v12_fu_327_g4_V_we0;
        else 
            y_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    y_4_V_we1_assign_proc : process(grp_my_filter_v12_fu_327_g4_V_we1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_4_V_we1 <= grp_my_filter_v12_fu_327_g4_V_we1;
        else 
            y_4_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    y_5_V_address0_assign_proc : process(ap_CS_fsm_state5, grp_my_filter_v12_fu_327_g5_V_address0, ap_CS_fsm_state8, zext_ln321_1_fu_412_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_5_V_address0 <= zext_ln321_1_fu_412_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_5_V_address0 <= grp_my_filter_v12_fu_327_g5_V_address0;
        else 
            y_5_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    y_5_V_ce0_assign_proc : process(ap_CS_fsm_state5, grp_my_filter_v12_fu_327_g5_V_ce0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_5_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_5_V_ce0 <= grp_my_filter_v12_fu_327_g5_V_ce0;
        else 
            y_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    y_5_V_d0_assign_proc : process(ap_CS_fsm_state5, grp_my_filter_v12_fu_327_g5_V_d0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_5_V_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_5_V_d0 <= grp_my_filter_v12_fu_327_g5_V_d0;
        else 
            y_5_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    y_5_V_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln41_fu_350_p2, grp_my_filter_v12_fu_327_g5_V_we0, ap_CS_fsm_state8)
    begin
        if (((icmp_ln41_fu_350_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            y_5_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_5_V_we0 <= grp_my_filter_v12_fu_327_g5_V_we0;
        else 
            y_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    y_6_V_address0_assign_proc : process(ap_CS_fsm_state5, grp_my_filter_v12_fu_327_g6_V_address0, ap_CS_fsm_state8, zext_ln321_1_fu_412_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_6_V_address0 <= zext_ln321_1_fu_412_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_6_V_address0 <= grp_my_filter_v12_fu_327_g6_V_address0;
        else 
            y_6_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    y_6_V_ce0_assign_proc : process(ap_CS_fsm_state5, grp_my_filter_v12_fu_327_g6_V_ce0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_6_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_6_V_ce0 <= grp_my_filter_v12_fu_327_g6_V_ce0;
        else 
            y_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    y_6_V_ce1_assign_proc : process(grp_my_filter_v12_fu_327_g6_V_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_6_V_ce1 <= grp_my_filter_v12_fu_327_g6_V_ce1;
        else 
            y_6_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    y_6_V_d0_assign_proc : process(ap_CS_fsm_state5, grp_my_filter_v12_fu_327_g6_V_d0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_6_V_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_6_V_d0 <= grp_my_filter_v12_fu_327_g6_V_d0;
        else 
            y_6_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    y_6_V_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln41_fu_350_p2, grp_my_filter_v12_fu_327_g6_V_we0, ap_CS_fsm_state8)
    begin
        if (((icmp_ln41_fu_350_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            y_6_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_6_V_we0 <= grp_my_filter_v12_fu_327_g6_V_we0;
        else 
            y_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    y_6_V_we1_assign_proc : process(grp_my_filter_v12_fu_327_g6_V_we1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_6_V_we1 <= grp_my_filter_v12_fu_327_g6_V_we1;
        else 
            y_6_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    y_7_V_address0_assign_proc : process(ap_CS_fsm_state5, grp_my_filter_v12_fu_327_g7_V_address0, ap_CS_fsm_state8, zext_ln321_1_fu_412_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_7_V_address0 <= zext_ln321_1_fu_412_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_7_V_address0 <= grp_my_filter_v12_fu_327_g7_V_address0;
        else 
            y_7_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    y_7_V_ce0_assign_proc : process(ap_CS_fsm_state5, grp_my_filter_v12_fu_327_g7_V_ce0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_7_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_7_V_ce0 <= grp_my_filter_v12_fu_327_g7_V_ce0;
        else 
            y_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    y_7_V_ce1_assign_proc : process(grp_my_filter_v12_fu_327_g7_V_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_7_V_ce1 <= grp_my_filter_v12_fu_327_g7_V_ce1;
        else 
            y_7_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    y_7_V_d0_assign_proc : process(ap_CS_fsm_state5, grp_my_filter_v12_fu_327_g7_V_d0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            y_7_V_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_7_V_d0 <= grp_my_filter_v12_fu_327_g7_V_d0;
        else 
            y_7_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    y_7_V_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln41_fu_350_p2, grp_my_filter_v12_fu_327_g7_V_we0, ap_CS_fsm_state8)
    begin
        if (((icmp_ln41_fu_350_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            y_7_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_7_V_we0 <= grp_my_filter_v12_fu_327_g7_V_we0;
        else 
            y_7_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    y_7_V_we1_assign_proc : process(grp_my_filter_v12_fu_327_g7_V_we1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            y_7_V_we1 <= grp_my_filter_v12_fu_327_g7_V_we1;
        else 
            y_7_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    y_fu_362_p2 <= std_logic_vector(unsigned(y_0_i_reg_250) + unsigned(ap_const_lv8_1));
    zext_ln124_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_481_p3),16));
    zext_ln321_1_fu_412_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_fu_406_p2),64));
    zext_ln321_2_fu_493_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln126_fu_465_p3),16));
    zext_ln321_3_fu_503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_1_fu_497_p2),64));
    zext_ln321_fu_402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln46_fu_374_p3),16));
    zext_ln44_fu_398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_390_p3),16));
end behav;
