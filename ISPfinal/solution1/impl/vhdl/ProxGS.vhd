-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ProxGS is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_io_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    x_io_V_ce0 : OUT STD_LOGIC;
    x_io_V_we0 : OUT STD_LOGIC;
    x_io_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    x_io_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    coe_a_M_real_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    coe_a_M_real_V_ce0 : OUT STD_LOGIC;
    coe_a_M_real_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    coe_a_M_imag_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    coe_a_M_imag_V_ce0 : OUT STD_LOGIC;
    coe_a_M_imag_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    coe_b_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    coe_b_V_ce0 : OUT STD_LOGIC;
    coe_b_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of ProxGS is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv15_4000 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv14_3FFF : STD_LOGIC_VECTOR (13 downto 0) := "11111111111111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_FFFFFFCB : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001011";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv18_3FFFF : STD_LOGIC_VECTOR (17 downto 0) := "111111111111111111";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv18_3FFCB : STD_LOGIC_VECTOR (17 downto 0) := "111111111111001011";
    constant ap_const_lv32_FFFFFFCA : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv11_3FE : STD_LOGIC_VECTOR (10 downto 0) := "01111111110";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_FF1 : STD_LOGIC_VECTOR (11 downto 0) := "111111110001";
    constant ap_const_lv12_F : STD_LOGIC_VECTOR (11 downto 0) := "000000001111";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_283 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_0_i_reg_294 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_0_i_reg_305 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten11_reg_316 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_0_reg_327 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_0_reg_338 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten23_reg_349 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_0_i48_reg_360 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_0_i49_reg_371 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln45_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln45_reg_1977 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln45_fu_398_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln45_fu_416_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln45_reg_1986 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln45_1_fu_424_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln45_1_reg_1991 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln45_fu_432_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln45_reg_1996 : STD_LOGIC_VECTOR (6 downto 0);
    signal x_5_fu_463_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln24_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state6_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter7 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter8 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter9 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter10 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter11 : BOOLEAN;
    signal ap_block_state18_pp1_stage0_iter12 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter13 : BOOLEAN;
    signal ap_block_state20_pp1_stage0_iter14 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter15 : BOOLEAN;
    signal ap_block_state22_pp1_stage0_iter16 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter17 : BOOLEAN;
    signal ap_block_state24_pp1_stage0_iter18 : BOOLEAN;
    signal ap_block_state25_pp1_stage0_iter19 : BOOLEAN;
    signal ap_block_state26_pp1_stage0_iter20 : BOOLEAN;
    signal ap_block_state27_pp1_stage0_iter21 : BOOLEAN;
    signal ap_block_state28_pp1_stage0_iter22 : BOOLEAN;
    signal ap_block_state29_pp1_stage0_iter23 : BOOLEAN;
    signal ap_block_state30_pp1_stage0_iter24 : BOOLEAN;
    signal ap_block_state31_pp1_stage0_iter25 : BOOLEAN;
    signal ap_block_state32_pp1_stage0_iter26 : BOOLEAN;
    signal ap_block_state33_pp1_stage0_iter27 : BOOLEAN;
    signal ap_block_state34_pp1_stage0_iter28 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln24_reg_2011_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_2011_pp1_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln24_fu_511_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal select_ln24_1_fu_537_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln24_1_reg_2020 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln30_fu_579_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter16_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter19_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter20_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter21_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter22_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter23_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter24_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter25_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter26_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_reg_2025_pp1_iter27_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1265_1_fu_594_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1265_1_reg_2030 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_fu_600_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_13_fu_618_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_13_reg_2060 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_14_fu_642_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_14_reg_2065 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1148_fu_648_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln885_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_reg_2076 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_reg_2076_pp1_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_reg_2076_pp1_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_reg_2076_pp1_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_48_fu_668_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_48_reg_2081 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_48_reg_2081_pp1_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_48_reg_2081_pp1_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_3_fu_682_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_V_3_reg_2086 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_V_3_reg_2086_pp1_iter23_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln885_1_fu_690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_1_reg_2093 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_1_reg_2093_pp1_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_1_reg_2093_pp1_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_1_reg_2093_pp1_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_51_fu_696_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_51_reg_2098 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_51_reg_2098_pp1_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_51_reg_2098_pp1_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_5_fu_710_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_V_5_reg_2103 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_V_5_reg_2103_pp1_iter23_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln888_fu_718_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln888_reg_2110 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln894_fu_747_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln894_reg_2116 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln894_fu_753_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln894_reg_2122 : STD_LOGIC_VECTOR (17 downto 0);
    signal lsb_index_fu_757_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_reg_2127 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_reg_2133 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln897_fu_777_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln897_reg_2138 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln893_fu_783_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_reg_2143 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_reg_2143_pp1_iter24_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln888_1_fu_787_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln888_1_reg_2148 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln894_1_fu_816_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln894_1_reg_2154 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln894_1_fu_822_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln894_1_reg_2160 : STD_LOGIC_VECTOR (17 downto 0);
    signal lsb_index_1_fu_826_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_1_reg_2165 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_90_reg_2171 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln897_1_fu_846_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln897_1_reg_2176 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln893_1_fu_852_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_1_reg_2181 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_1_reg_2181_pp1_iter24_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal m_s_reg_2186 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_88_reg_2191 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_3_reg_2196 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_92_reg_2201 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_50_fu_1190_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_50_reg_2206 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_53_fu_1230_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_53_reg_2211 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_1242_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_reg_2216 : STD_LOGIC_VECTOR (63 downto 0);
    signal man_V_2_fu_1296_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_2_reg_2221 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln571_fu_1304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_reg_2226 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_1344_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_2231 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_fu_1352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_reg_2237 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_fu_1358_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln583_reg_2242 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln585_fu_1362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_reg_2248 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_fu_1396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_reg_2253 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_fu_1402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_reg_2258 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_fu_1420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_reg_2264 : STD_LOGIC_VECTOR (0 downto 0);
    signal ireg_V_1_fu_1426_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_1_reg_2270 : STD_LOGIC_VECTOR (63 downto 0);
    signal man_V_5_fu_1480_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_5_reg_2275 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln571_1_fu_1488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_1_reg_2280 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_25_fu_1528_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_25_reg_2285 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_1_fu_1536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_1_reg_2291 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_1_fu_1542_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln583_1_reg_2296 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln585_1_fu_1546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_1_reg_2302 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_1_fu_1580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_1_reg_2307 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_2_fu_1586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_2_reg_2312 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_1_fu_1604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_1_reg_2318 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_2_fu_1692_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln603_2_reg_2324 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln603_2_fu_1700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_2_reg_2329 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_6_fu_1788_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln603_6_reg_2334 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln603_5_fu_1796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_5_reg_2339 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln60_fu_1823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln60_reg_2344 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state37_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state38_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state39_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln60_reg_2344_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln60_fu_1829_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal select_ln60_fu_1847_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln60_reg_2353 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln60_reg_2353_pp2_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln60_1_fu_1855_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln60_1_reg_2358 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln60_1_reg_2358_pp2_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal x_6_fu_1890_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln359_fu_1934_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln359_reg_2374 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_fft_top_fu_382_ap_ready : STD_LOGIC;
    signal grp_fft_top_fu_382_ap_done : STD_LOGIC;
    signal ap_sync_grp_fft_top_fu_382_ap_ready : STD_LOGIC;
    signal ap_sync_grp_fft_top_fu_382_ap_done : STD_LOGIC;
    signal ap_block_state5_on_subcall_done : BOOLEAN;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state6 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter28 : STD_LOGIC := '0';
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_block_state36_on_subcall_done : BOOLEAN;
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state37 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal MAD_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal MAD_ce0 : STD_LOGIC;
    signal MAD_we0 : STD_LOGIC;
    signal MAD_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal MAD_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_result_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_ce0 : STD_LOGIC;
    signal fft_result_we0 : STD_LOGIC;
    signal fft_result_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp9_ce0 : STD_LOGIC;
    signal tmp9_we0 : STD_LOGIC;
    signal tmp9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_top_fu_382_direction : STD_LOGIC;
    signal grp_fft_top_fu_382_in_r_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fft_top_fu_382_in_r_ce0 : STD_LOGIC;
    signal grp_fft_top_fu_382_in_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_top_fu_382_in_r_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_top_fu_382_in_r_we0 : STD_LOGIC;
    signal grp_fft_top_fu_382_in_r_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fft_top_fu_382_in_r_ce1 : STD_LOGIC;
    signal grp_fft_top_fu_382_in_r_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_top_fu_382_in_r_we1 : STD_LOGIC;
    signal grp_fft_top_fu_382_out_r_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fft_top_fu_382_out_r_ce0 : STD_LOGIC;
    signal grp_fft_top_fu_382_out_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_top_fu_382_out_r_we0 : STD_LOGIC;
    signal grp_fft_top_fu_382_out_r_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fft_top_fu_382_out_r_ce1 : STD_LOGIC;
    signal grp_fft_top_fu_382_out_r_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_top_fu_382_out_r_we1 : STD_LOGIC;
    signal grp_fft_top_fu_382_ovflo : STD_LOGIC;
    signal grp_fft_top_fu_382_direction_ap_ack : STD_LOGIC;
    signal grp_fft_top_fu_382_ap_start : STD_LOGIC;
    signal grp_fft_top_fu_382_ovflo_ap_vld : STD_LOGIC;
    signal grp_fft_top_fu_382_ap_idle : STD_LOGIC;
    signal grp_fft_top_fu_382_ap_continue : STD_LOGIC;
    signal ap_phi_mux_y_0_i_phi_fu_298_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_y_0_phi_fu_331_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_y_0_i48_phi_fu_364_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal grp_fft_top_fu_382_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_sync_reg_grp_fft_top_fu_382_ap_ready : STD_LOGIC := '0';
    signal ap_sync_reg_grp_fft_top_fu_382_ap_done : STD_LOGIC := '0';
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal zext_ln446_1_fu_458_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln51_fu_485_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln67_fu_1885_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln180_5_fu_1962_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln47_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_5_fu_404_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_40_fu_436_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln47_1_fu_444_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln446_fu_448_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln446_fu_452_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln47_fu_476_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln49_mid2_fu_469_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_84_fu_479_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln728_fu_490_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_fu_523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_fu_517_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln24_fu_545_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_41_fu_557_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln24_fu_529_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln26_fu_569_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln29_mid2_fu_549_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_fu_573_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1265_fu_584_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln26_1_fu_565_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1265_fu_588_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_12_fu_606_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_fu_610_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_V_fu_614_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_18_fu_624_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_7_fu_634_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_V_6_fu_638_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_652_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_657_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_652_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln889_fu_676_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_657_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln889_1_fu_704_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_s_fu_721_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_49_fu_731_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_fu_739_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln897_fu_773_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Result_38_fu_790_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_52_fu_800_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_1_fu_808_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln897_1_fu_842_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln897_fu_861_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal lshr_ln897_fu_864_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_34_fu_870_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln897_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln897_1_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_87_fu_887_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln899_fu_900_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_35_fu_905_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln899_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln899_fu_912_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_fu_881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln899_2_fu_918_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln907_1_fu_935_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln908_fu_943_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln908_fu_948_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln908_fu_958_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_fu_932_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_1_fu_963_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln908_fu_938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln908_fu_954_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln908_fu_967_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln_fu_924_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln911_fu_981_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_1_fu_973_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_2_fu_985_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln897_1_fu_1014_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal lshr_ln897_1_fu_1017_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_40_fu_1023_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln897_2_fu_1009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln897_3_fu_1028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_91_fu_1040_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln899_1_fu_1053_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_41_fu_1058_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln899_1_fu_1047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln899_1_fu_1065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_1_fu_1034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln899_fu_1071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln907_2_fu_1088_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln908_1_fu_1096_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln908_1_fu_1101_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln908_1_fu_1111_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_9_fu_1085_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_3_fu_1116_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln908_1_fu_1091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln908_2_fu_1107_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln908_1_fu_1120_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln899_1_fu_1077_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln911_1_fu_1134_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_10_fu_1126_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_12_fu_1138_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln915_fu_1172_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln915_fu_1165_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln915_fu_1177_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_15_fu_1162_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_fu_1183_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln915_1_fu_1212_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln915_1_fu_1205_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln915_1_fu_1217_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_16_fu_1202_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_1223_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_tmp_V_fu_1260_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_fu_1274_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_38_fu_1278_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_55_fu_1286_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_54_fu_1252_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_1_fu_1290_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln556_fu_1248_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln461_fu_1270_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_1310_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_94_fu_1316_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln581_fu_1326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_fu_1332_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_fu_1338_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_95_fu_1368_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln582_fu_1384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_fu_1390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_fu_1408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_fu_1378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_fu_1414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exp_tmp_V_1_fu_1444_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_1_fu_1458_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_39_fu_1462_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_57_fu_1470_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_56_fu_1436_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_4_fu_1474_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln556_1_fu_1432_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln461_1_fu_1454_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_1_fu_1494_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_98_fu_1500_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln581_1_fu_1510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_1_fu_1516_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_1_fu_1522_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_99_fu_1552_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln582_1_fu_1568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_1_fu_1574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_1_fu_1592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_1_fu_1562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_1_fu_1598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln581_1_fu_1613_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln586_fu_1616_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_fu_1620_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_96_fu_1629_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln581_fu_1610_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal xor_ln571_fu_1649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_fu_1659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_fu_1644_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln588_fu_1636_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln585_1_fu_1664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln586_fu_1625_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln582_fu_1654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_fu_1676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_fu_1669_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln603_1_fu_1681_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln603_1_fu_1687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln581_3_fu_1709_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln586_1_fu_1712_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_1_fu_1716_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_100_fu_1725_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln581_2_fu_1706_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal xor_ln571_1_fu_1745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_1_fu_1755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_1_fu_1740_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln588_1_fu_1732_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln585_3_fu_1760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln586_1_fu_1721_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln582_1_fu_1750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_3_fu_1772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_4_fu_1765_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln603_5_fu_1777_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln603_4_fu_1783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_7_fu_1808_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln603_3_fu_1802_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln62_fu_1841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_6_fu_1835_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln60_fu_1863_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln62_fu_1875_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln65_mid2_fu_1867_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_101_fu_1879_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln851_fu_1912_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_47_fu_1904_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln851_fu_1916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_fu_1896_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln850_fu_1922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln850_fu_1928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_1942_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln180_fu_1953_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln62_1_fu_1949_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln180_fu_1956_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;

    component fft_top IS
    port (
        direction : IN STD_LOGIC;
        in_r_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        in_r_ce0 : OUT STD_LOGIC;
        in_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        in_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        in_r_we0 : OUT STD_LOGIC;
        in_r_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        in_r_ce1 : OUT STD_LOGIC;
        in_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        in_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        in_r_we1 : OUT STD_LOGIC;
        out_r_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_r_we0 : OUT STD_LOGIC;
        out_r_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        out_r_ce1 : OUT STD_LOGIC;
        out_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_r_we1 : OUT STD_LOGIC;
        ovflo : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        direction_ap_vld : IN STD_LOGIC;
        direction_ap_ack : OUT STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ovflo_ap_vld : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component cross_channel_debncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component ProxGS_MAD IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    MAD_U : component ProxGS_MAD
    generic map (
        DataWidth => 32,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => MAD_address0,
        ce0 => MAD_ce0,
        we0 => MAD_we0,
        d0 => MAD_d0,
        q0 => MAD_q0);

    fft_result_U : component ProxGS_MAD
    generic map (
        DataWidth => 32,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fft_result_address0,
        ce0 => fft_result_ce0,
        we0 => fft_result_we0,
        d0 => grp_fft_top_fu_382_out_r_d0,
        q0 => fft_result_q0);

    tmp9_U : component ProxGS_MAD
    generic map (
        DataWidth => 32,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp9_address0,
        ce0 => tmp9_ce0,
        we0 => tmp9_we0,
        d0 => tmp9_d0,
        q0 => tmp9_q0);

    grp_fft_top_fu_382 : component fft_top
    port map (
        direction => grp_fft_top_fu_382_direction,
        in_r_address0 => grp_fft_top_fu_382_in_r_address0,
        in_r_ce0 => grp_fft_top_fu_382_in_r_ce0,
        in_r_d0 => grp_fft_top_fu_382_in_r_d0,
        in_r_q0 => grp_fft_top_fu_382_in_r_q0,
        in_r_we0 => grp_fft_top_fu_382_in_r_we0,
        in_r_address1 => grp_fft_top_fu_382_in_r_address1,
        in_r_ce1 => grp_fft_top_fu_382_in_r_ce1,
        in_r_d1 => grp_fft_top_fu_382_in_r_d1,
        in_r_q1 => ap_const_lv32_0,
        in_r_we1 => grp_fft_top_fu_382_in_r_we1,
        out_r_address0 => grp_fft_top_fu_382_out_r_address0,
        out_r_ce0 => grp_fft_top_fu_382_out_r_ce0,
        out_r_d0 => grp_fft_top_fu_382_out_r_d0,
        out_r_q0 => ap_const_lv32_0,
        out_r_we0 => grp_fft_top_fu_382_out_r_we0,
        out_r_address1 => grp_fft_top_fu_382_out_r_address1,
        out_r_ce1 => grp_fft_top_fu_382_out_r_ce1,
        out_r_d1 => grp_fft_top_fu_382_out_r_d1,
        out_r_q1 => ap_const_lv32_0,
        out_r_we1 => grp_fft_top_fu_382_out_r_we1,
        ovflo => grp_fft_top_fu_382_ovflo,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        direction_ap_vld => ap_const_logic_1,
        direction_ap_ack => grp_fft_top_fu_382_direction_ap_ack,
        ap_start => grp_fft_top_fu_382_ap_start,
        ovflo_ap_vld => grp_fft_top_fu_382_ovflo_ap_vld,
        ap_done => grp_fft_top_fu_382_ap_done,
        ap_ready => grp_fft_top_fu_382_ap_ready,
        ap_idle => grp_fft_top_fu_382_ap_idle,
        ap_continue => grp_fft_top_fu_382_ap_continue);

    cross_channel_debncg_U62 : component cross_channel_debncg
    generic map (
        ID => 1,
        NUM_STAGE => 21,
        din0_WIDTH => 17,
        din1_WIDTH => 8,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ret_V_13_reg_2060,
        din1 => grp_fu_652_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_652_p2);

    cross_channel_debncg_U63 : component cross_channel_debncg
    generic map (
        ID => 1,
        NUM_STAGE => 21,
        din0_WIDTH => 17,
        din1_WIDTH => 8,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ret_V_14_reg_2065,
        din1 => grp_fu_657_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_657_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state6) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state6)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state6);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter19 <= ap_enable_reg_pp1_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter20 <= ap_enable_reg_pp1_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter21 <= ap_enable_reg_pp1_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter22 <= ap_enable_reg_pp1_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter23 <= ap_enable_reg_pp1_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter24 <= ap_enable_reg_pp1_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter25 <= ap_enable_reg_pp1_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter26 <= ap_enable_reg_pp1_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter27 <= ap_enable_reg_pp1_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter28 <= ap_enable_reg_pp1_iter27;
                elsif (((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_enable_reg_pp1_iter28 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state37) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_state36_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state37)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state37);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                elsif (((ap_const_boolean_0 = ap_block_state36_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                    ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_fft_top_fu_382_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_fft_top_fu_382_ap_done <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_state36_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                    ap_sync_reg_grp_fft_top_fu_382_ap_done <= ap_const_logic_0;
                elsif ((grp_fft_top_fu_382_ap_done = ap_const_logic_1)) then 
                    ap_sync_reg_grp_fft_top_fu_382_ap_done <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_fft_top_fu_382_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_fft_top_fu_382_ap_ready <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_state36_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                    ap_sync_reg_grp_fft_top_fu_382_ap_ready <= ap_const_logic_0;
                elsif ((grp_fft_top_fu_382_ap_ready = ap_const_logic_1)) then 
                    ap_sync_reg_grp_fft_top_fu_382_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_fft_top_fu_382_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft_top_fu_382_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_sync_grp_fft_top_fu_382_ap_ready = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((ap_sync_grp_fft_top_fu_382_ap_ready = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                    grp_fft_top_fu_382_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_top_fu_382_ap_ready = ap_const_logic_1)) then 
                    grp_fft_top_fu_382_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten11_reg_316_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln24_fu_505_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                indvar_flatten11_reg_316 <= add_ln24_fu_511_p2;
            elsif (((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                indvar_flatten11_reg_316 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    indvar_flatten23_reg_349_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln60_fu_1823_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                indvar_flatten23_reg_349 <= add_ln60_fu_1829_p2;
            elsif (((ap_const_boolean_0 = ap_block_state36_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                indvar_flatten23_reg_349 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_283_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln45_fu_392_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_283 <= add_ln45_fu_398_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_283 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    x_0_i49_reg_371_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln60_fu_1823_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                x_0_i49_reg_371 <= x_6_fu_1890_p2;
            elsif (((ap_const_boolean_0 = ap_block_state36_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                x_0_i49_reg_371 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    x_0_i_reg_305_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln45_fu_392_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                x_0_i_reg_305 <= x_5_fu_463_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                x_0_i_reg_305 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    x_0_reg_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln24_fu_505_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                x_0_reg_338 <= x_fu_600_p2;
            elsif (((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                x_0_reg_338 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    y_0_i48_reg_360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln60_reg_2344 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                y_0_i48_reg_360 <= select_ln60_1_reg_2358;
            elsif (((ap_const_boolean_0 = ap_block_state36_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                y_0_i48_reg_360 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    y_0_i_reg_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln45_reg_1977 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                y_0_i_reg_294 <= select_ln45_1_reg_1991;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                y_0_i_reg_294 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    y_0_reg_327_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln24_reg_2011 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                y_0_reg_327 <= select_ln24_1_reg_2020;
            elsif (((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                y_0_reg_327 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln24_reg_2011_pp1_iter25_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                and_ln581_1_reg_2307 <= and_ln581_1_fu_1580_p2;
                and_ln581_reg_2253 <= and_ln581_fu_1396_p2;
                and_ln585_2_reg_2312 <= and_ln585_2_fu_1586_p2;
                and_ln585_reg_2258 <= and_ln585_fu_1402_p2;
                and_ln603_1_reg_2318 <= and_ln603_1_fu_1604_p2;
                and_ln603_reg_2264 <= and_ln603_fu_1420_p2;
                icmp_ln571_1_reg_2280 <= icmp_ln571_1_fu_1488_p2;
                icmp_ln571_reg_2226 <= icmp_ln571_fu_1304_p2;
                icmp_ln582_1_reg_2291 <= icmp_ln582_1_fu_1536_p2;
                icmp_ln582_reg_2237 <= icmp_ln582_fu_1352_p2;
                icmp_ln585_1_reg_2302 <= icmp_ln585_1_fu_1546_p2;
                icmp_ln585_reg_2248 <= icmp_ln585_fu_1362_p2;
                ireg_V_1_reg_2270 <= ireg_V_1_fu_1426_p3;
                ireg_V_reg_2216 <= ireg_V_fu_1242_p3;
                man_V_2_reg_2221 <= man_V_2_fu_1296_p3;
                man_V_5_reg_2275 <= man_V_5_fu_1480_p3;
                sh_amt_25_reg_2285 <= sh_amt_25_fu_1528_p3;
                sh_amt_reg_2231 <= sh_amt_fu_1344_p3;
                trunc_ln583_1_reg_2296 <= trunc_ln583_1_fu_1542_p1;
                trunc_ln583_reg_2242 <= trunc_ln583_fu_1358_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln24_reg_2011 <= icmp_ln24_fu_505_p2;
                icmp_ln24_reg_2011_pp1_iter1_reg <= icmp_ln24_reg_2011;
                    zext_ln30_reg_2025_pp1_iter1_reg(13 downto 0) <= zext_ln30_reg_2025(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln24_reg_2011_pp1_iter10_reg <= icmp_ln24_reg_2011_pp1_iter9_reg;
                icmp_ln24_reg_2011_pp1_iter11_reg <= icmp_ln24_reg_2011_pp1_iter10_reg;
                icmp_ln24_reg_2011_pp1_iter12_reg <= icmp_ln24_reg_2011_pp1_iter11_reg;
                icmp_ln24_reg_2011_pp1_iter13_reg <= icmp_ln24_reg_2011_pp1_iter12_reg;
                icmp_ln24_reg_2011_pp1_iter14_reg <= icmp_ln24_reg_2011_pp1_iter13_reg;
                icmp_ln24_reg_2011_pp1_iter15_reg <= icmp_ln24_reg_2011_pp1_iter14_reg;
                icmp_ln24_reg_2011_pp1_iter16_reg <= icmp_ln24_reg_2011_pp1_iter15_reg;
                icmp_ln24_reg_2011_pp1_iter17_reg <= icmp_ln24_reg_2011_pp1_iter16_reg;
                icmp_ln24_reg_2011_pp1_iter18_reg <= icmp_ln24_reg_2011_pp1_iter17_reg;
                icmp_ln24_reg_2011_pp1_iter19_reg <= icmp_ln24_reg_2011_pp1_iter18_reg;
                icmp_ln24_reg_2011_pp1_iter20_reg <= icmp_ln24_reg_2011_pp1_iter19_reg;
                icmp_ln24_reg_2011_pp1_iter21_reg <= icmp_ln24_reg_2011_pp1_iter20_reg;
                icmp_ln24_reg_2011_pp1_iter22_reg <= icmp_ln24_reg_2011_pp1_iter21_reg;
                icmp_ln24_reg_2011_pp1_iter23_reg <= icmp_ln24_reg_2011_pp1_iter22_reg;
                icmp_ln24_reg_2011_pp1_iter24_reg <= icmp_ln24_reg_2011_pp1_iter23_reg;
                icmp_ln24_reg_2011_pp1_iter25_reg <= icmp_ln24_reg_2011_pp1_iter24_reg;
                icmp_ln24_reg_2011_pp1_iter26_reg <= icmp_ln24_reg_2011_pp1_iter25_reg;
                icmp_ln24_reg_2011_pp1_iter27_reg <= icmp_ln24_reg_2011_pp1_iter26_reg;
                icmp_ln24_reg_2011_pp1_iter2_reg <= icmp_ln24_reg_2011_pp1_iter1_reg;
                icmp_ln24_reg_2011_pp1_iter3_reg <= icmp_ln24_reg_2011_pp1_iter2_reg;
                icmp_ln24_reg_2011_pp1_iter4_reg <= icmp_ln24_reg_2011_pp1_iter3_reg;
                icmp_ln24_reg_2011_pp1_iter5_reg <= icmp_ln24_reg_2011_pp1_iter4_reg;
                icmp_ln24_reg_2011_pp1_iter6_reg <= icmp_ln24_reg_2011_pp1_iter5_reg;
                icmp_ln24_reg_2011_pp1_iter7_reg <= icmp_ln24_reg_2011_pp1_iter6_reg;
                icmp_ln24_reg_2011_pp1_iter8_reg <= icmp_ln24_reg_2011_pp1_iter7_reg;
                icmp_ln24_reg_2011_pp1_iter9_reg <= icmp_ln24_reg_2011_pp1_iter8_reg;
                icmp_ln885_1_reg_2093_pp1_iter23_reg <= icmp_ln885_1_reg_2093;
                icmp_ln885_1_reg_2093_pp1_iter24_reg <= icmp_ln885_1_reg_2093_pp1_iter23_reg;
                icmp_ln885_1_reg_2093_pp1_iter25_reg <= icmp_ln885_1_reg_2093_pp1_iter24_reg;
                icmp_ln885_reg_2076_pp1_iter23_reg <= icmp_ln885_reg_2076;
                icmp_ln885_reg_2076_pp1_iter24_reg <= icmp_ln885_reg_2076_pp1_iter23_reg;
                icmp_ln885_reg_2076_pp1_iter25_reg <= icmp_ln885_reg_2076_pp1_iter24_reg;
                p_Result_48_reg_2081_pp1_iter23_reg <= p_Result_48_reg_2081;
                p_Result_48_reg_2081_pp1_iter24_reg <= p_Result_48_reg_2081_pp1_iter23_reg;
                p_Result_51_reg_2098_pp1_iter23_reg <= p_Result_51_reg_2098;
                p_Result_51_reg_2098_pp1_iter24_reg <= p_Result_51_reg_2098_pp1_iter23_reg;
                tmp_V_3_reg_2086_pp1_iter23_reg <= tmp_V_3_reg_2086;
                tmp_V_5_reg_2103_pp1_iter23_reg <= tmp_V_5_reg_2103;
                trunc_ln893_1_reg_2181_pp1_iter24_reg <= trunc_ln893_1_reg_2181;
                trunc_ln893_reg_2143_pp1_iter24_reg <= trunc_ln893_reg_2143;
                    zext_ln30_reg_2025_pp1_iter10_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter9_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter11_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter10_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter12_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter11_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter13_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter12_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter14_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter13_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter15_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter14_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter16_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter15_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter17_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter16_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter18_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter17_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter19_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter18_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter20_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter19_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter21_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter20_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter22_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter21_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter23_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter22_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter24_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter23_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter25_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter24_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter26_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter25_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter27_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter26_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter2_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter1_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter3_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter2_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter4_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter3_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter5_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter4_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter6_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter5_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter7_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter6_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter8_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter7_reg(13 downto 0);
                    zext_ln30_reg_2025_pp1_iter9_reg(13 downto 0) <= zext_ln30_reg_2025_pp1_iter8_reg(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln45_reg_1977 <= icmp_ln45_fu_392_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln60_reg_2344 <= icmp_ln60_fu_1823_p2;
                icmp_ln60_reg_2344_pp2_iter1_reg <= icmp_ln60_reg_2344;
                select_ln60_1_reg_2358_pp2_iter1_reg <= select_ln60_1_reg_2358;
                select_ln60_reg_2353_pp2_iter1_reg <= select_ln60_reg_2353;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln24_reg_2011_pp1_iter21_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln885_1_reg_2093 <= icmp_ln885_1_fu_690_p2;
                icmp_ln885_reg_2076 <= icmp_ln885_fu_662_p2;
                p_Result_48_reg_2081 <= grp_fu_652_p2(16 downto 16);
                p_Result_51_reg_2098 <= grp_fu_657_p2(16 downto 16);
                tmp_V_3_reg_2086 <= tmp_V_3_fu_682_p3;
                tmp_V_5_reg_2103 <= tmp_V_5_fu_710_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln885_1_reg_2093 = ap_const_lv1_0) and (icmp_ln24_reg_2011_pp1_iter22_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                lsb_index_1_reg_2165 <= lsb_index_1_fu_826_p2;
                sub_ln894_1_reg_2154 <= sub_ln894_1_fu_816_p2;
                sub_ln897_1_reg_2176 <= sub_ln897_1_fu_846_p2;
                tmp_90_reg_2171 <= lsb_index_1_fu_826_p2(31 downto 1);
                trunc_ln893_1_reg_2181 <= trunc_ln893_1_fu_852_p1;
                trunc_ln894_1_reg_2160 <= trunc_ln894_1_fu_822_p1;
                    zext_ln888_1_reg_2148(16 downto 0) <= zext_ln888_1_fu_787_p1(16 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln885_reg_2076 = ap_const_lv1_0) and (icmp_ln24_reg_2011_pp1_iter22_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                lsb_index_reg_2127 <= lsb_index_fu_757_p2;
                sub_ln894_reg_2116 <= sub_ln894_fu_747_p2;
                sub_ln897_reg_2138 <= sub_ln897_fu_777_p2;
                tmp_86_reg_2133 <= lsb_index_fu_757_p2(31 downto 1);
                trunc_ln893_reg_2143 <= trunc_ln893_fu_783_p1;
                trunc_ln894_reg_2122 <= trunc_ln894_fu_753_p1;
                    zext_ln888_reg_2110(16 downto 0) <= zext_ln888_fu_718_p1(16 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln885_1_reg_2093_pp1_iter23_reg = ap_const_lv1_0) and (icmp_ln24_reg_2011_pp1_iter23_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                m_3_reg_2196 <= m_12_fu_1138_p2(63 downto 1);
                tmp_92_reg_2201 <= m_12_fu_1138_p2(54 downto 54);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln885_reg_2076_pp1_iter23_reg = ap_const_lv1_0) and (icmp_ln24_reg_2011_pp1_iter23_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                m_s_reg_2186 <= m_2_fu_985_p2(63 downto 1);
                tmp_88_reg_2191 <= m_2_fu_985_p2(54 downto 54);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln24_reg_2011_pp1_iter26_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                or_ln603_2_reg_2329 <= or_ln603_2_fu_1700_p2;
                or_ln603_5_reg_2339 <= or_ln603_5_fu_1796_p2;
                select_ln603_2_reg_2324 <= select_ln603_2_fu_1692_p3;
                select_ln603_6_reg_2334 <= select_ln603_6_fu_1788_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln885_reg_2076_pp1_iter24_reg = ap_const_lv1_0) and (icmp_ln24_reg_2011_pp1_iter24_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                p_Result_50_reg_2206 <= p_Result_50_fu_1190_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln885_1_reg_2093_pp1_iter24_reg = ap_const_lv1_0) and (icmp_ln24_reg_2011_pp1_iter24_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                p_Result_53_reg_2211 <= p_Result_53_fu_1230_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln24_reg_2011 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ret_V_13_reg_2060 <= ret_V_13_fu_618_p2;
                ret_V_14_reg_2065 <= ret_V_14_fu_642_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln24_fu_505_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                select_ln24_1_reg_2020 <= select_ln24_1_fu_537_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln60_reg_2344 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                select_ln359_reg_2374 <= select_ln359_fu_1934_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln45_fu_392_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln45_1_reg_1991 <= select_ln45_1_fu_424_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln45_fu_392_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln45_reg_1986 <= select_ln45_fu_416_p3;
                trunc_ln45_reg_1996 <= trunc_ln45_fu_432_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln60_fu_1823_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                select_ln60_1_reg_2358 <= select_ln60_1_fu_1855_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln60_fu_1823_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                select_ln60_reg_2353 <= select_ln60_fu_1847_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln24_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                    zext_ln1265_1_reg_2030(15 downto 0) <= zext_ln1265_1_fu_594_p1(15 downto 0);
                    zext_ln30_reg_2025(13 downto 0) <= zext_ln30_fu_579_p1(13 downto 0);
            end if;
        end if;
    end process;
    zext_ln30_reg_2025(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter1_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter2_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter3_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter4_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter5_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter6_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter7_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter8_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter9_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter10_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter11_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter12_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter13_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter14_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter15_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter16_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter17_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter18_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter19_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter20_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter21_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter22_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter23_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter24_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter25_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter26_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln30_reg_2025_pp1_iter27_reg(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln1265_1_reg_2030(63 downto 16) <= "000000000000000000000000000000000000000000000000";
    zext_ln888_reg_2110(17) <= '0';
    zext_ln888_1_reg_2148(17) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln45_fu_392_p2, ap_enable_reg_pp0_iter0, icmp_ln24_fu_505_p2, ap_enable_reg_pp1_iter0, icmp_ln60_fu_1823_p2, ap_enable_reg_pp2_iter0, ap_block_pp0_stage0_subdone, ap_CS_fsm_state5, ap_block_state5_on_subcall_done, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter27, ap_enable_reg_pp1_iter28, ap_CS_fsm_state36, ap_block_state36_on_subcall_done, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((icmp_ln45_fu_392_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((icmp_ln45_fu_392_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln24_fu_505_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp1_iter27 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter28 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter27 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter28 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln24_fu_505_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                if (((ap_const_boolean_0 = ap_block_state36_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln60_fu_1823_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln60_fu_1823_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    F2_1_fu_1494_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_1_fu_1454_p1));
    F2_fu_1310_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_fu_1270_p1));

    MAD_address0_assign_proc : process(zext_ln30_reg_2025_pp1_iter27_reg, ap_enable_reg_pp1_iter28, ap_CS_fsm_state36, grp_fft_top_fu_382_in_r_address0, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter28 = ap_const_logic_1))) then 
            MAD_address0 <= zext_ln30_reg_2025_pp1_iter27_reg(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            MAD_address0 <= grp_fft_top_fu_382_in_r_address0;
        else 
            MAD_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    MAD_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter28, ap_CS_fsm_state36, grp_fft_top_fu_382_in_r_ce0)
    begin
        if (((ap_enable_reg_pp1_iter28 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            MAD_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            MAD_ce0 <= grp_fft_top_fu_382_in_r_ce0;
        else 
            MAD_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    MAD_d0 <= (select_ln603_7_fu_1808_p3 & select_ln603_3_fu_1802_p3);

    MAD_we0_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln24_reg_2011_pp1_iter27_reg, ap_enable_reg_pp1_iter28)
    begin
        if (((icmp_ln24_reg_2011_pp1_iter27_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter28 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            MAD_we0 <= ap_const_logic_1;
        else 
            MAD_we0 <= ap_const_logic_0;
        end if; 
    end process;

    a_1_fu_1034_p2 <= (icmp_ln897_3_fu_1028_p2 and icmp_ln897_2_fu_1009_p2);
    a_fu_881_p2 <= (icmp_ln897_fu_856_p2 and icmp_ln897_1_fu_875_p2);
    add_ln1265_fu_588_p2 <= std_logic_vector(unsigned(zext_ln1265_fu_584_p1) + unsigned(zext_ln26_1_fu_565_p1));
    add_ln180_fu_1956_p2 <= std_logic_vector(unsigned(zext_ln180_fu_1953_p1) + unsigned(zext_ln62_1_fu_1949_p1));
    add_ln24_fu_511_p2 <= std_logic_vector(unsigned(indvar_flatten11_reg_316) + unsigned(ap_const_lv15_1));
    add_ln446_fu_452_p2 <= std_logic_vector(unsigned(zext_ln47_1_fu_444_p1) + unsigned(zext_ln446_fu_448_p1));
    add_ln45_fu_398_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_283) + unsigned(ap_const_lv15_1));
    add_ln581_1_fu_1516_p2 <= std_logic_vector(signed(ap_const_lv12_FF1) + signed(F2_1_fu_1494_p2));
    add_ln581_fu_1332_p2 <= std_logic_vector(signed(ap_const_lv12_FF1) + signed(F2_fu_1310_p2));
    add_ln60_fu_1829_p2 <= std_logic_vector(unsigned(indvar_flatten23_reg_349) + unsigned(ap_const_lv15_1));
    add_ln899_1_fu_1053_p2 <= std_logic_vector(signed(ap_const_lv18_3FFCB) + signed(trunc_ln894_1_reg_2160));
    add_ln899_fu_900_p2 <= std_logic_vector(signed(ap_const_lv18_3FFCB) + signed(trunc_ln894_reg_2122));
    add_ln908_1_fu_1096_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCA) + signed(sub_ln894_1_reg_2154));
    add_ln908_fu_943_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCA) + signed(sub_ln894_reg_2116));
    add_ln915_1_fu_1217_p2 <= std_logic_vector(unsigned(sub_ln915_1_fu_1212_p2) + unsigned(select_ln915_1_fu_1205_p3));
    add_ln915_fu_1177_p2 <= std_logic_vector(unsigned(sub_ln915_fu_1172_p2) + unsigned(select_ln915_fu_1165_p3));
    and_ln581_1_fu_1580_p2 <= (xor_ln582_1_fu_1574_p2 and icmp_ln581_1_fu_1510_p2);
    and_ln581_fu_1396_p2 <= (xor_ln582_fu_1390_p2 and icmp_ln581_fu_1326_p2);
    and_ln582_1_fu_1750_p2 <= (xor_ln571_1_fu_1745_p2 and icmp_ln582_1_reg_2291);
    and_ln582_fu_1654_p2 <= (xor_ln571_fu_1649_p2 and icmp_ln582_reg_2237);
    and_ln585_1_fu_1664_p2 <= (xor_ln585_fu_1659_p2 and and_ln581_reg_2253);
    and_ln585_2_fu_1586_p2 <= (icmp_ln585_1_fu_1546_p2 and and_ln581_1_fu_1580_p2);
    and_ln585_3_fu_1760_p2 <= (xor_ln585_1_fu_1755_p2 and and_ln581_1_reg_2307);
    and_ln585_fu_1402_p2 <= (icmp_ln585_fu_1362_p2 and and_ln581_fu_1396_p2);
    and_ln603_1_fu_1604_p2 <= (xor_ln581_1_fu_1598_p2 and icmp_ln603_1_fu_1562_p2);
    and_ln603_fu_1420_p2 <= (xor_ln581_fu_1414_p2 and icmp_ln603_fu_1378_p2);
    and_ln850_fu_1922_p2 <= (p_Result_47_fu_1904_p3 and icmp_ln851_fu_1916_p2);
    and_ln899_1_fu_1065_p2 <= (xor_ln899_1_fu_1047_p2 and p_Result_41_fu_1058_p3);
    and_ln899_fu_912_p2 <= (xor_ln899_fu_894_p2 and p_Result_35_fu_905_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state35 <= ap_CS_fsm(5);
    ap_CS_fsm_state36 <= ap_CS_fsm(6);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state40 <= ap_CS_fsm(8);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp1_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp1_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp1_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp1_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp1_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp1_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp1_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp1_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp1_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp1_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp1_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state36_on_subcall_done_assign_proc : process(ap_sync_grp_fft_top_fu_382_ap_ready, ap_sync_grp_fft_top_fu_382_ap_done)
    begin
                ap_block_state36_on_subcall_done <= ((ap_sync_grp_fft_top_fu_382_ap_ready and ap_sync_grp_fft_top_fu_382_ap_done) = ap_const_logic_0);
    end process;

        ap_block_state37_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_on_subcall_done_assign_proc : process(ap_sync_grp_fft_top_fu_382_ap_ready, ap_sync_grp_fft_top_fu_382_ap_done)
    begin
                ap_block_state5_on_subcall_done <= ((ap_sync_grp_fft_top_fu_382_ap_ready and ap_sync_grp_fft_top_fu_382_ap_done) = ap_const_logic_0);
    end process;

        ap_block_state6_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln45_fu_392_p2)
    begin
        if ((icmp_ln45_fu_392_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state6_assign_proc : process(icmp_ln24_fu_505_p2)
    begin
        if ((icmp_ln24_fu_505_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state37_assign_proc : process(icmp_ln60_fu_1823_p2)
    begin
        if ((icmp_ln60_fu_1823_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state37 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state37 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter8, ap_enable_reg_pp1_iter9, ap_enable_reg_pp1_iter10, ap_enable_reg_pp1_iter11, ap_enable_reg_pp1_iter12, ap_enable_reg_pp1_iter13, ap_enable_reg_pp1_iter14, ap_enable_reg_pp1_iter15, ap_enable_reg_pp1_iter16, ap_enable_reg_pp1_iter17, ap_enable_reg_pp1_iter18, ap_enable_reg_pp1_iter19, ap_enable_reg_pp1_iter20, ap_enable_reg_pp1_iter21, ap_enable_reg_pp1_iter22, ap_enable_reg_pp1_iter23, ap_enable_reg_pp1_iter24, ap_enable_reg_pp1_iter25, ap_enable_reg_pp1_iter26, ap_enable_reg_pp1_iter27, ap_enable_reg_pp1_iter28)
    begin
        if (((ap_enable_reg_pp1_iter28 = ap_const_logic_0) and (ap_enable_reg_pp1_iter27 = ap_const_logic_0) and (ap_enable_reg_pp1_iter26 = ap_const_logic_0) and (ap_enable_reg_pp1_iter25 = ap_const_logic_0) and (ap_enable_reg_pp1_iter24 = ap_const_logic_0) and (ap_enable_reg_pp1_iter23 = ap_const_logic_0) and (ap_enable_reg_pp1_iter22 = ap_const_logic_0) and (ap_enable_reg_pp1_iter21 = ap_const_logic_0) and (ap_enable_reg_pp1_iter20 = ap_const_logic_0) and (ap_enable_reg_pp1_iter19 = ap_const_logic_0) and (ap_enable_reg_pp1_iter18 = ap_const_logic_0) and (ap_enable_reg_pp1_iter17 = ap_const_logic_0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_0) and (ap_enable_reg_pp1_iter15 = ap_const_logic_0) and (ap_enable_reg_pp1_iter14 = ap_const_logic_0) and (ap_enable_reg_pp1_iter13 = ap_const_logic_0) and (ap_enable_reg_pp1_iter12 = ap_const_logic_0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2)
    begin
        if (((ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_y_0_i48_phi_fu_364_p4_assign_proc : process(y_0_i48_reg_360, icmp_ln60_reg_2344, ap_CS_fsm_pp2_stage0, select_ln60_1_reg_2358, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((icmp_ln60_reg_2344 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            ap_phi_mux_y_0_i48_phi_fu_364_p4 <= select_ln60_1_reg_2358;
        else 
            ap_phi_mux_y_0_i48_phi_fu_364_p4 <= y_0_i48_reg_360;
        end if; 
    end process;


    ap_phi_mux_y_0_i_phi_fu_298_p4_assign_proc : process(y_0_i_reg_294, icmp_ln45_reg_1977, ap_CS_fsm_pp0_stage0, select_ln45_1_reg_1991, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln45_reg_1977 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_y_0_i_phi_fu_298_p4 <= select_ln45_1_reg_1991;
        else 
            ap_phi_mux_y_0_i_phi_fu_298_p4 <= y_0_i_reg_294;
        end if; 
    end process;


    ap_phi_mux_y_0_phi_fu_331_p4_assign_proc : process(y_0_reg_327, icmp_ln24_reg_2011, ap_CS_fsm_pp1_stage0, select_ln24_1_reg_2020, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((icmp_ln24_reg_2011 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_y_0_phi_fu_331_p4 <= select_ln24_1_reg_2020;
        else 
            ap_phi_mux_y_0_phi_fu_331_p4 <= y_0_reg_327;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_sync_grp_fft_top_fu_382_ap_done <= (grp_fft_top_fu_382_ap_done or ap_sync_reg_grp_fft_top_fu_382_ap_done);
    ap_sync_grp_fft_top_fu_382_ap_ready <= (grp_fft_top_fu_382_ap_ready or ap_sync_reg_grp_fft_top_fu_382_ap_ready);
    ashr_ln586_1_fu_1716_p2 <= std_logic_vector(shift_right(signed(man_V_5_reg_2275),to_integer(unsigned('0' & zext_ln586_1_fu_1712_p1(31-1 downto 0)))));
    ashr_ln586_fu_1620_p2 <= std_logic_vector(shift_right(signed(man_V_2_reg_2221),to_integer(unsigned('0' & zext_ln586_fu_1616_p1(31-1 downto 0)))));
    coe_a_M_imag_V_address0 <= zext_ln1265_1_fu_594_p1(14 - 1 downto 0);

    coe_a_M_imag_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            coe_a_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            coe_a_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    coe_a_M_real_V_address0 <= zext_ln1265_1_fu_594_p1(14 - 1 downto 0);

    coe_a_M_real_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            coe_a_M_real_V_ce0 <= ap_const_logic_1;
        else 
            coe_a_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    coe_b_V_address0 <= zext_ln1265_1_reg_2030(14 - 1 downto 0);

    coe_b_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            coe_b_V_ce0 <= ap_const_logic_1;
        else 
            coe_b_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    exp_tmp_V_1_fu_1444_p4 <= ireg_V_1_fu_1426_p3(62 downto 52);
    exp_tmp_V_fu_1260_p4 <= ireg_V_fu_1242_p3(62 downto 52);

    fft_result_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, zext_ln30_fu_579_p1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_state5, ap_CS_fsm_state36, grp_fft_top_fu_382_out_r_address0, ap_block_pp1_stage0, ap_block_pp2_stage0, zext_ln67_fu_1885_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            fft_result_address0 <= zext_ln67_fu_1885_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            fft_result_address0 <= zext_ln30_fu_579_p1(14 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            fft_result_address0 <= grp_fft_top_fu_382_out_r_address0;
        else 
            fft_result_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    fft_result_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_CS_fsm_state5, ap_CS_fsm_state36, grp_fft_top_fu_382_out_r_ce0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            fft_result_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            fft_result_ce0 <= grp_fft_top_fu_382_out_r_ce0;
        else 
            fft_result_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_result_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state36, grp_fft_top_fu_382_out_r_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            fft_result_we0 <= grp_fft_top_fu_382_out_r_we0;
        else 
            fft_result_we0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fft_top_fu_382_ap_continue_assign_proc : process(ap_CS_fsm_state5, ap_block_state5_on_subcall_done, ap_CS_fsm_state36, ap_block_state36_on_subcall_done)
    begin
        if ((((ap_const_boolean_0 = ap_block_state36_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            grp_fft_top_fu_382_ap_continue <= ap_const_logic_1;
        else 
            grp_fft_top_fu_382_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    grp_fft_top_fu_382_ap_start <= grp_fft_top_fu_382_ap_start_reg;

    grp_fft_top_fu_382_direction_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fft_top_fu_382_direction <= ap_const_logic_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fft_top_fu_382_direction <= ap_const_logic_1;
        else 
            grp_fft_top_fu_382_direction <= 'X';
        end if; 
    end process;


    grp_fft_top_fu_382_in_r_q0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state36, MAD_q0, tmp9_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fft_top_fu_382_in_r_q0 <= MAD_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fft_top_fu_382_in_r_q0 <= tmp9_q0;
        else 
            grp_fft_top_fu_382_in_r_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_652_p1 <= sext_ln1148_fu_648_p1(8 - 1 downto 0);
    grp_fu_657_p1 <= sext_ln1148_fu_648_p1(8 - 1 downto 0);
    icmp_ln24_fu_505_p2 <= "1" when (indvar_flatten11_reg_316 = ap_const_lv15_4000) else "0";
    icmp_ln26_fu_523_p2 <= "1" when (x_0_reg_338 = ap_const_lv8_80) else "0";
    icmp_ln45_fu_392_p2 <= "1" when (indvar_flatten_reg_283 = ap_const_lv15_4000) else "0";
    icmp_ln47_fu_410_p2 <= "1" when (x_0_i_reg_305 = ap_const_lv8_80) else "0";
    icmp_ln571_1_fu_1488_p2 <= "1" when (trunc_ln556_1_fu_1432_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_fu_1304_p2 <= "1" when (trunc_ln556_fu_1248_p1 = ap_const_lv63_0) else "0";
    icmp_ln581_1_fu_1510_p2 <= "1" when (signed(tmp_98_fu_1500_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln581_fu_1326_p2 <= "1" when (signed(tmp_94_fu_1316_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln582_1_fu_1536_p2 <= "1" when (F2_1_fu_1494_p2 = ap_const_lv12_F) else "0";
    icmp_ln582_fu_1352_p2 <= "1" when (F2_fu_1310_p2 = ap_const_lv12_F) else "0";
    icmp_ln585_1_fu_1546_p2 <= "1" when (unsigned(sh_amt_25_fu_1528_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln585_fu_1362_p2 <= "1" when (unsigned(sh_amt_fu_1344_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln603_1_fu_1562_p2 <= "1" when (tmp_99_fu_1552_p4 = ap_const_lv8_0) else "0";
    icmp_ln603_fu_1378_p2 <= "1" when (tmp_95_fu_1368_p4 = ap_const_lv8_0) else "0";
    icmp_ln60_fu_1823_p2 <= "1" when (indvar_flatten23_reg_349 = ap_const_lv15_4000) else "0";
    icmp_ln62_fu_1841_p2 <= "1" when (x_0_i49_reg_371 = ap_const_lv8_80) else "0";
    icmp_ln851_fu_1916_p2 <= "0" when (trunc_ln851_fu_1912_p1 = ap_const_lv15_0) else "1";
    icmp_ln885_1_fu_690_p2 <= "1" when (grp_fu_657_p2 = ap_const_lv17_0) else "0";
    icmp_ln885_fu_662_p2 <= "1" when (grp_fu_652_p2 = ap_const_lv17_0) else "0";
    icmp_ln897_1_fu_875_p2 <= "0" when (p_Result_34_fu_870_p2 = ap_const_lv18_0) else "1";
    icmp_ln897_2_fu_1009_p2 <= "1" when (signed(tmp_90_reg_2171) > signed(ap_const_lv31_0)) else "0";
    icmp_ln897_3_fu_1028_p2 <= "0" when (p_Result_40_fu_1023_p2 = ap_const_lv18_0) else "1";
    icmp_ln897_fu_856_p2 <= "1" when (signed(tmp_86_reg_2133) > signed(ap_const_lv31_0)) else "0";
    icmp_ln908_1_fu_1091_p2 <= "1" when (signed(lsb_index_1_reg_2165) > signed(ap_const_lv32_0)) else "0";
    icmp_ln908_fu_938_p2 <= "1" when (signed(lsb_index_reg_2127) > signed(ap_const_lv32_0)) else "0";
    ireg_V_1_fu_1426_p3 <= 
        ap_const_lv64_0 when (icmp_ln885_1_reg_2093_pp1_iter25_reg(0) = '1') else 
        p_Result_53_reg_2211;
    ireg_V_fu_1242_p3 <= 
        ap_const_lv64_0 when (icmp_ln885_reg_2076_pp1_iter25_reg(0) = '1') else 
        p_Result_50_reg_2206;
    
    l_1_fu_808_p3_proc : process(p_Result_52_fu_800_p3)
    begin
        l_1_fu_808_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_52_fu_800_p3(i) = '1' then
                l_1_fu_808_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    
    l_fu_739_p3_proc : process(p_Result_49_fu_731_p3)
    begin
        l_fu_739_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_49_fu_731_p3(i) = '1' then
                l_fu_739_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

        lhs_V_7_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_18_fu_624_p4),17));

        lhs_V_fu_610_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_12_fu_606_p1),17));

    lsb_index_1_fu_826_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCB) + signed(sub_ln894_1_fu_816_p2));
    lsb_index_fu_757_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCB) + signed(sub_ln894_fu_747_p2));
    lshr_ln897_1_fu_1017_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv18_3FFFF),to_integer(unsigned('0' & zext_ln897_1_fu_1014_p1(18-1 downto 0)))));
    lshr_ln897_fu_864_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv18_3FFFF),to_integer(unsigned('0' & zext_ln897_fu_861_p1(18-1 downto 0)))));
    lshr_ln908_1_fu_1101_p2 <= std_logic_vector(shift_right(unsigned(zext_ln907_2_fu_1088_p1),to_integer(unsigned('0' & add_ln908_1_fu_1096_p2(31-1 downto 0)))));
    lshr_ln908_fu_948_p2 <= std_logic_vector(shift_right(unsigned(zext_ln907_1_fu_935_p1),to_integer(unsigned('0' & add_ln908_fu_943_p2(31-1 downto 0)))));
    m_10_fu_1126_p3 <= 
        zext_ln908_2_fu_1107_p1 when (icmp_ln908_1_fu_1091_p2(0) = '1') else 
        shl_ln908_1_fu_1120_p2;
    m_12_fu_1138_p2 <= std_logic_vector(unsigned(zext_ln911_1_fu_1134_p1) + unsigned(m_10_fu_1126_p3));
    m_15_fu_1162_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_s_reg_2186),64));
    m_16_fu_1202_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_3_reg_2196),64));
    m_1_fu_973_p3 <= 
        zext_ln908_fu_954_p1 when (icmp_ln908_fu_938_p2(0) = '1') else 
        shl_ln908_fu_967_p2;
    m_2_fu_985_p2 <= std_logic_vector(unsigned(zext_ln911_fu_981_p1) + unsigned(m_1_fu_973_p3));
    m_9_fu_1085_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_5_reg_2103_pp1_iter23_reg),64));
    m_fu_932_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_3_reg_2086_pp1_iter23_reg),64));
    man_V_1_fu_1290_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_55_fu_1286_p1));
    man_V_2_fu_1296_p3 <= 
        man_V_1_fu_1290_p2 when (p_Result_54_fu_1252_p3(0) = '1') else 
        p_Result_55_fu_1286_p1;
    man_V_4_fu_1474_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_57_fu_1470_p1));
    man_V_5_fu_1480_p3 <= 
        man_V_4_fu_1474_p2 when (p_Result_56_fu_1436_p3(0) = '1') else 
        p_Result_57_fu_1470_p1;
    or_ln581_1_fu_1592_p2 <= (or_ln582_1_fu_1568_p2 or icmp_ln581_1_fu_1510_p2);
    or_ln581_fu_1408_p2 <= (or_ln582_fu_1384_p2 or icmp_ln581_fu_1326_p2);
    or_ln582_1_fu_1568_p2 <= (icmp_ln582_1_fu_1536_p2 or icmp_ln571_1_fu_1488_p2);
    or_ln582_fu_1384_p2 <= (icmp_ln582_fu_1352_p2 or icmp_ln571_fu_1304_p2);
    or_ln603_1_fu_1687_p2 <= (and_ln585_reg_2258 or and_ln582_fu_1654_p2);
    or_ln603_2_fu_1700_p2 <= (or_ln603_fu_1676_p2 or or_ln603_1_fu_1687_p2);
    or_ln603_3_fu_1772_p2 <= (and_ln603_1_reg_2318 or and_ln585_3_fu_1760_p2);
    or_ln603_4_fu_1783_p2 <= (and_ln585_2_reg_2312 or and_ln582_1_fu_1750_p2);
    or_ln603_5_fu_1796_p2 <= (or_ln603_4_fu_1783_p2 or or_ln603_3_fu_1772_p2);
    or_ln603_fu_1676_p2 <= (and_ln603_reg_2264 or and_ln585_1_fu_1664_p2);
    or_ln899_1_fu_1077_p3 <= (ap_const_lv31_0 & or_ln899_fu_1071_p2);
    or_ln899_2_fu_918_p2 <= (and_ln899_fu_912_p2 or a_fu_881_p2);
    or_ln899_fu_1071_p2 <= (and_ln899_1_fu_1065_p2 or a_1_fu_1034_p2);
    or_ln_fu_924_p3 <= (ap_const_lv31_0 & or_ln899_2_fu_918_p2);
    p_Result_34_fu_870_p2 <= (zext_ln888_reg_2110 and lshr_ln897_fu_864_p2);
    p_Result_35_fu_905_p3 <= zext_ln888_reg_2110(to_integer(unsigned(add_ln899_fu_900_p2)) downto to_integer(unsigned(add_ln899_fu_900_p2))) when (to_integer(unsigned(add_ln899_fu_900_p2))>= 0 and to_integer(unsigned(add_ln899_fu_900_p2))<=17) else "-";
    
    p_Result_38_fu_790_p4_proc : process(zext_ln888_1_fu_787_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(18+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(18+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(18 - 1 downto 0);
    variable p_Result_38_fu_790_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(18 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(18 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(18 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_11(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := zext_ln888_1_fu_787_p1;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(18-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(18-1-unsigned(ap_const_lv32_11(5-1 downto 0)));
            for p_Result_38_fu_790_p4_i in 0 to 18-1 loop
                v0_cpy(p_Result_38_fu_790_p4_i) := zext_ln888_1_fu_787_p1(18-1-p_Result_38_fu_790_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(18-1 downto 0)))));
        res_mask := res_mask(18-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_38_fu_790_p4 <= resvalue(18-1 downto 0);
    end process;

    p_Result_40_fu_1023_p2 <= (zext_ln888_1_reg_2148 and lshr_ln897_1_fu_1017_p2);
    p_Result_41_fu_1058_p3 <= zext_ln888_1_reg_2148(to_integer(unsigned(add_ln899_1_fu_1053_p2)) downto to_integer(unsigned(add_ln899_1_fu_1053_p2))) when (to_integer(unsigned(add_ln899_1_fu_1053_p2))>= 0 and to_integer(unsigned(add_ln899_1_fu_1053_p2))<=17) else "-";
    p_Result_47_fu_1904_p3 <= fft_result_q0(15 downto 15);
    p_Result_48_fu_668_p3 <= grp_fu_652_p2(16 downto 16);
    p_Result_49_fu_731_p3 <= (ap_const_lv14_3FFF & p_Result_s_fu_721_p4);
    p_Result_50_fu_1190_p5 <= (tmp_36_fu_1183_p3 & m_15_fu_1162_p1(51 downto 0));
    p_Result_51_fu_696_p3 <= grp_fu_657_p2(16 downto 16);
    p_Result_52_fu_800_p3 <= (ap_const_lv14_3FFF & p_Result_38_fu_790_p4);
    p_Result_53_fu_1230_p5 <= (tmp_37_fu_1223_p3 & m_16_fu_1202_p1(51 downto 0));
    p_Result_54_fu_1252_p3 <= ireg_V_fu_1242_p3(63 downto 63);
    p_Result_55_fu_1286_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_1278_p3),54));
    p_Result_56_fu_1436_p3 <= ireg_V_1_fu_1426_p3(63 downto 63);
    p_Result_57_fu_1470_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_fu_1462_p3),54));
    
    p_Result_s_fu_721_p4_proc : process(zext_ln888_fu_718_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(18+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(18+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(18 - 1 downto 0);
    variable p_Result_s_fu_721_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(18 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(18 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(18 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_11(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := zext_ln888_fu_718_p1;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(18-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(18-1-unsigned(ap_const_lv32_11(5-1 downto 0)));
            for p_Result_s_fu_721_p4_i in 0 to 18-1 loop
                v0_cpy(p_Result_s_fu_721_p4_i) := zext_ln888_fu_718_p1(18-1-p_Result_s_fu_721_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(18-1 downto 0)))));
        res_mask := res_mask(18-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_s_fu_721_p4 <= resvalue(18-1 downto 0);
    end process;

    p_Val2_12_fu_606_p1 <= fft_result_q0(16 - 1 downto 0);
    p_Val2_18_fu_624_p4 <= fft_result_q0(31 downto 16);
    ret_V_13_fu_618_p2 <= std_logic_vector(signed(lhs_V_fu_610_p1) + signed(rhs_V_fu_614_p1));
    ret_V_14_fu_642_p2 <= std_logic_vector(signed(lhs_V_7_fu_634_p1) + signed(rhs_V_6_fu_638_p1));
    ret_V_fu_1896_p3 <= fft_result_q0(15 downto 15);
        rhs_V_6_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(coe_a_M_imag_V_q0),17));

        rhs_V_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(coe_a_M_real_V_q0),17));

    select_ln24_1_fu_537_p3 <= 
        y_fu_517_p2 when (icmp_ln26_fu_523_p2(0) = '1') else 
        ap_phi_mux_y_0_phi_fu_331_p4;
    select_ln24_fu_529_p3 <= 
        ap_const_lv8_0 when (icmp_ln26_fu_523_p2(0) = '1') else 
        x_0_reg_338;
    select_ln359_fu_1934_p3 <= 
        ap_const_lv8_FF when (xor_ln850_fu_1928_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln45_1_fu_424_p3 <= 
        y_5_fu_404_p2 when (icmp_ln47_fu_410_p2(0) = '1') else 
        ap_phi_mux_y_0_i_phi_fu_298_p4;
    select_ln45_fu_416_p3 <= 
        ap_const_lv8_0 when (icmp_ln47_fu_410_p2(0) = '1') else 
        x_0_i_reg_305;
    select_ln588_1_fu_1732_p3 <= 
        ap_const_lv16_FFFF when (tmp_100_fu_1725_p3(0) = '1') else 
        ap_const_lv16_0;
    select_ln588_fu_1636_p3 <= 
        ap_const_lv16_FFFF when (tmp_96_fu_1629_p3(0) = '1') else 
        ap_const_lv16_0;
    select_ln603_1_fu_1681_p3 <= 
        trunc_ln586_fu_1625_p1 when (and_ln585_reg_2258(0) = '1') else 
        trunc_ln583_reg_2242;
    select_ln603_2_fu_1692_p3 <= 
        select_ln603_fu_1669_p3 when (or_ln603_fu_1676_p2(0) = '1') else 
        select_ln603_1_fu_1681_p3;
    select_ln603_3_fu_1802_p3 <= 
        select_ln603_2_reg_2324 when (or_ln603_2_reg_2329(0) = '1') else 
        ap_const_lv16_0;
    select_ln603_4_fu_1765_p3 <= 
        shl_ln604_1_fu_1740_p2 when (and_ln603_1_reg_2318(0) = '1') else 
        select_ln588_1_fu_1732_p3;
    select_ln603_5_fu_1777_p3 <= 
        trunc_ln586_1_fu_1721_p1 when (and_ln585_2_reg_2312(0) = '1') else 
        trunc_ln583_1_reg_2296;
    select_ln603_6_fu_1788_p3 <= 
        select_ln603_4_fu_1765_p3 when (or_ln603_3_fu_1772_p2(0) = '1') else 
        select_ln603_5_fu_1777_p3;
    select_ln603_7_fu_1808_p3 <= 
        select_ln603_6_reg_2334 when (or_ln603_5_reg_2339(0) = '1') else 
        ap_const_lv16_0;
    select_ln603_fu_1669_p3 <= 
        shl_ln604_fu_1644_p2 when (and_ln603_reg_2264(0) = '1') else 
        select_ln588_fu_1636_p3;
    select_ln60_1_fu_1855_p3 <= 
        y_6_fu_1835_p2 when (icmp_ln62_fu_1841_p2(0) = '1') else 
        ap_phi_mux_y_0_i48_phi_fu_364_p4;
    select_ln60_fu_1847_p3 <= 
        ap_const_lv8_0 when (icmp_ln62_fu_1841_p2(0) = '1') else 
        x_0_i49_reg_371;
    select_ln915_1_fu_1205_p3 <= 
        ap_const_lv11_3FF when (tmp_92_reg_2201(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln915_fu_1165_p3 <= 
        ap_const_lv11_3FF when (tmp_88_reg_2191(0) = '1') else 
        ap_const_lv11_3FE;
        sext_ln1148_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(coe_b_V_q0),17));

        sext_ln581_1_fu_1613_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_2231),32));

        sext_ln581_2_fu_1706_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_25_reg_2285),16));

        sext_ln581_3_fu_1709_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_25_reg_2285),32));

        sext_ln581_fu_1610_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_2231),16));

    sh_amt_25_fu_1528_p3 <= 
        add_ln581_1_fu_1516_p2 when (icmp_ln581_1_fu_1510_p2(0) = '1') else 
        sub_ln581_1_fu_1522_p2;
    sh_amt_fu_1344_p3 <= 
        add_ln581_fu_1332_p2 when (icmp_ln581_fu_1326_p2(0) = '1') else 
        sub_ln581_fu_1338_p2;
    shl_ln29_mid2_fu_549_p3 <= (trunc_ln24_fu_545_p1 & ap_const_lv7_0);
    shl_ln49_mid2_fu_469_p3 <= (trunc_ln45_reg_1996 & ap_const_lv7_0);
    shl_ln604_1_fu_1740_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_1_reg_2296),to_integer(unsigned('0' & sext_ln581_2_fu_1706_p1(16-1 downto 0)))));
    shl_ln604_fu_1644_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_reg_2242),to_integer(unsigned('0' & sext_ln581_fu_1610_p1(16-1 downto 0)))));
    shl_ln65_mid2_fu_1867_p3 <= (trunc_ln60_fu_1863_p1 & ap_const_lv7_0);
    shl_ln908_1_fu_1120_p2 <= std_logic_vector(shift_left(unsigned(m_9_fu_1085_p1),to_integer(unsigned('0' & zext_ln908_3_fu_1116_p1(31-1 downto 0)))));
    shl_ln908_fu_967_p2 <= std_logic_vector(shift_left(unsigned(m_fu_932_p1),to_integer(unsigned('0' & zext_ln908_1_fu_963_p1(31-1 downto 0)))));
    sub_ln581_1_fu_1522_p2 <= std_logic_vector(unsigned(ap_const_lv12_F) - unsigned(F2_1_fu_1494_p2));
    sub_ln581_fu_1338_p2 <= std_logic_vector(unsigned(ap_const_lv12_F) - unsigned(F2_fu_1310_p2));
    sub_ln889_1_fu_704_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(grp_fu_657_p2));
    sub_ln889_fu_676_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(grp_fu_652_p2));
    sub_ln894_1_fu_816_p2 <= std_logic_vector(unsigned(ap_const_lv32_12) - unsigned(l_1_fu_808_p3));
    sub_ln894_fu_747_p2 <= std_logic_vector(unsigned(ap_const_lv32_12) - unsigned(l_fu_739_p3));
    sub_ln897_1_fu_846_p2 <= std_logic_vector(unsigned(ap_const_lv5_8) - unsigned(trunc_ln897_1_fu_842_p1));
    sub_ln897_fu_777_p2 <= std_logic_vector(unsigned(ap_const_lv5_8) - unsigned(trunc_ln897_fu_773_p1));
    sub_ln908_1_fu_1111_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln894_1_reg_2154));
    sub_ln908_fu_958_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln894_reg_2116));
    sub_ln915_1_fu_1212_p2 <= std_logic_vector(unsigned(ap_const_lv11_3) - unsigned(trunc_ln893_1_reg_2181_pp1_iter24_reg));
    sub_ln915_fu_1172_p2 <= std_logic_vector(unsigned(ap_const_lv11_3) - unsigned(trunc_ln893_reg_2143_pp1_iter24_reg));

    tmp9_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state5, grp_fft_top_fu_382_in_r_address0, ap_block_pp0_stage0, zext_ln51_fu_485_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            tmp9_address0 <= zext_ln51_fu_485_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            tmp9_address0 <= grp_fft_top_fu_382_in_r_address0;
        else 
            tmp9_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_state5, grp_fft_top_fu_382_in_r_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            tmp9_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            tmp9_ce0 <= grp_fft_top_fu_382_in_r_ce0;
        else 
            tmp9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp9_d0 <= ((ap_const_lv16_0 & trunc_ln728_fu_490_p1) & ap_const_lv15_0);

    tmp9_we0_assign_proc : process(icmp_ln45_reg_1977, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln45_reg_1977 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            tmp9_we0 <= ap_const_logic_1;
        else 
            tmp9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_100_fu_1725_p3 <= ireg_V_1_reg_2270(63 downto 63);
    tmp_101_fu_1879_p2 <= std_logic_vector(unsigned(zext_ln62_fu_1875_p1) + unsigned(shl_ln65_mid2_fu_1867_p3));
    tmp_36_fu_1183_p3 <= (p_Result_48_reg_2081_pp1_iter24_reg & add_ln915_fu_1177_p2);
    tmp_37_fu_1223_p3 <= (p_Result_51_reg_2098_pp1_iter24_reg & add_ln915_1_fu_1217_p2);
    tmp_38_fu_1278_p3 <= (ap_const_lv1_1 & trunc_ln565_fu_1274_p1);
    tmp_39_fu_1462_p3 <= (ap_const_lv1_1 & trunc_ln565_1_fu_1458_p1);
    tmp_40_fu_436_p3 <= (select_ln45_1_fu_424_p3 & ap_const_lv7_0);
    tmp_41_fu_557_p3 <= (select_ln24_1_fu_537_p3 & ap_const_lv7_0);
    tmp_42_fu_1942_p3 <= (select_ln60_1_reg_2358_pp2_iter1_reg & ap_const_lv7_0);
    tmp_84_fu_479_p2 <= std_logic_vector(unsigned(zext_ln47_fu_476_p1) + unsigned(shl_ln49_mid2_fu_469_p3));
    tmp_87_fu_887_p3 <= lsb_index_reg_2127(31 downto 31);
    tmp_91_fu_1040_p3 <= lsb_index_1_reg_2165(31 downto 31);
    tmp_94_fu_1316_p4 <= F2_fu_1310_p2(11 downto 4);
    tmp_95_fu_1368_p4 <= sh_amt_fu_1344_p3(11 downto 4);
    tmp_96_fu_1629_p3 <= ireg_V_reg_2216(63 downto 63);
    tmp_98_fu_1500_p4 <= F2_1_fu_1494_p2(11 downto 4);
    tmp_99_fu_1552_p4 <= sh_amt_25_fu_1528_p3(11 downto 4);
    tmp_V_3_fu_682_p3 <= 
        sub_ln889_fu_676_p2 when (p_Result_48_fu_668_p3(0) = '1') else 
        grp_fu_652_p2;
    tmp_V_5_fu_710_p3 <= 
        sub_ln889_1_fu_704_p2 when (p_Result_51_fu_696_p3(0) = '1') else 
        grp_fu_657_p2;
    tmp_fu_573_p2 <= std_logic_vector(unsigned(zext_ln26_fu_569_p1) + unsigned(shl_ln29_mid2_fu_549_p3));
    trunc_ln24_fu_545_p1 <= select_ln24_1_fu_537_p3(7 - 1 downto 0);
    trunc_ln45_fu_432_p1 <= select_ln45_1_fu_424_p3(7 - 1 downto 0);
    trunc_ln556_1_fu_1432_p1 <= ireg_V_1_fu_1426_p3(63 - 1 downto 0);
    trunc_ln556_fu_1248_p1 <= ireg_V_fu_1242_p3(63 - 1 downto 0);
    trunc_ln565_1_fu_1458_p1 <= ireg_V_1_fu_1426_p3(52 - 1 downto 0);
    trunc_ln565_fu_1274_p1 <= ireg_V_fu_1242_p3(52 - 1 downto 0);
    trunc_ln583_1_fu_1542_p1 <= man_V_5_fu_1480_p3(16 - 1 downto 0);
    trunc_ln583_fu_1358_p1 <= man_V_2_fu_1296_p3(16 - 1 downto 0);
    trunc_ln586_1_fu_1721_p1 <= ashr_ln586_1_fu_1716_p2(16 - 1 downto 0);
    trunc_ln586_fu_1625_p1 <= ashr_ln586_fu_1620_p2(16 - 1 downto 0);
    trunc_ln60_fu_1863_p1 <= select_ln60_1_fu_1855_p3(7 - 1 downto 0);
    trunc_ln728_fu_490_p1 <= x_io_V_q0(1 - 1 downto 0);
    trunc_ln851_fu_1912_p1 <= fft_result_q0(15 - 1 downto 0);
    trunc_ln893_1_fu_852_p1 <= l_1_fu_808_p3(11 - 1 downto 0);
    trunc_ln893_fu_783_p1 <= l_fu_739_p3(11 - 1 downto 0);
    trunc_ln894_1_fu_822_p1 <= sub_ln894_1_fu_816_p2(18 - 1 downto 0);
    trunc_ln894_fu_753_p1 <= sub_ln894_fu_747_p2(18 - 1 downto 0);
    trunc_ln897_1_fu_842_p1 <= sub_ln894_1_fu_816_p2(5 - 1 downto 0);
    trunc_ln897_fu_773_p1 <= sub_ln894_fu_747_p2(5 - 1 downto 0);
    x_5_fu_463_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(select_ln45_fu_416_p3));
    x_6_fu_1890_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(select_ln60_fu_1847_p3));
    x_fu_600_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(select_ln24_fu_529_p3));

    x_io_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp2_iter2, ap_block_pp0_stage0, ap_block_pp2_stage0, zext_ln446_1_fu_458_p1, zext_ln180_5_fu_1962_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            x_io_V_address0 <= zext_ln180_5_fu_1962_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_io_V_address0 <= zext_ln446_1_fu_458_p1(14 - 1 downto 0);
        else 
            x_io_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    x_io_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1)))) then 
            x_io_V_ce0 <= ap_const_logic_1;
        else 
            x_io_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_io_V_d0 <= select_ln359_reg_2374;

    x_io_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln60_reg_2344_pp2_iter1_reg, ap_enable_reg_pp2_iter2)
    begin
        if (((icmp_ln60_reg_2344_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            x_io_V_we0 <= ap_const_logic_1;
        else 
            x_io_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln571_1_fu_1745_p2 <= (icmp_ln571_1_reg_2280 xor ap_const_lv1_1);
    xor_ln571_fu_1649_p2 <= (icmp_ln571_reg_2226 xor ap_const_lv1_1);
    xor_ln581_1_fu_1598_p2 <= (or_ln581_1_fu_1592_p2 xor ap_const_lv1_1);
    xor_ln581_fu_1414_p2 <= (or_ln581_fu_1408_p2 xor ap_const_lv1_1);
    xor_ln582_1_fu_1574_p2 <= (or_ln582_1_fu_1568_p2 xor ap_const_lv1_1);
    xor_ln582_fu_1390_p2 <= (or_ln582_fu_1384_p2 xor ap_const_lv1_1);
    xor_ln585_1_fu_1755_p2 <= (icmp_ln585_1_reg_2302 xor ap_const_lv1_1);
    xor_ln585_fu_1659_p2 <= (icmp_ln585_reg_2248 xor ap_const_lv1_1);
    xor_ln850_fu_1928_p2 <= (ret_V_fu_1896_p3 xor and_ln850_fu_1922_p2);
    xor_ln899_1_fu_1047_p2 <= (tmp_91_fu_1040_p3 xor ap_const_lv1_1);
    xor_ln899_fu_894_p2 <= (tmp_87_fu_887_p3 xor ap_const_lv1_1);
    y_5_fu_404_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(ap_phi_mux_y_0_i_phi_fu_298_p4));
    y_6_fu_1835_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(ap_phi_mux_y_0_i48_phi_fu_364_p4));
    y_fu_517_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(ap_phi_mux_y_0_phi_fu_331_p4));
    zext_ln1265_1_fu_594_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1265_fu_588_p2),64));
    zext_ln1265_fu_584_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln24_fu_529_p3),16));
    zext_ln180_5_fu_1962_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln180_fu_1956_p2),64));
    zext_ln180_fu_1953_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln60_reg_2353_pp2_iter1_reg),16));
    zext_ln26_1_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_fu_557_p3),16));
    zext_ln26_fu_569_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln24_fu_529_p3),14));
    zext_ln30_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_573_p2),64));
    zext_ln446_1_fu_458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln446_fu_452_p2),64));
    zext_ln446_fu_448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln45_fu_416_p3),16));
    zext_ln461_1_fu_1454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_1_fu_1444_p4),12));
    zext_ln461_fu_1270_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_fu_1260_p4),12));
    zext_ln47_1_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_40_fu_436_p3),16));
    zext_ln47_fu_476_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln45_reg_1986),14));
    zext_ln51_fu_485_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_84_fu_479_p2),64));
    zext_ln586_1_fu_1712_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_3_fu_1709_p1),54));
    zext_ln586_fu_1616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_1_fu_1613_p1),54));
    zext_ln62_1_fu_1949_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_fu_1942_p3),16));
    zext_ln62_fu_1875_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln60_fu_1847_p3),14));
    zext_ln67_fu_1885_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_101_fu_1879_p2),64));
    zext_ln888_1_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_5_reg_2103),18));
    zext_ln888_fu_718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_3_reg_2086),18));
    zext_ln897_1_fu_1014_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln897_1_reg_2176),18));
    zext_ln897_fu_861_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln897_reg_2138),18));
    zext_ln907_1_fu_935_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_3_reg_2086_pp1_iter23_reg),32));
    zext_ln907_2_fu_1088_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_5_reg_2103_pp1_iter23_reg),32));
    zext_ln908_1_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln908_fu_958_p2),64));
    zext_ln908_2_fu_1107_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln908_1_fu_1101_p2),64));
    zext_ln908_3_fu_1116_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln908_1_fu_1111_p2),64));
    zext_ln908_fu_954_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln908_fu_948_p2),64));
    zext_ln911_1_fu_1134_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln899_1_fu_1077_p3),64));
    zext_ln911_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_924_p3),64));
end behav;
