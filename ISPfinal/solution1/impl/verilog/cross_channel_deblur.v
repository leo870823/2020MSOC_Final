// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cross_channel_deblur (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Img_V_address0,
        Img_V_ce0,
        Img_V_we0,
        Img_V_d0,
        Img_V_q0,
        adjChImg_V_address0,
        adjChImg_V_ce0,
        adjChImg_V_q0,
        adjChImg_V_address1,
        adjChImg_V_ce1,
        adjChImg_V_q1,
        coe_a_M_real_address0,
        coe_a_M_real_ce0,
        coe_a_M_real_q0,
        coe_a_M_imag_address0,
        coe_a_M_imag_ce0,
        coe_a_M_imag_q0,
        coe_b_address0,
        coe_b_ce0,
        coe_b_q0
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_state6 = 13'd32;
parameter    ap_ST_fsm_state7 = 13'd64;
parameter    ap_ST_fsm_state8 = 13'd128;
parameter    ap_ST_fsm_state9 = 13'd256;
parameter    ap_ST_fsm_state10 = 13'd512;
parameter    ap_ST_fsm_state11 = 13'd1024;
parameter    ap_ST_fsm_state12 = 13'd2048;
parameter    ap_ST_fsm_state13 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] Img_V_address0;
output   Img_V_ce0;
output   Img_V_we0;
output  [7:0] Img_V_d0;
input  [7:0] Img_V_q0;
output  [13:0] adjChImg_V_address0;
output   adjChImg_V_ce0;
input  [7:0] adjChImg_V_q0;
output  [13:0] adjChImg_V_address1;
output   adjChImg_V_ce1;
input  [7:0] adjChImg_V_q1;
output  [13:0] coe_a_M_real_address0;
output   coe_a_M_real_ce0;
input  [31:0] coe_a_M_real_q0;
output  [13:0] coe_a_M_imag_address0;
output   coe_a_M_imag_ce0;
input  [31:0] coe_a_M_imag_q0;
output  [13:0] coe_b_address0;
output   coe_b_ce0;
input  [31:0] coe_b_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] Img_V_address0;
reg Img_V_ce0;
reg Img_V_we0;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [14:0] add_ln41_fu_356_p2;
wire    ap_CS_fsm_state5;
wire   [7:0] select_ln46_1_fu_382_p3;
wire   [0:0] icmp_ln41_fu_350_p2;
wire   [7:0] x_fu_423_p2;
wire   [1:0] k_fu_435_p2;
reg   [1:0] k_reg_543;
wire    ap_CS_fsm_state7;
wire   [14:0] add_ln121_fu_447_p2;
reg   [14:0] add_ln121_reg_551;
wire    ap_CS_fsm_state11;
wire   [7:0] select_ln126_1_fu_473_p3;
reg   [7:0] select_ln126_1_reg_556;
wire   [0:0] icmp_ln121_fu_441_p2;
wire   [63:0] zext_ln321_3_fu_503_p1;
reg   [63:0] zext_ln321_3_reg_561;
wire   [7:0] i_fu_509_p2;
reg   [7:0] i_reg_576;
reg   [13:0] x_bar_V_address0;
reg    x_bar_V_ce0;
reg    x_bar_V_we0;
reg   [7:0] x_bar_V_d0;
wire   [7:0] x_bar_V_q0;
reg    x_bar_V_ce1;
wire   [7:0] x_bar_V_q1;
reg   [13:0] x_old_V_address0;
reg    x_old_V_ce0;
reg    x_old_V_we0;
wire   [7:0] x_old_V_q0;
reg   [13:0] x_V_address0;
reg    x_V_ce0;
reg    x_V_we0;
reg   [7:0] x_V_d0;
wire   [7:0] x_V_q0;
reg   [13:0] y_1_V_address0;
reg    y_1_V_ce0;
reg    y_1_V_we0;
reg   [7:0] y_1_V_d0;
wire   [7:0] y_1_V_q0;
reg    y_1_V_ce1;
reg    y_1_V_we1;
reg   [13:0] y_2_V_address0;
reg    y_2_V_ce0;
reg    y_2_V_we0;
reg   [7:0] y_2_V_d0;
wire   [7:0] y_2_V_q0;
reg    y_2_V_ce1;
reg    y_2_V_we1;
reg   [13:0] y_3_V_address0;
reg    y_3_V_ce0;
reg    y_3_V_we0;
reg   [7:0] y_3_V_d0;
wire   [7:0] y_3_V_q0;
reg   [13:0] y_4_V_address0;
reg    y_4_V_ce0;
reg    y_4_V_we0;
reg   [7:0] y_4_V_d0;
wire   [7:0] y_4_V_q0;
reg    y_4_V_ce1;
reg    y_4_V_we1;
reg   [13:0] y_5_V_address0;
reg    y_5_V_ce0;
reg    y_5_V_we0;
reg   [7:0] y_5_V_d0;
wire   [7:0] y_5_V_q0;
reg   [13:0] y_6_V_address0;
reg    y_6_V_ce0;
reg    y_6_V_we0;
reg   [7:0] y_6_V_d0;
wire   [7:0] y_6_V_q0;
reg    y_6_V_ce1;
reg    y_6_V_we1;
reg   [13:0] y_7_V_address0;
reg    y_7_V_ce0;
reg    y_7_V_we0;
reg   [7:0] y_7_V_d0;
wire   [7:0] y_7_V_q0;
reg    y_7_V_ce1;
reg    y_7_V_we1;
wire    grp_ProxGS4_fu_316_ap_start;
wire    grp_ProxGS4_fu_316_ap_done;
wire    grp_ProxGS4_fu_316_ap_idle;
wire    grp_ProxGS4_fu_316_ap_ready;
wire   [13:0] grp_ProxGS4_fu_316_x_io_V_address0;
wire    grp_ProxGS4_fu_316_x_io_V_ce0;
wire    grp_ProxGS4_fu_316_x_io_V_we0;
wire   [7:0] grp_ProxGS4_fu_316_x_io_V_d0;
wire   [13:0] grp_ProxGS4_fu_316_coe_a_M_real_address0;
wire    grp_ProxGS4_fu_316_coe_a_M_real_ce0;
wire   [13:0] grp_ProxGS4_fu_316_coe_a_M_imag_address0;
wire    grp_ProxGS4_fu_316_coe_a_M_imag_ce0;
wire   [13:0] grp_ProxGS4_fu_316_coe_b_address0;
wire    grp_ProxGS4_fu_316_coe_b_ce0;
wire    grp_my_filter_v12_fu_327_ap_start;
wire    grp_my_filter_v12_fu_327_ap_done;
wire    grp_my_filter_v12_fu_327_ap_idle;
wire    grp_my_filter_v12_fu_327_ap_ready;
wire   [13:0] grp_my_filter_v12_fu_327_f_V_address0;
wire    grp_my_filter_v12_fu_327_f_V_ce0;
wire   [13:0] grp_my_filter_v12_fu_327_f_V_address1;
wire    grp_my_filter_v12_fu_327_f_V_ce1;
wire   [13:0] grp_my_filter_v12_fu_327_adjChImg_V_address0;
wire    grp_my_filter_v12_fu_327_adjChImg_V_ce0;
wire   [13:0] grp_my_filter_v12_fu_327_adjChImg_V_address1;
wire    grp_my_filter_v12_fu_327_adjChImg_V_ce1;
wire   [13:0] grp_my_filter_v12_fu_327_g1_V_address0;
wire    grp_my_filter_v12_fu_327_g1_V_ce0;
wire    grp_my_filter_v12_fu_327_g1_V_we0;
wire   [7:0] grp_my_filter_v12_fu_327_g1_V_d0;
wire   [13:0] grp_my_filter_v12_fu_327_g1_V_address1;
wire    grp_my_filter_v12_fu_327_g1_V_ce1;
wire    grp_my_filter_v12_fu_327_g1_V_we1;
wire   [7:0] grp_my_filter_v12_fu_327_g1_V_d1;
wire   [13:0] grp_my_filter_v12_fu_327_g2_V_address0;
wire    grp_my_filter_v12_fu_327_g2_V_ce0;
wire    grp_my_filter_v12_fu_327_g2_V_we0;
wire   [7:0] grp_my_filter_v12_fu_327_g2_V_d0;
wire   [13:0] grp_my_filter_v12_fu_327_g2_V_address1;
wire    grp_my_filter_v12_fu_327_g2_V_ce1;
wire    grp_my_filter_v12_fu_327_g2_V_we1;
wire   [7:0] grp_my_filter_v12_fu_327_g2_V_d1;
wire   [13:0] grp_my_filter_v12_fu_327_g3_V_address0;
wire    grp_my_filter_v12_fu_327_g3_V_ce0;
wire    grp_my_filter_v12_fu_327_g3_V_we0;
wire   [7:0] grp_my_filter_v12_fu_327_g3_V_d0;
wire   [13:0] grp_my_filter_v12_fu_327_g4_V_address0;
wire    grp_my_filter_v12_fu_327_g4_V_ce0;
wire    grp_my_filter_v12_fu_327_g4_V_we0;
wire   [7:0] grp_my_filter_v12_fu_327_g4_V_d0;
wire   [13:0] grp_my_filter_v12_fu_327_g4_V_address1;
wire    grp_my_filter_v12_fu_327_g4_V_ce1;
wire    grp_my_filter_v12_fu_327_g4_V_we1;
wire   [7:0] grp_my_filter_v12_fu_327_g4_V_d1;
wire   [13:0] grp_my_filter_v12_fu_327_g5_V_address0;
wire    grp_my_filter_v12_fu_327_g5_V_ce0;
wire    grp_my_filter_v12_fu_327_g5_V_we0;
wire   [7:0] grp_my_filter_v12_fu_327_g5_V_d0;
wire   [13:0] grp_my_filter_v12_fu_327_g6_V_address0;
wire    grp_my_filter_v12_fu_327_g6_V_ce0;
wire    grp_my_filter_v12_fu_327_g6_V_we0;
wire   [7:0] grp_my_filter_v12_fu_327_g6_V_d0;
wire   [13:0] grp_my_filter_v12_fu_327_g6_V_address1;
wire    grp_my_filter_v12_fu_327_g6_V_ce1;
wire    grp_my_filter_v12_fu_327_g6_V_we1;
wire   [7:0] grp_my_filter_v12_fu_327_g6_V_d1;
wire   [13:0] grp_my_filter_v12_fu_327_g7_V_address0;
wire    grp_my_filter_v12_fu_327_g7_V_ce0;
wire    grp_my_filter_v12_fu_327_g7_V_we0;
wire   [7:0] grp_my_filter_v12_fu_327_g7_V_d0;
wire   [13:0] grp_my_filter_v12_fu_327_g7_V_address1;
wire    grp_my_filter_v12_fu_327_g7_V_ce1;
wire    grp_my_filter_v12_fu_327_g7_V_we1;
wire   [7:0] grp_my_filter_v12_fu_327_g7_V_d1;
wire    grp_array_copy3_fu_341_ap_start;
wire    grp_array_copy3_fu_341_ap_done;
wire    grp_array_copy3_fu_341_ap_idle;
wire    grp_array_copy3_fu_341_ap_ready;
wire   [13:0] grp_array_copy3_fu_341_data_in_V_address0;
wire    grp_array_copy3_fu_341_data_in_V_ce0;
reg   [7:0] grp_array_copy3_fu_341_data_in_V_q0;
wire   [13:0] grp_array_copy3_fu_341_data_out_V_address0;
wire    grp_array_copy3_fu_341_data_out_V_ce0;
wire    grp_array_copy3_fu_341_data_out_V_we0;
wire   [7:0] grp_array_copy3_fu_341_data_out_V_d0;
reg   [14:0] indvar_flatten_reg_239;
wire    ap_CS_fsm_state4;
reg   [7:0] y_0_i_reg_250;
reg   [7:0] x_0_i_reg_261;
reg   [1:0] k_0_reg_272;
wire    ap_CS_fsm_state6;
reg   [14:0] indvar_flatten11_reg_283;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state12;
reg   [7:0] j_0_i_reg_294;
reg   [7:0] i_0_i_reg_305;
reg    grp_ProxGS4_fu_316_ap_start_reg;
wire    ap_CS_fsm_state9;
reg    grp_my_filter_v12_fu_327_ap_start_reg;
wire   [0:0] icmp_ln78_fu_429_p2;
wire    ap_CS_fsm_state8;
reg    grp_array_copy3_fu_341_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state13;
wire   [63:0] zext_ln321_1_fu_412_p1;
wire   [7:0] sub_ln214_fu_515_p2;
wire   [0:0] icmp_ln43_fu_368_p2;
wire   [7:0] y_fu_362_p2;
wire   [14:0] tmp_fu_390_p3;
wire   [7:0] select_ln46_fu_374_p3;
wire   [15:0] zext_ln321_fu_402_p1;
wire   [15:0] zext_ln44_fu_398_p1;
wire   [15:0] add_ln321_fu_406_p2;
wire   [0:0] icmp_ln123_fu_459_p2;
wire   [7:0] j_fu_453_p2;
wire   [14:0] tmp_s_fu_481_p3;
wire   [7:0] select_ln126_fu_465_p3;
wire   [15:0] zext_ln321_2_fu_493_p1;
wire   [15:0] zext_ln124_fu_489_p1;
wire   [15:0] add_ln321_1_fu_497_p2;
reg   [12:0] ap_NS_fsm;
reg    ap_block_state8_on_subcall_done;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
#0 grp_ProxGS4_fu_316_ap_start_reg = 1'b0;
#0 grp_my_filter_v12_fu_327_ap_start_reg = 1'b0;
#0 grp_array_copy3_fu_341_ap_start_reg = 1'b0;
end

cross_channel_debtde #(
    .DataWidth( 8 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
x_bar_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x_bar_V_address0),
    .ce0(x_bar_V_ce0),
    .we0(x_bar_V_we0),
    .d0(x_bar_V_d0),
    .q0(x_bar_V_q0),
    .address1(grp_my_filter_v12_fu_327_f_V_address1),
    .ce1(x_bar_V_ce1),
    .q1(x_bar_V_q1)
);

cross_channel_debudo #(
    .DataWidth( 8 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
x_old_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x_old_V_address0),
    .ce0(x_old_V_ce0),
    .we0(x_old_V_we0),
    .d0(grp_array_copy3_fu_341_data_out_V_d0),
    .q0(x_old_V_q0)
);

cross_channel_debudo #(
    .DataWidth( 8 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
x_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x_V_address0),
    .ce0(x_V_ce0),
    .we0(x_V_we0),
    .d0(x_V_d0),
    .q0(x_V_q0)
);

cross_channel_debwdI #(
    .DataWidth( 8 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
y_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_1_V_address0),
    .ce0(y_1_V_ce0),
    .we0(y_1_V_we0),
    .d0(y_1_V_d0),
    .q0(y_1_V_q0),
    .address1(grp_my_filter_v12_fu_327_g1_V_address1),
    .ce1(y_1_V_ce1),
    .we1(y_1_V_we1),
    .d1(grp_my_filter_v12_fu_327_g1_V_d1)
);

cross_channel_debwdI #(
    .DataWidth( 8 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
y_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_2_V_address0),
    .ce0(y_2_V_ce0),
    .we0(y_2_V_we0),
    .d0(y_2_V_d0),
    .q0(y_2_V_q0),
    .address1(grp_my_filter_v12_fu_327_g2_V_address1),
    .ce1(y_2_V_ce1),
    .we1(y_2_V_we1),
    .d1(grp_my_filter_v12_fu_327_g2_V_d1)
);

cross_channel_debudo #(
    .DataWidth( 8 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
y_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_3_V_address0),
    .ce0(y_3_V_ce0),
    .we0(y_3_V_we0),
    .d0(y_3_V_d0),
    .q0(y_3_V_q0)
);

cross_channel_debwdI #(
    .DataWidth( 8 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
y_4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_4_V_address0),
    .ce0(y_4_V_ce0),
    .we0(y_4_V_we0),
    .d0(y_4_V_d0),
    .q0(y_4_V_q0),
    .address1(grp_my_filter_v12_fu_327_g4_V_address1),
    .ce1(y_4_V_ce1),
    .we1(y_4_V_we1),
    .d1(grp_my_filter_v12_fu_327_g4_V_d1)
);

cross_channel_debudo #(
    .DataWidth( 8 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
y_5_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_5_V_address0),
    .ce0(y_5_V_ce0),
    .we0(y_5_V_we0),
    .d0(y_5_V_d0),
    .q0(y_5_V_q0)
);

cross_channel_debwdI #(
    .DataWidth( 8 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
y_6_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_6_V_address0),
    .ce0(y_6_V_ce0),
    .we0(y_6_V_we0),
    .d0(y_6_V_d0),
    .q0(y_6_V_q0),
    .address1(grp_my_filter_v12_fu_327_g6_V_address1),
    .ce1(y_6_V_ce1),
    .we1(y_6_V_we1),
    .d1(grp_my_filter_v12_fu_327_g6_V_d1)
);

cross_channel_debwdI #(
    .DataWidth( 8 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
y_7_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_7_V_address0),
    .ce0(y_7_V_ce0),
    .we0(y_7_V_we0),
    .d0(y_7_V_d0),
    .q0(y_7_V_q0),
    .address1(grp_my_filter_v12_fu_327_g7_V_address1),
    .ce1(y_7_V_ce1),
    .we1(y_7_V_we1),
    .d1(grp_my_filter_v12_fu_327_g7_V_d1)
);

ProxGS4 grp_ProxGS4_fu_316(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ProxGS4_fu_316_ap_start),
    .ap_done(grp_ProxGS4_fu_316_ap_done),
    .ap_idle(grp_ProxGS4_fu_316_ap_idle),
    .ap_ready(grp_ProxGS4_fu_316_ap_ready),
    .x_io_V_address0(grp_ProxGS4_fu_316_x_io_V_address0),
    .x_io_V_ce0(grp_ProxGS4_fu_316_x_io_V_ce0),
    .x_io_V_we0(grp_ProxGS4_fu_316_x_io_V_we0),
    .x_io_V_d0(grp_ProxGS4_fu_316_x_io_V_d0),
    .x_io_V_q0(x_V_q0),
    .coe_a_M_real_address0(grp_ProxGS4_fu_316_coe_a_M_real_address0),
    .coe_a_M_real_ce0(grp_ProxGS4_fu_316_coe_a_M_real_ce0),
    .coe_a_M_real_q0(coe_a_M_real_q0),
    .coe_a_M_imag_address0(grp_ProxGS4_fu_316_coe_a_M_imag_address0),
    .coe_a_M_imag_ce0(grp_ProxGS4_fu_316_coe_a_M_imag_ce0),
    .coe_a_M_imag_q0(coe_a_M_imag_q0),
    .coe_b_address0(grp_ProxGS4_fu_316_coe_b_address0),
    .coe_b_ce0(grp_ProxGS4_fu_316_coe_b_ce0),
    .coe_b_q0(coe_b_q0)
);

my_filter_v12 grp_my_filter_v12_fu_327(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_my_filter_v12_fu_327_ap_start),
    .ap_done(grp_my_filter_v12_fu_327_ap_done),
    .ap_idle(grp_my_filter_v12_fu_327_ap_idle),
    .ap_ready(grp_my_filter_v12_fu_327_ap_ready),
    .f_V_address0(grp_my_filter_v12_fu_327_f_V_address0),
    .f_V_ce0(grp_my_filter_v12_fu_327_f_V_ce0),
    .f_V_q0(x_bar_V_q0),
    .f_V_address1(grp_my_filter_v12_fu_327_f_V_address1),
    .f_V_ce1(grp_my_filter_v12_fu_327_f_V_ce1),
    .f_V_q1(x_bar_V_q1),
    .adjChImg_V_address0(grp_my_filter_v12_fu_327_adjChImg_V_address0),
    .adjChImg_V_ce0(grp_my_filter_v12_fu_327_adjChImg_V_ce0),
    .adjChImg_V_q0(adjChImg_V_q0),
    .adjChImg_V_address1(grp_my_filter_v12_fu_327_adjChImg_V_address1),
    .adjChImg_V_ce1(grp_my_filter_v12_fu_327_adjChImg_V_ce1),
    .adjChImg_V_q1(adjChImg_V_q1),
    .g1_V_address0(grp_my_filter_v12_fu_327_g1_V_address0),
    .g1_V_ce0(grp_my_filter_v12_fu_327_g1_V_ce0),
    .g1_V_we0(grp_my_filter_v12_fu_327_g1_V_we0),
    .g1_V_d0(grp_my_filter_v12_fu_327_g1_V_d0),
    .g1_V_q0(y_1_V_q0),
    .g1_V_address1(grp_my_filter_v12_fu_327_g1_V_address1),
    .g1_V_ce1(grp_my_filter_v12_fu_327_g1_V_ce1),
    .g1_V_we1(grp_my_filter_v12_fu_327_g1_V_we1),
    .g1_V_d1(grp_my_filter_v12_fu_327_g1_V_d1),
    .g2_V_address0(grp_my_filter_v12_fu_327_g2_V_address0),
    .g2_V_ce0(grp_my_filter_v12_fu_327_g2_V_ce0),
    .g2_V_we0(grp_my_filter_v12_fu_327_g2_V_we0),
    .g2_V_d0(grp_my_filter_v12_fu_327_g2_V_d0),
    .g2_V_q0(y_2_V_q0),
    .g2_V_address1(grp_my_filter_v12_fu_327_g2_V_address1),
    .g2_V_ce1(grp_my_filter_v12_fu_327_g2_V_ce1),
    .g2_V_we1(grp_my_filter_v12_fu_327_g2_V_we1),
    .g2_V_d1(grp_my_filter_v12_fu_327_g2_V_d1),
    .g3_V_address0(grp_my_filter_v12_fu_327_g3_V_address0),
    .g3_V_ce0(grp_my_filter_v12_fu_327_g3_V_ce0),
    .g3_V_we0(grp_my_filter_v12_fu_327_g3_V_we0),
    .g3_V_d0(grp_my_filter_v12_fu_327_g3_V_d0),
    .g3_V_q0(y_3_V_q0),
    .g4_V_address0(grp_my_filter_v12_fu_327_g4_V_address0),
    .g4_V_ce0(grp_my_filter_v12_fu_327_g4_V_ce0),
    .g4_V_we0(grp_my_filter_v12_fu_327_g4_V_we0),
    .g4_V_d0(grp_my_filter_v12_fu_327_g4_V_d0),
    .g4_V_q0(y_4_V_q0),
    .g4_V_address1(grp_my_filter_v12_fu_327_g4_V_address1),
    .g4_V_ce1(grp_my_filter_v12_fu_327_g4_V_ce1),
    .g4_V_we1(grp_my_filter_v12_fu_327_g4_V_we1),
    .g4_V_d1(grp_my_filter_v12_fu_327_g4_V_d1),
    .g5_V_address0(grp_my_filter_v12_fu_327_g5_V_address0),
    .g5_V_ce0(grp_my_filter_v12_fu_327_g5_V_ce0),
    .g5_V_we0(grp_my_filter_v12_fu_327_g5_V_we0),
    .g5_V_d0(grp_my_filter_v12_fu_327_g5_V_d0),
    .g5_V_q0(y_5_V_q0),
    .g6_V_address0(grp_my_filter_v12_fu_327_g6_V_address0),
    .g6_V_ce0(grp_my_filter_v12_fu_327_g6_V_ce0),
    .g6_V_we0(grp_my_filter_v12_fu_327_g6_V_we0),
    .g6_V_d0(grp_my_filter_v12_fu_327_g6_V_d0),
    .g6_V_q0(y_6_V_q0),
    .g6_V_address1(grp_my_filter_v12_fu_327_g6_V_address1),
    .g6_V_ce1(grp_my_filter_v12_fu_327_g6_V_ce1),
    .g6_V_we1(grp_my_filter_v12_fu_327_g6_V_we1),
    .g6_V_d1(grp_my_filter_v12_fu_327_g6_V_d1),
    .g7_V_address0(grp_my_filter_v12_fu_327_g7_V_address0),
    .g7_V_ce0(grp_my_filter_v12_fu_327_g7_V_ce0),
    .g7_V_we0(grp_my_filter_v12_fu_327_g7_V_we0),
    .g7_V_d0(grp_my_filter_v12_fu_327_g7_V_d0),
    .g7_V_q0(y_7_V_q0),
    .g7_V_address1(grp_my_filter_v12_fu_327_g7_V_address1),
    .g7_V_ce1(grp_my_filter_v12_fu_327_g7_V_ce1),
    .g7_V_we1(grp_my_filter_v12_fu_327_g7_V_we1),
    .g7_V_d1(grp_my_filter_v12_fu_327_g7_V_d1)
);

array_copy3 grp_array_copy3_fu_341(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_array_copy3_fu_341_ap_start),
    .ap_done(grp_array_copy3_fu_341_ap_done),
    .ap_idle(grp_array_copy3_fu_341_ap_idle),
    .ap_ready(grp_array_copy3_fu_341_ap_ready),
    .data_in_V_address0(grp_array_copy3_fu_341_data_in_V_address0),
    .data_in_V_ce0(grp_array_copy3_fu_341_data_in_V_ce0),
    .data_in_V_q0(grp_array_copy3_fu_341_data_in_V_q0),
    .data_out_V_address0(grp_array_copy3_fu_341_data_out_V_address0),
    .data_out_V_ce0(grp_array_copy3_fu_341_data_out_V_ce0),
    .data_out_V_we0(grp_array_copy3_fu_341_data_out_V_we0),
    .data_out_V_d0(grp_array_copy3_fu_341_data_out_V_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ProxGS4_fu_316_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_ProxGS4_fu_316_ap_start_reg <= 1'b1;
        end else if ((grp_ProxGS4_fu_316_ap_ready == 1'b1)) begin
            grp_ProxGS4_fu_316_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_array_copy3_fu_341_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln78_fu_429_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln78_fu_429_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
            grp_array_copy3_fu_341_ap_start_reg <= 1'b1;
        end else if ((grp_array_copy3_fu_341_ap_ready == 1'b1)) begin
            grp_array_copy3_fu_341_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_my_filter_v12_fu_327_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln78_fu_429_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
            grp_my_filter_v12_fu_327_ap_start_reg <= 1'b1;
        end else if ((grp_my_filter_v12_fu_327_ap_ready == 1'b1)) begin
            grp_my_filter_v12_fu_327_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_0_i_reg_305 <= i_reg_576;
    end else if (((grp_ProxGS4_fu_316_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        i_0_i_reg_305 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        indvar_flatten11_reg_283 <= add_ln121_reg_551;
    end else if (((grp_ProxGS4_fu_316_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        indvar_flatten11_reg_283 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_fu_350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        indvar_flatten_reg_239 <= add_ln41_fu_356_p2;
    end else if (((grp_array_copy3_fu_341_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        indvar_flatten_reg_239 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        j_0_i_reg_294 <= select_ln126_1_reg_556;
    end else if (((grp_ProxGS4_fu_316_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        j_0_i_reg_294 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        k_0_reg_272 <= 2'd0;
    end else if (((icmp_ln121_fu_441_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        k_0_reg_272 <= k_reg_543;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_fu_350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        x_0_i_reg_261 <= x_fu_423_p2;
    end else if (((grp_array_copy3_fu_341_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        x_0_i_reg_261 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_fu_350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        y_0_i_reg_250 <= select_ln46_1_fu_382_p3;
    end else if (((grp_array_copy3_fu_341_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        y_0_i_reg_250 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln121_reg_551 <= add_ln121_fu_447_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln121_fu_441_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        i_reg_576 <= i_fu_509_p2;
        select_ln126_1_reg_556 <= select_ln126_1_fu_473_p3;
        zext_ln321_3_reg_561[15 : 0] <= zext_ln321_3_fu_503_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        k_reg_543 <= k_fu_435_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        Img_V_address0 = grp_array_copy3_fu_341_data_out_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        Img_V_address0 = grp_array_copy3_fu_341_data_in_V_address0;
    end else begin
        Img_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        Img_V_ce0 = grp_array_copy3_fu_341_data_out_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        Img_V_ce0 = grp_array_copy3_fu_341_data_in_V_ce0;
    end else begin
        Img_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        Img_V_we0 = grp_array_copy3_fu_341_data_out_V_we0;
    end else begin
        Img_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_array_copy3_fu_341_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_array_copy3_fu_341_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_array_copy3_fu_341_data_in_V_q0 = x_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_array_copy3_fu_341_data_in_V_q0 = Img_V_q0;
    end else begin
        grp_array_copy3_fu_341_data_in_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        x_V_address0 = zext_ln321_3_fu_503_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x_V_address0 = grp_array_copy3_fu_341_data_out_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8))) begin
        x_V_address0 = grp_array_copy3_fu_341_data_in_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        x_V_address0 = grp_ProxGS4_fu_316_x_io_V_address0;
    end else begin
        x_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        x_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x_V_ce0 = grp_array_copy3_fu_341_data_out_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8))) begin
        x_V_ce0 = grp_array_copy3_fu_341_data_in_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        x_V_ce0 = grp_ProxGS4_fu_316_x_io_V_ce0;
    end else begin
        x_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        x_V_d0 = grp_array_copy3_fu_341_data_out_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        x_V_d0 = grp_ProxGS4_fu_316_x_io_V_d0;
    end else begin
        x_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        x_V_we0 = grp_array_copy3_fu_341_data_out_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        x_V_we0 = grp_ProxGS4_fu_316_x_io_V_we0;
    end else begin
        x_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        x_bar_V_address0 = zext_ln321_3_reg_561;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x_bar_V_address0 = grp_array_copy3_fu_341_data_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x_bar_V_address0 = grp_my_filter_v12_fu_327_f_V_address0;
    end else begin
        x_bar_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        x_bar_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x_bar_V_ce0 = grp_array_copy3_fu_341_data_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x_bar_V_ce0 = grp_my_filter_v12_fu_327_f_V_ce0;
    end else begin
        x_bar_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        x_bar_V_ce1 = grp_my_filter_v12_fu_327_f_V_ce1;
    end else begin
        x_bar_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        x_bar_V_d0 = sub_ln214_fu_515_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x_bar_V_d0 = grp_array_copy3_fu_341_data_out_V_d0;
    end else begin
        x_bar_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        x_bar_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x_bar_V_we0 = grp_array_copy3_fu_341_data_out_V_we0;
    end else begin
        x_bar_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        x_old_V_address0 = zext_ln321_3_fu_503_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x_old_V_address0 = grp_array_copy3_fu_341_data_out_V_address0;
    end else begin
        x_old_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        x_old_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x_old_V_ce0 = grp_array_copy3_fu_341_data_out_V_ce0;
    end else begin
        x_old_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        x_old_V_we0 = grp_array_copy3_fu_341_data_out_V_we0;
    end else begin
        x_old_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_1_V_address0 = zext_ln321_1_fu_412_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_1_V_address0 = grp_my_filter_v12_fu_327_g1_V_address0;
    end else begin
        y_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_1_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_1_V_ce0 = grp_my_filter_v12_fu_327_g1_V_ce0;
    end else begin
        y_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        y_1_V_ce1 = grp_my_filter_v12_fu_327_g1_V_ce1;
    end else begin
        y_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_1_V_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_1_V_d0 = grp_my_filter_v12_fu_327_g1_V_d0;
    end else begin
        y_1_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln41_fu_350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        y_1_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_1_V_we0 = grp_my_filter_v12_fu_327_g1_V_we0;
    end else begin
        y_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        y_1_V_we1 = grp_my_filter_v12_fu_327_g1_V_we1;
    end else begin
        y_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_2_V_address0 = zext_ln321_1_fu_412_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_2_V_address0 = grp_my_filter_v12_fu_327_g2_V_address0;
    end else begin
        y_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_2_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_2_V_ce0 = grp_my_filter_v12_fu_327_g2_V_ce0;
    end else begin
        y_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        y_2_V_ce1 = grp_my_filter_v12_fu_327_g2_V_ce1;
    end else begin
        y_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_2_V_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_2_V_d0 = grp_my_filter_v12_fu_327_g2_V_d0;
    end else begin
        y_2_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln41_fu_350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        y_2_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_2_V_we0 = grp_my_filter_v12_fu_327_g2_V_we0;
    end else begin
        y_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        y_2_V_we1 = grp_my_filter_v12_fu_327_g2_V_we1;
    end else begin
        y_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_3_V_address0 = zext_ln321_1_fu_412_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_3_V_address0 = grp_my_filter_v12_fu_327_g3_V_address0;
    end else begin
        y_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_3_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_3_V_ce0 = grp_my_filter_v12_fu_327_g3_V_ce0;
    end else begin
        y_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_3_V_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_3_V_d0 = grp_my_filter_v12_fu_327_g3_V_d0;
    end else begin
        y_3_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln41_fu_350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        y_3_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_3_V_we0 = grp_my_filter_v12_fu_327_g3_V_we0;
    end else begin
        y_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_4_V_address0 = zext_ln321_1_fu_412_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_4_V_address0 = grp_my_filter_v12_fu_327_g4_V_address0;
    end else begin
        y_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_4_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_4_V_ce0 = grp_my_filter_v12_fu_327_g4_V_ce0;
    end else begin
        y_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        y_4_V_ce1 = grp_my_filter_v12_fu_327_g4_V_ce1;
    end else begin
        y_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_4_V_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_4_V_d0 = grp_my_filter_v12_fu_327_g4_V_d0;
    end else begin
        y_4_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln41_fu_350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        y_4_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_4_V_we0 = grp_my_filter_v12_fu_327_g4_V_we0;
    end else begin
        y_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        y_4_V_we1 = grp_my_filter_v12_fu_327_g4_V_we1;
    end else begin
        y_4_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_5_V_address0 = zext_ln321_1_fu_412_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_5_V_address0 = grp_my_filter_v12_fu_327_g5_V_address0;
    end else begin
        y_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_5_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_5_V_ce0 = grp_my_filter_v12_fu_327_g5_V_ce0;
    end else begin
        y_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_5_V_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_5_V_d0 = grp_my_filter_v12_fu_327_g5_V_d0;
    end else begin
        y_5_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln41_fu_350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        y_5_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_5_V_we0 = grp_my_filter_v12_fu_327_g5_V_we0;
    end else begin
        y_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_6_V_address0 = zext_ln321_1_fu_412_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_6_V_address0 = grp_my_filter_v12_fu_327_g6_V_address0;
    end else begin
        y_6_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_6_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_6_V_ce0 = grp_my_filter_v12_fu_327_g6_V_ce0;
    end else begin
        y_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        y_6_V_ce1 = grp_my_filter_v12_fu_327_g6_V_ce1;
    end else begin
        y_6_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_6_V_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_6_V_d0 = grp_my_filter_v12_fu_327_g6_V_d0;
    end else begin
        y_6_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln41_fu_350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        y_6_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_6_V_we0 = grp_my_filter_v12_fu_327_g6_V_we0;
    end else begin
        y_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        y_6_V_we1 = grp_my_filter_v12_fu_327_g6_V_we1;
    end else begin
        y_6_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_7_V_address0 = zext_ln321_1_fu_412_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_7_V_address0 = grp_my_filter_v12_fu_327_g7_V_address0;
    end else begin
        y_7_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_7_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_7_V_ce0 = grp_my_filter_v12_fu_327_g7_V_ce0;
    end else begin
        y_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        y_7_V_ce1 = grp_my_filter_v12_fu_327_g7_V_ce1;
    end else begin
        y_7_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_7_V_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_7_V_d0 = grp_my_filter_v12_fu_327_g7_V_d0;
    end else begin
        y_7_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln41_fu_350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        y_7_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_7_V_we0 = grp_my_filter_v12_fu_327_g7_V_we0;
    end else begin
        y_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        y_7_V_we1 = grp_my_filter_v12_fu_327_g7_V_we1;
    end else begin
        y_7_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_array_copy3_fu_341_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_array_copy3_fu_341_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln41_fu_350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln78_fu_429_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_ProxGS4_fu_316_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln121_fu_441_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_array_copy3_fu_341_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Img_V_d0 = grp_array_copy3_fu_341_data_out_V_d0;

assign add_ln121_fu_447_p2 = (indvar_flatten11_reg_283 + 15'd1);

assign add_ln321_1_fu_497_p2 = (zext_ln321_2_fu_493_p1 + zext_ln124_fu_489_p1);

assign add_ln321_fu_406_p2 = (zext_ln321_fu_402_p1 + zext_ln44_fu_398_p1);

assign add_ln41_fu_356_p2 = (indvar_flatten_reg_239 + 15'd1);

assign adjChImg_V_address0 = grp_my_filter_v12_fu_327_adjChImg_V_address0;

assign adjChImg_V_address1 = grp_my_filter_v12_fu_327_adjChImg_V_address1;

assign adjChImg_V_ce0 = grp_my_filter_v12_fu_327_adjChImg_V_ce0;

assign adjChImg_V_ce1 = grp_my_filter_v12_fu_327_adjChImg_V_ce1;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state8_on_subcall_done = ((grp_array_copy3_fu_341_ap_done == 1'b0) | (grp_my_filter_v12_fu_327_ap_done == 1'b0));
end

assign coe_a_M_imag_address0 = grp_ProxGS4_fu_316_coe_a_M_imag_address0;

assign coe_a_M_imag_ce0 = grp_ProxGS4_fu_316_coe_a_M_imag_ce0;

assign coe_a_M_real_address0 = grp_ProxGS4_fu_316_coe_a_M_real_address0;

assign coe_a_M_real_ce0 = grp_ProxGS4_fu_316_coe_a_M_real_ce0;

assign coe_b_address0 = grp_ProxGS4_fu_316_coe_b_address0;

assign coe_b_ce0 = grp_ProxGS4_fu_316_coe_b_ce0;

assign grp_ProxGS4_fu_316_ap_start = grp_ProxGS4_fu_316_ap_start_reg;

assign grp_array_copy3_fu_341_ap_start = grp_array_copy3_fu_341_ap_start_reg;

assign grp_my_filter_v12_fu_327_ap_start = grp_my_filter_v12_fu_327_ap_start_reg;

assign i_fu_509_p2 = (select_ln126_fu_465_p3 + 8'd1);

assign icmp_ln121_fu_441_p2 = ((indvar_flatten11_reg_283 == 15'd16384) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_459_p2 = ((i_0_i_reg_305 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_350_p2 = ((indvar_flatten_reg_239 == 15'd16384) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_368_p2 = ((x_0_i_reg_261 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_429_p2 = ((k_0_reg_272 == 2'd3) ? 1'b1 : 1'b0);

assign j_fu_453_p2 = (j_0_i_reg_294 + 8'd1);

assign k_fu_435_p2 = (k_0_reg_272 + 2'd1);

assign select_ln126_1_fu_473_p3 = ((icmp_ln123_fu_459_p2[0:0] === 1'b1) ? j_fu_453_p2 : j_0_i_reg_294);

assign select_ln126_fu_465_p3 = ((icmp_ln123_fu_459_p2[0:0] === 1'b1) ? 8'd0 : i_0_i_reg_305);

assign select_ln46_1_fu_382_p3 = ((icmp_ln43_fu_368_p2[0:0] === 1'b1) ? y_fu_362_p2 : y_0_i_reg_250);

assign select_ln46_fu_374_p3 = ((icmp_ln43_fu_368_p2[0:0] === 1'b1) ? 8'd0 : x_0_i_reg_261);

assign sub_ln214_fu_515_p2 = (x_V_q0 - x_old_V_q0);

assign tmp_fu_390_p3 = {{select_ln46_1_fu_382_p3}, {7'd0}};

assign tmp_s_fu_481_p3 = {{select_ln126_1_fu_473_p3}, {7'd0}};

assign x_fu_423_p2 = (select_ln46_fu_374_p3 + 8'd1);

assign y_fu_362_p2 = (y_0_i_reg_250 + 8'd1);

assign zext_ln124_fu_489_p1 = tmp_s_fu_481_p3;

assign zext_ln321_1_fu_412_p1 = add_ln321_fu_406_p2;

assign zext_ln321_2_fu_493_p1 = select_ln126_fu_465_p3;

assign zext_ln321_3_fu_503_p1 = add_ln321_1_fu_497_p2;

assign zext_ln321_fu_402_p1 = select_ln46_fu_374_p3;

assign zext_ln44_fu_398_p1 = tmp_fu_390_p3;

always @ (posedge ap_clk) begin
    zext_ln321_3_reg_561[63:16] <= 48'b000000000000000000000000000000000000000000000000;
end

endmodule //cross_channel_deblur
