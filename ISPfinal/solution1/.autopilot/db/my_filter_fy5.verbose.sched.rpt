

================================================================
== Vivado HLS Report for 'my_filter_fy5'
================================================================
* Date:           Fri Jan  8 20:54:58 2021

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        ISPfinal
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.423 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+-------+---------+
    |  Latency (cycles) |  Latency (absolute) |    Interval   | Pipeline|
    |   min   |   max   |    min   |    max   |  min  |  max  |   Type  |
    +---------+---------+----------+----------+-------+-------+---------+
    |    16386|    16386| 0.164 ms | 0.164 ms |  16386|  16386|   none  |
    +---------+---------+----------+----------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+---------+---------+----------+-----------+-----------+-------+----------+
        |               |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |   Loop Name   |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +---------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- for_y_for_x  |    16384|    16384|         2|          1|          1|  16384|    yes   |
        +---------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 3 
3 --> 2 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 5 [1/1] (1.76ns)   --->   "br label %1" [divergent.cpp:22]   --->   Operation 5 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 8.36>
ST_2 : Operation 6 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i15 [ 0, %0 ], [ %add_ln22, %for_x ]" [divergent.cpp:22]   --->   Operation 6 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 7 [1/1] (0.00ns)   --->   "%y_0 = phi i8 [ 0, %0 ], [ %select_ln28_1, %for_x ]" [divergent.cpp:28]   --->   Operation 7 'phi' 'y_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 8 [1/1] (0.00ns)   --->   "%x_0 = phi i8 [ 0, %0 ], [ %x, %for_x ]"   --->   Operation 8 'phi' 'x_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 9 [1/1] (2.31ns)   --->   "%icmp_ln22 = icmp eq i15 %indvar_flatten, -16384" [divergent.cpp:22]   --->   Operation 9 'icmp' 'icmp_ln22' <Predicate = true> <Delay = 2.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 10 [1/1] (1.94ns)   --->   "%add_ln22 = add i15 %indvar_flatten, 1" [divergent.cpp:22]   --->   Operation 10 'add' 'add_ln22' <Predicate = true> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "br i1 %icmp_ln22, label %2, label %for_x" [divergent.cpp:22]   --->   Operation 11 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (1.55ns)   --->   "%icmp_ln24 = icmp eq i8 %x_0, -128" [divergent.cpp:24]   --->   Operation 12 'icmp' 'icmp_ln24' <Predicate = (!icmp_ln22)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 13 [1/1] (1.24ns)   --->   "%select_ln28 = select i1 %icmp_ln24, i8 0, i8 %x_0" [divergent.cpp:28]   --->   Operation 13 'select' 'select_ln28' <Predicate = (!icmp_ln22)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 14 [1/1] (1.91ns)   --->   "%add_ln28_1 = add i8 %y_0, 1" [divergent.cpp:28]   --->   Operation 14 'add' 'add_ln28_1' <Predicate = (!icmp_ln22)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 15 [1/1] (1.24ns)   --->   "%select_ln28_1 = select i1 %icmp_ln24, i8 %add_ln28_1, i8 %y_0" [divergent.cpp:28]   --->   Operation 15 'select' 'select_ln28_1' <Predicate = (!icmp_ln22)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%tmp = call i15 @_ssdm_op_BitConcatenate.i15.i8.i7(i8 %select_ln28_1, i7 0)" [divergent.cpp:28]   --->   Operation 16 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%zext_ln28 = zext i15 %tmp to i16" [divergent.cpp:28]   --->   Operation 17 'zext' 'zext_ln28' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.91ns)   --->   "%add_ln28 = add i8 %y_0, 2" [divergent.cpp:28]   --->   Operation 18 'add' 'add_ln28' <Predicate = (!icmp_ln22)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns) (grouped into LUT with out node add_ln215)   --->   "%select_ln28_2 = select i1 %icmp_ln24, i8 %add_ln28, i8 %add_ln28_1" [divergent.cpp:28]   --->   Operation 19 'select' 'select_ln28_2' <Predicate = (!icmp_ln22)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns) (grouped into LUT with out node add_ln215)   --->   "%tmp_80 = call i15 @_ssdm_op_BitConcatenate.i15.i8.i7(i8 %select_ln28_2, i7 0)" [divergent.cpp:25]   --->   Operation 20 'bitconcatenate' 'tmp_80' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns) (grouped into LUT with out node add_ln215)   --->   "%zext_ln25 = zext i15 %tmp_80 to i16" [divergent.cpp:25]   --->   Operation 21 'zext' 'zext_ln25' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln180 = zext i8 %select_ln28 to i16" [divergent.cpp:28]   --->   Operation 22 'zext' 'zext_ln180' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (1.94ns)   --->   "%add_ln180 = add i16 %zext_ln28, %zext_ln180" [divergent.cpp:28]   --->   Operation 23 'add' 'add_ln180' <Predicate = (!icmp_ln22)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln180_1 = zext i16 %add_ln180 to i64" [divergent.cpp:28]   --->   Operation 24 'zext' 'zext_ln180_1' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (1.94ns) (out node of the LUT)   --->   "%add_ln215 = add i16 %zext_ln25, %zext_ln180" [divergent.cpp:28]   --->   Operation 25 'add' 'add_ln215' <Predicate = (!icmp_ln22)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln215 = zext i16 %add_ln215 to i64" [divergent.cpp:28]   --->   Operation 26 'zext' 'zext_ln215' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%data_in_V_addr = getelementptr [16384 x i8]* %data_in_V, i64 0, i64 %zext_ln215" [divergent.cpp:28]   --->   Operation 27 'getelementptr' 'data_in_V_addr' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%data_in_V_addr_1 = getelementptr [16384 x i8]* %data_in_V, i64 0, i64 %zext_ln180_1" [divergent.cpp:28]   --->   Operation 28 'getelementptr' 'data_in_V_addr_1' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_2 : Operation 29 [2/2] (3.25ns)   --->   "%data_in_V_load = load i8* %data_in_V_addr, align 1" [divergent.cpp:28]   --->   Operation 29 'load' 'data_in_V_load' <Predicate = (!icmp_ln22)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_2 : Operation 30 [2/2] (3.25ns)   --->   "%data_in_V_load_1 = load i8* %data_in_V_addr_1, align 1" [divergent.cpp:28]   --->   Operation 30 'load' 'data_in_V_load_1' <Predicate = (!icmp_ln22)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_2 : Operation 31 [1/1] (1.91ns)   --->   "%x = add i8 %select_ln28, 1" [divergent.cpp:24]   --->   Operation 31 'add' 'x' <Predicate = (!icmp_ln22)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 8.42>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @for_y_for_x_str)"   --->   Operation 32 'specloopname' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16384, i64 16384, i64 16384)"   --->   Operation 33 'speclooptripcount' 'empty' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str134) nounwind" [divergent.cpp:25]   --->   Operation 34 'specloopname' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([6 x i8]* @p_str134)" [divergent.cpp:25]   --->   Operation 35 'specregionbegin' 'tmp_s' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str235) nounwind" [divergent.cpp:26]   --->   Operation 36 'specpipeline' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%data_out_V_addr = getelementptr [16384 x i8]* %data_out_V, i64 0, i64 %zext_ln180_1" [divergent.cpp:28]   --->   Operation 37 'getelementptr' 'data_out_V_addr' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_3 : Operation 38 [1/2] (3.25ns)   --->   "%data_in_V_load = load i8* %data_in_V_addr, align 1" [divergent.cpp:28]   --->   Operation 38 'load' 'data_in_V_load' <Predicate = (!icmp_ln22)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_3 : Operation 39 [1/2] (3.25ns)   --->   "%data_in_V_load_1 = load i8* %data_in_V_addr_1, align 1" [divergent.cpp:28]   --->   Operation 39 'load' 'data_in_V_load_1' <Predicate = (!icmp_ln22)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_3 : Operation 40 [1/1] (1.91ns)   --->   "%sub_ln68 = sub i8 %data_in_V_load, %data_in_V_load_1" [divergent.cpp:28]   --->   Operation 40 'sub' 'sub_ln68' <Predicate = (!icmp_ln22)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 41 [1/1] (3.25ns)   --->   "store i8 %sub_ln68, i8* %data_out_V_addr, align 1" [divergent.cpp:28]   --->   Operation 41 'store' <Predicate = (!icmp_ln22)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%empty_37 = call i32 (...)* @_ssdm_op_SpecRegionEnd([6 x i8]* @p_str134, i32 %tmp_s)" [divergent.cpp:30]   --->   Operation 42 'specregionend' 'empty_37' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 43 'br' <Predicate = (!icmp_ln22)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 0.00>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "ret void" [divergent.cpp:32]   --->   Operation 44 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten', divergent.cpp:22) with incoming values : ('add_ln22', divergent.cpp:22) [5]  (1.77 ns)

 <State 2>: 8.36ns
The critical path consists of the following:
	'phi' operation ('y_0', divergent.cpp:28) with incoming values : ('select_ln28_1', divergent.cpp:28) [6]  (0 ns)
	'add' operation ('add_ln28_1', divergent.cpp:28) [16]  (1.92 ns)
	'select' operation ('select_ln28_1', divergent.cpp:28) [17]  (1.25 ns)
	'add' operation ('add_ln180', divergent.cpp:28) [28]  (1.94 ns)
	'getelementptr' operation ('data_in_V_addr_1', divergent.cpp:28) [34]  (0 ns)
	'load' operation ('data_in_V_load_1', divergent.cpp:28) on array 'data_in_V' [36]  (3.25 ns)

 <State 3>: 8.42ns
The critical path consists of the following:
	'load' operation ('data_in_V_load', divergent.cpp:28) on array 'data_in_V' [35]  (3.25 ns)
	'sub' operation ('sub_ln68', divergent.cpp:28) [37]  (1.92 ns)
	'store' operation ('store_ln28', divergent.cpp:28) of variable 'sub_ln68', divergent.cpp:28 on array 'data_out_V' [38]  (3.25 ns)

 <State 4>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
