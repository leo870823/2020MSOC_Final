

================================================================
== Vivado HLS Report for 'my_filter_v1'
================================================================
* Date:           Wed Jan 13 22:02:41 2021

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        ISPfinal
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.423 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |   min  |   max  |   Type  |
    +---------+---------+----------+----------+--------+--------+---------+
    |   164130|   164130| 1.641 ms | 1.641 ms |  164130|  164130|   none  |
    +---------+---------+----------+----------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                     |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- Loop_y_1_Loop_x_1  |    16384|    16384|         2|          1|          1|  16384|    yes   |
        |- Loop_y_2           |    33024|    33024|       258|          -|          -|    128|    no    |
        | + Loop_x_2          |      256|      256|         2|          -|          -|    128|    no    |
        +---------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 18
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 7 8 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 9 8 
8 --> 7 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 18 16 
16 --> 17 15 
17 --> 16 
18 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%fx_V = alloca [16384 x i8], align 1" [divergent.cpp:65]   --->   Operation 19 'alloca' 'fx_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%fy_V = alloca [16384 x i8], align 1" [divergent.cpp:66]   --->   Operation 20 'alloca' 'fy_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%fxx = alloca [16384 x i8], align 1"   --->   Operation 21 'alloca' 'fxx' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%fyy = alloca [16384 x i8], align 1"   --->   Operation 22 'alloca' 'fyy' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%fxy = alloca [16384 x i8], align 1"   --->   Operation 23 'alloca' 'fxy' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%adj_fx = alloca [16384 x i8], align 1"   --->   Operation 24 'alloca' 'adj_fx' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%adj_fy = alloca [16384 x i8], align 1"   --->   Operation 25 'alloca' 'adj_fy' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%gx = alloca [16384 x i8], align 1"   --->   Operation 26 'alloca' 'gx' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%gy = alloca [16384 x i8], align 1"   --->   Operation 27 'alloca' 'gy' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%g3x_V = alloca [16384 x i8], align 1" [divergent.cpp:88]   --->   Operation 28 'alloca' 'g3x_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%gxx = alloca [16384 x i8], align 1"   --->   Operation 29 'alloca' 'gxx' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%g4y_V = alloca [16384 x i8], align 1" [divergent.cpp:90]   --->   Operation 30 'alloca' 'g4y_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%gyy = alloca [16384 x i8], align 1"   --->   Operation 31 'alloca' 'gyy' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%g5x_V = alloca [16384 x i8], align 1" [divergent.cpp:92]   --->   Operation 32 'alloca' 'g5x_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%gxy = alloca [16384 x i8], align 1"   --->   Operation 33 'alloca' 'gxy' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%temp_cross6_V = alloca [16384 x i8], align 1" [divergent.cpp:166]   --->   Operation 34 'alloca' 'temp_cross6_V' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%temp_cross7_V = alloca [16384 x i8], align 1" [divergent.cpp:167]   --->   Operation 35 'alloca' 'temp_cross7_V' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%cross_X = alloca [16384 x i8], align 1"   --->   Operation 36 'alloca' 'cross_X' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%cross_Y = alloca [16384 x i8], align 1"   --->   Operation 37 'alloca' 'cross_Y' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [2/2] (2.00ns)   --->   "call fastcc void @my_filter_fx6([16384 x i8]* %fx_V, [16384 x i8]* %f_V)" [divergent.cpp:100]   --->   Operation 38 'call' <Predicate = true> <Delay = 2.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 39 [1/2] (0.00ns)   --->   "call fastcc void @my_filter_fx6([16384 x i8]* %fx_V, [16384 x i8]* %f_V)" [divergent.cpp:100]   --->   Operation 39 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 2.02>
ST_3 : Operation 40 [2/2] (2.02ns)   --->   "call fastcc void @my_filter_fy5([16384 x i8]* %fy_V, [16384 x i8]* %f_V)" [divergent.cpp:101]   --->   Operation 40 'call' <Predicate = true> <Delay = 2.02> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 41 [2/2] (2.00ns)   --->   "call fastcc void @my_filter_fx6([16384 x i8]* %fxx, [16384 x i8]* %fx_V)" [divergent.cpp:102]   --->   Operation 41 'call' <Predicate = true> <Delay = 2.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 42 [2/2] (2.00ns)   --->   "call fastcc void @my_filter_fx6([16384 x i8]* %adj_fx, [16384 x i8]* %adjChImg_V)" [divergent.cpp:106]   --->   Operation 42 'call' <Predicate = true> <Delay = 2.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 43 [1/2] (0.00ns)   --->   "call fastcc void @my_filter_fy5([16384 x i8]* %fy_V, [16384 x i8]* %f_V)" [divergent.cpp:101]   --->   Operation 43 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 44 [1/2] (0.00ns)   --->   "call fastcc void @my_filter_fx6([16384 x i8]* %fxx, [16384 x i8]* %fx_V)" [divergent.cpp:102]   --->   Operation 44 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 45 [1/2] (0.00ns)   --->   "call fastcc void @my_filter_fx6([16384 x i8]* %adj_fx, [16384 x i8]* %adjChImg_V)" [divergent.cpp:106]   --->   Operation 45 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 2.02>
ST_5 : Operation 46 [2/2] (2.02ns)   --->   "call fastcc void @my_filter_fy5([16384 x i8]* %fyy, [16384 x i8]* %fy_V)" [divergent.cpp:103]   --->   Operation 46 'call' <Predicate = true> <Delay = 2.02> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 47 [2/2] (2.02ns)   --->   "call fastcc void @my_filter_fy5([16384 x i8]* %fxy, [16384 x i8]* %fx_V)" [divergent.cpp:104]   --->   Operation 47 'call' <Predicate = true> <Delay = 2.02> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 48 [2/2] (2.02ns)   --->   "call fastcc void @my_filter_fy5([16384 x i8]* %adj_fy, [16384 x i8]* %adjChImg_V)" [divergent.cpp:107]   --->   Operation 48 'call' <Predicate = true> <Delay = 2.02> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 1.76>
ST_6 : Operation 49 [1/2] (0.00ns)   --->   "call fastcc void @my_filter_fy5([16384 x i8]* %fyy, [16384 x i8]* %fy_V)" [divergent.cpp:103]   --->   Operation 49 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 50 [1/2] (0.00ns)   --->   "call fastcc void @my_filter_fy5([16384 x i8]* %fxy, [16384 x i8]* %fx_V)" [divergent.cpp:104]   --->   Operation 50 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 51 [1/2] (0.00ns)   --->   "call fastcc void @my_filter_fy5([16384 x i8]* %adj_fy, [16384 x i8]* %adjChImg_V)" [divergent.cpp:107]   --->   Operation 51 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 52 [1/1] (1.76ns)   --->   "br label %0" [divergent.cpp:126]   --->   Operation 52 'br' <Predicate = true> <Delay = 1.76>

State 7 <SV = 6> <Delay = 8.36>
ST_7 : Operation 53 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i15 [ 0, %arrayctor.loop4.preheader ], [ %add_ln126, %Loop_x_1_end ]" [divergent.cpp:126]   --->   Operation 53 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 54 [1/1] (0.00ns)   --->   "%y76_0 = phi i8 [ 0, %arrayctor.loop4.preheader ], [ %select_ln131_1, %Loop_x_1_end ]" [divergent.cpp:131]   --->   Operation 54 'phi' 'y76_0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 55 [1/1] (0.00ns)   --->   "%x77_0 = phi i8 [ 0, %arrayctor.loop4.preheader ], [ %x_1, %Loop_x_1_end ]"   --->   Operation 55 'phi' 'x77_0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 56 [1/1] (2.31ns)   --->   "%icmp_ln126 = icmp eq i15 %indvar_flatten, -16384" [divergent.cpp:126]   --->   Operation 56 'icmp' 'icmp_ln126' <Predicate = true> <Delay = 2.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 57 [1/1] (1.94ns)   --->   "%add_ln126 = add i15 %indvar_flatten, 1" [divergent.cpp:126]   --->   Operation 57 'add' 'add_ln126' <Predicate = true> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 58 [1/1] (0.00ns)   --->   "br i1 %icmp_ln126, label %arrayctor.loop82.preheader, label %Loop_x_1_begin" [divergent.cpp:126]   --->   Operation 58 'br' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 59 [1/1] (1.91ns)   --->   "%y = add i8 %y76_0, 1" [divergent.cpp:126]   --->   Operation 59 'add' 'y' <Predicate = (!icmp_ln126)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 60 [1/1] (1.55ns)   --->   "%icmp_ln128 = icmp eq i8 %x77_0, -128" [divergent.cpp:128]   --->   Operation 60 'icmp' 'icmp_ln128' <Predicate = (!icmp_ln126)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 61 [1/1] (1.24ns)   --->   "%select_ln131 = select i1 %icmp_ln128, i8 0, i8 %x77_0" [divergent.cpp:131]   --->   Operation 61 'select' 'select_ln131' <Predicate = (!icmp_ln126)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 62 [1/1] (1.24ns)   --->   "%select_ln131_1 = select i1 %icmp_ln128, i8 %y, i8 %y76_0" [divergent.cpp:131]   --->   Operation 62 'select' 'select_ln131_1' <Predicate = (!icmp_ln126)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 63 [1/1] (0.00ns)   --->   "%tmp = call i15 @_ssdm_op_BitConcatenate.i15.i8.i7(i8 %select_ln131_1, i7 0)" [divergent.cpp:131]   --->   Operation 63 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_7 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln129 = zext i15 %tmp to i16" [divergent.cpp:129]   --->   Operation 64 'zext' 'zext_ln129' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_7 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln215 = zext i8 %select_ln131 to i16" [divergent.cpp:131]   --->   Operation 65 'zext' 'zext_ln215' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_7 : Operation 66 [1/1] (1.94ns)   --->   "%add_ln215 = add i16 %zext_ln215, %zext_ln129" [divergent.cpp:131]   --->   Operation 66 'add' 'add_ln215' <Predicate = (!icmp_ln126)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln215_1 = zext i16 %add_ln215 to i64" [divergent.cpp:131]   --->   Operation 67 'zext' 'zext_ln215_1' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_7 : Operation 68 [1/1] (0.00ns)   --->   "%g1_V_addr = getelementptr [16384 x i8]* %g1_V, i64 0, i64 %zext_ln215_1" [divergent.cpp:131]   --->   Operation 68 'getelementptr' 'g1_V_addr' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_7 : Operation 69 [1/1] (0.00ns)   --->   "%g2_V_addr = getelementptr [16384 x i8]* %g2_V, i64 0, i64 %zext_ln215_1" [divergent.cpp:132]   --->   Operation 69 'getelementptr' 'g2_V_addr' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_7 : Operation 70 [1/1] (0.00ns)   --->   "%g3_V_addr = getelementptr [16384 x i8]* %g3_V, i64 0, i64 %zext_ln215_1" [divergent.cpp:133]   --->   Operation 70 'getelementptr' 'g3_V_addr' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_7 : Operation 71 [1/1] (0.00ns)   --->   "%g4_V_addr = getelementptr [16384 x i8]* %g4_V, i64 0, i64 %zext_ln215_1" [divergent.cpp:134]   --->   Operation 71 'getelementptr' 'g4_V_addr' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_7 : Operation 72 [1/1] (0.00ns)   --->   "%g5_V_addr = getelementptr [16384 x i8]* %g5_V, i64 0, i64 %zext_ln215_1" [divergent.cpp:135]   --->   Operation 72 'getelementptr' 'g5_V_addr' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_7 : Operation 73 [2/2] (3.25ns)   --->   "%g1_V_load = load i8* %g1_V_addr, align 1" [divergent.cpp:131]   --->   Operation 73 'load' 'g1_V_load' <Predicate = (!icmp_ln126)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_7 : Operation 74 [2/2] (3.25ns)   --->   "%g2_V_load = load i8* %g2_V_addr, align 1" [divergent.cpp:132]   --->   Operation 74 'load' 'g2_V_load' <Predicate = (!icmp_ln126)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_7 : Operation 75 [2/2] (3.25ns)   --->   "%g3_V_load = load i8* %g3_V_addr, align 1" [divergent.cpp:133]   --->   Operation 75 'load' 'g3_V_load' <Predicate = (!icmp_ln126)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_7 : Operation 76 [2/2] (3.25ns)   --->   "%g4_V_load = load i8* %g4_V_addr, align 1" [divergent.cpp:134]   --->   Operation 76 'load' 'g4_V_load' <Predicate = (!icmp_ln126)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_7 : Operation 77 [2/2] (3.25ns)   --->   "%g5_V_load = load i8* %g5_V_addr, align 1" [divergent.cpp:135]   --->   Operation 77 'load' 'g5_V_load' <Predicate = (!icmp_ln126)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_7 : Operation 78 [1/1] (1.91ns)   --->   "%x_1 = add i8 %select_ln131, 1" [divergent.cpp:128]   --->   Operation 78 'add' 'x_1' <Predicate = (!icmp_ln126)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 4.74>
ST_8 : Operation 79 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([18 x i8]* @Loop_y_1_Loop_x_1_st)"   --->   Operation 79 'specloopname' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_8 : Operation 80 [1/1] (0.00ns)   --->   "%empty_19 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16384, i64 16384, i64 16384)"   --->   Operation 80 'speclooptripcount' 'empty_19' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_8 : Operation 81 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str645) nounwind" [divergent.cpp:129]   --->   Operation 81 'specloopname' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_8 : Operation 82 [1/1] (0.00ns)   --->   "%tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str645)" [divergent.cpp:129]   --->   Operation 82 'specregionbegin' 'tmp_4' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_8 : Operation 83 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str241) nounwind" [divergent.cpp:130]   --->   Operation 83 'specpipeline' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_8 : Operation 84 [1/2] (3.25ns)   --->   "%g1_V_load = load i8* %g1_V_addr, align 1" [divergent.cpp:131]   --->   Operation 84 'load' 'g1_V_load' <Predicate = (!icmp_ln126)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_8 : Operation 85 [1/2] (3.25ns)   --->   "%g2_V_load = load i8* %g2_V_addr, align 1" [divergent.cpp:132]   --->   Operation 85 'load' 'g2_V_load' <Predicate = (!icmp_ln126)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_8 : Operation 86 [1/2] (3.25ns)   --->   "%g3_V_load = load i8* %g3_V_addr, align 1" [divergent.cpp:133]   --->   Operation 86 'load' 'g3_V_load' <Predicate = (!icmp_ln126)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_8 : Operation 87 [1/2] (3.25ns)   --->   "%g4_V_load = load i8* %g4_V_addr, align 1" [divergent.cpp:134]   --->   Operation 87 'load' 'g4_V_load' <Predicate = (!icmp_ln126)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_8 : Operation 88 [1/2] (3.25ns)   --->   "%g5_V_load = load i8* %g5_V_addr, align 1" [divergent.cpp:135]   --->   Operation 88 'load' 'g5_V_load' <Predicate = (!icmp_ln126)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_8 : Operation 89 [1/1] (0.00ns)   --->   "%tmp_2 = call i7 @_ssdm_op_PartSelect.i7.i8.i32.i32(i8 %g1_V_load, i32 1, i32 7)" [divergent.cpp:138]   --->   Operation 89 'partselect' 'tmp_2' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_8 : Operation 90 [1/1] (1.48ns)   --->   "%icmp_ln895 = icmp eq i7 %tmp_2, 0" [divergent.cpp:138]   --->   Operation 90 'icmp' 'icmp_ln895' <Predicate = (!icmp_ln126)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 91 [1/1] (0.00ns)   --->   "br i1 %icmp_ln895, label %._crit_edge, label %1" [divergent.cpp:138]   --->   Operation 91 'br' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_8 : Operation 92 [1/1] (3.25ns)   --->   "store i8 1, i8* %g1_V_addr, align 1" [divergent.cpp:139]   --->   Operation 92 'store' <Predicate = (!icmp_ln895)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_8 : Operation 93 [1/1] (0.00ns)   --->   "br label %._crit_edge" [divergent.cpp:139]   --->   Operation 93 'br' <Predicate = (!icmp_ln895)> <Delay = 0.00>
ST_8 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_5 = call i7 @_ssdm_op_PartSelect.i7.i8.i32.i32(i8 %g2_V_load, i32 1, i32 7)" [divergent.cpp:140]   --->   Operation 94 'partselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 95 [1/1] (1.48ns)   --->   "%icmp_ln895_1 = icmp eq i7 %tmp_5, 0" [divergent.cpp:140]   --->   Operation 95 'icmp' 'icmp_ln895_1' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 96 [1/1] (0.00ns)   --->   "br i1 %icmp_ln895_1, label %._crit_edge1537, label %2" [divergent.cpp:140]   --->   Operation 96 'br' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 97 [1/1] (3.25ns)   --->   "store i8 1, i8* %g2_V_addr, align 1" [divergent.cpp:141]   --->   Operation 97 'store' <Predicate = (!icmp_ln895_1)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_8 : Operation 98 [1/1] (0.00ns)   --->   "br label %._crit_edge1537" [divergent.cpp:141]   --->   Operation 98 'br' <Predicate = (!icmp_ln895_1)> <Delay = 0.00>
ST_8 : Operation 99 [1/1] (0.00ns)   --->   "%tmp_6 = call i7 @_ssdm_op_PartSelect.i7.i8.i32.i32(i8 %g3_V_load, i32 1, i32 7)" [divergent.cpp:142]   --->   Operation 99 'partselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 100 [1/1] (1.48ns)   --->   "%icmp_ln895_2 = icmp eq i7 %tmp_6, 0" [divergent.cpp:142]   --->   Operation 100 'icmp' 'icmp_ln895_2' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 101 [1/1] (0.00ns)   --->   "br i1 %icmp_ln895_2, label %._crit_edge1538, label %3" [divergent.cpp:142]   --->   Operation 101 'br' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 102 [1/1] (3.25ns)   --->   "store i8 1, i8* %g3_V_addr, align 1" [divergent.cpp:143]   --->   Operation 102 'store' <Predicate = (!icmp_ln895_2)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_8 : Operation 103 [1/1] (0.00ns)   --->   "br label %._crit_edge1538" [divergent.cpp:143]   --->   Operation 103 'br' <Predicate = (!icmp_ln895_2)> <Delay = 0.00>
ST_8 : Operation 104 [1/1] (0.00ns)   --->   "%tmp_7 = call i7 @_ssdm_op_PartSelect.i7.i8.i32.i32(i8 %g4_V_load, i32 1, i32 7)" [divergent.cpp:144]   --->   Operation 104 'partselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 105 [1/1] (1.48ns)   --->   "%icmp_ln895_3 = icmp eq i7 %tmp_7, 0" [divergent.cpp:144]   --->   Operation 105 'icmp' 'icmp_ln895_3' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 106 [1/1] (0.00ns)   --->   "br i1 %icmp_ln895_3, label %._crit_edge1539, label %4" [divergent.cpp:144]   --->   Operation 106 'br' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 107 [1/1] (3.25ns)   --->   "store i8 1, i8* %g4_V_addr, align 1" [divergent.cpp:145]   --->   Operation 107 'store' <Predicate = (!icmp_ln895_3)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_8 : Operation 108 [1/1] (0.00ns)   --->   "br label %._crit_edge1539" [divergent.cpp:145]   --->   Operation 108 'br' <Predicate = (!icmp_ln895_3)> <Delay = 0.00>
ST_8 : Operation 109 [1/1] (0.00ns)   --->   "%tmp_8 = call i7 @_ssdm_op_PartSelect.i7.i8.i32.i32(i8 %g5_V_load, i32 1, i32 7)" [divergent.cpp:146]   --->   Operation 109 'partselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 110 [1/1] (1.48ns)   --->   "%icmp_ln895_4 = icmp eq i7 %tmp_8, 0" [divergent.cpp:146]   --->   Operation 110 'icmp' 'icmp_ln895_4' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 111 [1/1] (0.00ns)   --->   "br i1 %icmp_ln895_4, label %Loop_x_1_end, label %5" [divergent.cpp:146]   --->   Operation 111 'br' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 112 [1/1] (3.25ns)   --->   "store i8 1, i8* %g5_V_addr, align 1" [divergent.cpp:147]   --->   Operation 112 'store' <Predicate = (!icmp_ln895_4)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_8 : Operation 113 [1/1] (0.00ns)   --->   "br label %Loop_x_1_end" [divergent.cpp:147]   --->   Operation 113 'br' <Predicate = (!icmp_ln895_4)> <Delay = 0.00>
ST_8 : Operation 114 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str645, i32 %tmp_4)" [divergent.cpp:152]   --->   Operation 114 'specregionend' 'empty' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_8 : Operation 115 [1/1] (0.00ns)   --->   "br label %0"   --->   Operation 115 'br' <Predicate = (!icmp_ln126)> <Delay = 0.00>

State 9 <SV = 7> <Delay = 2.00>
ST_9 : Operation 116 [2/2] (2.00ns)   --->   "call fastcc void @my_filter_fx6([16384 x i8]* %g5x_V, [16384 x i8]* %g5_V)" [divergent.cpp:162]   --->   Operation 116 'call' <Predicate = true> <Delay = 2.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 8> <Delay = 0.00>
ST_10 : Operation 117 [1/2] (0.00ns)   --->   "call fastcc void @my_filter_fx6([16384 x i8]* %g5x_V, [16384 x i8]* %g5_V)" [divergent.cpp:162]   --->   Operation 117 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 9> <Delay = 2.02>
ST_11 : Operation 118 [2/2] (2.00ns)   --->   "call fastcc void @my_filter_fx6([16384 x i8]* %gx, [16384 x i8]* %g1_V)" [divergent.cpp:156]   --->   Operation 118 'call' <Predicate = true> <Delay = 2.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 119 [2/2] (2.02ns)   --->   "call fastcc void @my_filter_fy5([16384 x i8]* %gy, [16384 x i8]* %g2_V)" [divergent.cpp:157]   --->   Operation 119 'call' <Predicate = true> <Delay = 2.02> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 120 [2/2] (2.00ns)   --->   "call fastcc void @my_filter_fx6([16384 x i8]* %g3x_V, [16384 x i8]* %g3_V)" [divergent.cpp:158]   --->   Operation 120 'call' <Predicate = true> <Delay = 2.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 121 [2/2] (2.02ns)   --->   "call fastcc void @my_filter_fy5([16384 x i8]* %g4y_V, [16384 x i8]* %g4_V)" [divergent.cpp:160]   --->   Operation 121 'call' <Predicate = true> <Delay = 2.02> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 122 [2/2] (2.02ns)   --->   "call fastcc void @my_filter_fy5([16384 x i8]* %gxy, [16384 x i8]* %g5x_V)" [divergent.cpp:163]   --->   Operation 122 'call' <Predicate = true> <Delay = 2.02> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 10> <Delay = 0.00>
ST_12 : Operation 123 [1/2] (0.00ns)   --->   "call fastcc void @my_filter_fx6([16384 x i8]* %gx, [16384 x i8]* %g1_V)" [divergent.cpp:156]   --->   Operation 123 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 124 [1/2] (0.00ns)   --->   "call fastcc void @my_filter_fy5([16384 x i8]* %gy, [16384 x i8]* %g2_V)" [divergent.cpp:157]   --->   Operation 124 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 125 [1/2] (0.00ns)   --->   "call fastcc void @my_filter_fx6([16384 x i8]* %g3x_V, [16384 x i8]* %g3_V)" [divergent.cpp:158]   --->   Operation 125 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 126 [1/2] (0.00ns)   --->   "call fastcc void @my_filter_fy5([16384 x i8]* %g4y_V, [16384 x i8]* %g4_V)" [divergent.cpp:160]   --->   Operation 126 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 127 [1/2] (0.00ns)   --->   "call fastcc void @my_filter_fy5([16384 x i8]* %gxy, [16384 x i8]* %g5x_V)" [divergent.cpp:163]   --->   Operation 127 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 11> <Delay = 2.02>
ST_13 : Operation 128 [2/2] (2.00ns)   --->   "call fastcc void @my_filter_fx6([16384 x i8]* %gxx, [16384 x i8]* %g3x_V)" [divergent.cpp:159]   --->   Operation 128 'call' <Predicate = true> <Delay = 2.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 129 [2/2] (2.02ns)   --->   "call fastcc void @my_filter_fy5([16384 x i8]* %gyy, [16384 x i8]* %g4y_V)" [divergent.cpp:161]   --->   Operation 129 'call' <Predicate = true> <Delay = 2.02> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 12> <Delay = 1.76>
ST_14 : Operation 130 [1/2] (0.00ns)   --->   "call fastcc void @my_filter_fx6([16384 x i8]* %gxx, [16384 x i8]* %g3x_V)" [divergent.cpp:159]   --->   Operation 130 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 131 [1/2] (0.00ns)   --->   "call fastcc void @my_filter_fy5([16384 x i8]* %gyy, [16384 x i8]* %g4y_V)" [divergent.cpp:161]   --->   Operation 131 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 132 [1/1] (1.76ns)   --->   "br label %.preheader1535" [divergent.cpp:170]   --->   Operation 132 'br' <Predicate = true> <Delay = 1.76>

State 15 <SV = 13> <Delay = 2.54>
ST_15 : Operation 133 [1/1] (0.00ns)   --->   "%y95_0 = phi i8 [ %y_1, %Loop_y_2_end ], [ 0, %arrayctor.loop82.preheader ]"   --->   Operation 133 'phi' 'y95_0' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 134 [1/1] (1.55ns)   --->   "%icmp_ln170 = icmp eq i8 %y95_0, -128" [divergent.cpp:170]   --->   Operation 134 'icmp' 'icmp_ln170' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 135 [1/1] (0.00ns)   --->   "%empty_20 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)"   --->   Operation 135 'speclooptripcount' 'empty_20' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 136 [1/1] (1.91ns)   --->   "%y_1 = add i8 %y95_0, 1" [divergent.cpp:170]   --->   Operation 136 'add' 'y_1' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 137 [1/1] (0.00ns)   --->   "br i1 %icmp_ln170, label %_ifconv, label %Loop_y_2_begin" [divergent.cpp:170]   --->   Operation 137 'br' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 138 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str746) nounwind" [divergent.cpp:171]   --->   Operation 138 'specloopname' <Predicate = (!icmp_ln170)> <Delay = 0.00>
ST_15 : Operation 139 [1/1] (0.00ns)   --->   "%tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str746)" [divergent.cpp:171]   --->   Operation 139 'specregionbegin' 'tmp_3' <Predicate = (!icmp_ln170)> <Delay = 0.00>
ST_15 : Operation 140 [1/1] (0.00ns)   --->   "%tmp_1 = call i15 @_ssdm_op_BitConcatenate.i15.i8.i7(i8 %y95_0, i7 0)" [divergent.cpp:175]   --->   Operation 140 'bitconcatenate' 'tmp_1' <Predicate = (!icmp_ln170)> <Delay = 0.00>
ST_15 : Operation 141 [1/1] (0.00ns)   --->   "%zext_ln172 = zext i15 %tmp_1 to i16" [divergent.cpp:172]   --->   Operation 141 'zext' 'zext_ln172' <Predicate = (!icmp_ln170)> <Delay = 0.00>
ST_15 : Operation 142 [1/1] (1.76ns)   --->   "br label %6" [divergent.cpp:172]   --->   Operation 142 'br' <Predicate = (!icmp_ln170)> <Delay = 1.76>
ST_15 : Operation 143 [2/2] (2.00ns)   --->   "call fastcc void @my_filter_fx6([16384 x i8]* %cross_X, [16384 x i8]* %temp_cross6_V)" [divergent.cpp:181]   --->   Operation 143 'call' <Predicate = (icmp_ln170)> <Delay = 2.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_15 : Operation 144 [2/2] (2.02ns)   --->   "call fastcc void @my_filter_fy5([16384 x i8]* %cross_Y, [16384 x i8]* %temp_cross7_V)" [divergent.cpp:182]   --->   Operation 144 'call' <Predicate = (icmp_ln170)> <Delay = 2.02> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 16 <SV = 14> <Delay = 5.19>
ST_16 : Operation 145 [1/1] (0.00ns)   --->   "%x96_0 = phi i8 [ 0, %Loop_y_2_begin ], [ %x, %7 ]"   --->   Operation 145 'phi' 'x96_0' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 146 [1/1] (1.55ns)   --->   "%icmp_ln172 = icmp eq i8 %x96_0, -128" [divergent.cpp:172]   --->   Operation 146 'icmp' 'icmp_ln172' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 147 [1/1] (0.00ns)   --->   "%empty_21 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)"   --->   Operation 147 'speclooptripcount' 'empty_21' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 148 [1/1] (1.91ns)   --->   "%x = add i8 %x96_0, 1" [divergent.cpp:172]   --->   Operation 148 'add' 'x' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 149 [1/1] (0.00ns)   --->   "br i1 %icmp_ln172, label %Loop_y_2_end, label %7" [divergent.cpp:172]   --->   Operation 149 'br' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 150 [1/1] (0.00ns)   --->   "%zext_ln215_2 = zext i8 %x96_0 to i16" [divergent.cpp:175]   --->   Operation 150 'zext' 'zext_ln215_2' <Predicate = (!icmp_ln172)> <Delay = 0.00>
ST_16 : Operation 151 [1/1] (1.94ns)   --->   "%add_ln215_1 = add i16 %zext_ln172, %zext_ln215_2" [divergent.cpp:175]   --->   Operation 151 'add' 'add_ln215_1' <Predicate = (!icmp_ln172)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 152 [1/1] (0.00ns)   --->   "%zext_ln215_3 = zext i16 %add_ln215_1 to i64" [divergent.cpp:175]   --->   Operation 152 'zext' 'zext_ln215_3' <Predicate = (!icmp_ln172)> <Delay = 0.00>
ST_16 : Operation 153 [1/1] (0.00ns)   --->   "%adjChImg_V_addr = getelementptr [16384 x i8]* %adjChImg_V, i64 0, i64 %zext_ln215_3" [divergent.cpp:175]   --->   Operation 153 'getelementptr' 'adjChImg_V_addr' <Predicate = (!icmp_ln172)> <Delay = 0.00>
ST_16 : Operation 154 [1/1] (0.00ns)   --->   "%g6_V_addr = getelementptr [16384 x i1]* %g6_V, i64 0, i64 %zext_ln215_3" [divergent.cpp:175]   --->   Operation 154 'getelementptr' 'g6_V_addr' <Predicate = (!icmp_ln172)> <Delay = 0.00>
ST_16 : Operation 155 [1/1] (0.00ns)   --->   "%g7_V_addr = getelementptr [16384 x i1]* %g7_V, i64 0, i64 %zext_ln215_3" [divergent.cpp:176]   --->   Operation 155 'getelementptr' 'g7_V_addr' <Predicate = (!icmp_ln172)> <Delay = 0.00>
ST_16 : Operation 156 [2/2] (3.25ns)   --->   "%adjChImg_V_load = load i8* %adjChImg_V_addr, align 1" [divergent.cpp:175]   --->   Operation 156 'load' 'adjChImg_V_load' <Predicate = (!icmp_ln172)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_16 : Operation 157 [2/2] (3.25ns)   --->   "%g6_V_load = load i1* %g6_V_addr, align 1" [divergent.cpp:175]   --->   Operation 157 'load' 'g6_V_load' <Predicate = (!icmp_ln172)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_16 : Operation 158 [2/2] (3.25ns)   --->   "%g7_V_load = load i1* %g7_V_addr, align 1" [divergent.cpp:176]   --->   Operation 158 'load' 'g7_V_load' <Predicate = (!icmp_ln172)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_16 : Operation 159 [1/1] (0.00ns)   --->   "%empty_22 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str746, i32 %tmp_3)" [divergent.cpp:178]   --->   Operation 159 'specregionend' 'empty_22' <Predicate = (icmp_ln172)> <Delay = 0.00>
ST_16 : Operation 160 [1/1] (0.00ns)   --->   "br label %.preheader1535" [divergent.cpp:170]   --->   Operation 160 'br' <Predicate = (icmp_ln172)> <Delay = 0.00>

State 17 <SV = 15> <Delay = 7.50>
ST_17 : Operation 161 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str847) nounwind" [divergent.cpp:173]   --->   Operation 161 'specloopname' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 162 [1/1] (0.00ns)   --->   "%temp_cross6_V_addr = getelementptr [16384 x i8]* %temp_cross6_V, i64 0, i64 %zext_ln215_3" [divergent.cpp:175]   --->   Operation 162 'getelementptr' 'temp_cross6_V_addr' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 163 [1/1] (0.00ns)   --->   "%temp_cross7_V_addr = getelementptr [16384 x i8]* %temp_cross7_V, i64 0, i64 %zext_ln215_3" [divergent.cpp:176]   --->   Operation 163 'getelementptr' 'temp_cross7_V_addr' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 164 [1/2] (3.25ns)   --->   "%adjChImg_V_load = load i8* %adjChImg_V_addr, align 1" [divergent.cpp:175]   --->   Operation 164 'load' 'adjChImg_V_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_17 : Operation 165 [1/2] (3.25ns)   --->   "%g6_V_load = load i1* %g6_V_addr, align 1" [divergent.cpp:175]   --->   Operation 165 'load' 'g6_V_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_17 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node and_ln209)   --->   "%select_ln209 = select i1 %g6_V_load, i8 -1, i8 0" [divergent.cpp:175]   --->   Operation 166 'select' 'select_ln209' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_17 : Operation 167 [1/1] (0.99ns) (out node of the LUT)   --->   "%and_ln209 = and i8 %adjChImg_V_load, %select_ln209" [divergent.cpp:175]   --->   Operation 167 'and' 'and_ln209' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 168 [1/1] (3.25ns)   --->   "store i8 %and_ln209, i8* %temp_cross6_V_addr, align 1" [divergent.cpp:175]   --->   Operation 168 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_17 : Operation 169 [1/2] (3.25ns)   --->   "%g7_V_load = load i1* %g7_V_addr, align 1" [divergent.cpp:176]   --->   Operation 169 'load' 'g7_V_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_17 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node and_ln209_1)   --->   "%select_ln209_1 = select i1 %g7_V_load, i8 -1, i8 0" [divergent.cpp:176]   --->   Operation 170 'select' 'select_ln209_1' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_17 : Operation 171 [1/1] (0.99ns) (out node of the LUT)   --->   "%and_ln209_1 = and i8 %adjChImg_V_load, %select_ln209_1" [divergent.cpp:176]   --->   Operation 171 'and' 'and_ln209_1' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 172 [1/1] (3.25ns)   --->   "store i8 %and_ln209_1, i8* %temp_cross7_V_addr, align 1" [divergent.cpp:176]   --->   Operation 172 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16384> <RAM>
ST_17 : Operation 173 [1/1] (0.00ns)   --->   "br label %6" [divergent.cpp:172]   --->   Operation 173 'br' <Predicate = true> <Delay = 0.00>

State 18 <SV = 14> <Delay = 0.00>
ST_18 : Operation 174 [1/2] (0.00ns)   --->   "call fastcc void @my_filter_fx6([16384 x i8]* %cross_X, [16384 x i8]* %temp_cross6_V)" [divergent.cpp:181]   --->   Operation 174 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_18 : Operation 175 [1/2] (0.00ns)   --->   "call fastcc void @my_filter_fy5([16384 x i8]* %cross_Y, [16384 x i8]* %temp_cross7_V)" [divergent.cpp:182]   --->   Operation 175 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_18 : Operation 176 [1/1] (0.00ns)   --->   "ret void" [divergent.cpp:206]   --->   Operation 176 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 2ns
The critical path consists of the following:
	'alloca' operation ('fx.V', divergent.cpp:65) [10]  (0 ns)
	'call' operation ('call_ln100', divergent.cpp:100) to 'my_filter_fx6' [29]  (2 ns)

 <State 2>: 0ns
The critical path consists of the following:

 <State 3>: 2.03ns
The critical path consists of the following:
	'call' operation ('call_ln101', divergent.cpp:101) to 'my_filter_fy5' [30]  (2.03 ns)

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 2.03ns
The critical path consists of the following:
	'call' operation ('call_ln103', divergent.cpp:103) to 'my_filter_fy5' [32]  (2.03 ns)

 <State 6>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten', divergent.cpp:126) with incoming values : ('add_ln126', divergent.cpp:126) [38]  (1.77 ns)

 <State 7>: 8.36ns
The critical path consists of the following:
	'phi' operation ('y76_0', divergent.cpp:131) with incoming values : ('select_ln131_1', divergent.cpp:131) [39]  (0 ns)
	'add' operation ('y', divergent.cpp:126) [45]  (1.92 ns)
	'select' operation ('select_ln131_1', divergent.cpp:131) [50]  (1.25 ns)
	'add' operation ('add_ln215', divergent.cpp:131) [57]  (1.94 ns)
	'getelementptr' operation ('g1_V_addr', divergent.cpp:131) [59]  (0 ns)
	'load' operation ('g1_V_load', divergent.cpp:131) on array 'g1_V' [64]  (3.25 ns)

 <State 8>: 4.74ns
The critical path consists of the following:
	'load' operation ('g1_V_load', divergent.cpp:131) on array 'g1_V' [64]  (3.25 ns)
	'icmp' operation ('icmp_ln895', divergent.cpp:138) [70]  (1.49 ns)

 <State 9>: 2ns
The critical path consists of the following:
	'call' operation ('call_ln162', divergent.cpp:162) to 'my_filter_fx6' [114]  (2 ns)

 <State 10>: 0ns
The critical path consists of the following:

 <State 11>: 2.03ns
The critical path consists of the following:
	'call' operation ('call_ln157', divergent.cpp:157) to 'my_filter_fy5' [109]  (2.03 ns)

 <State 12>: 0ns
The critical path consists of the following:

 <State 13>: 2.03ns
The critical path consists of the following:
	'call' operation ('call_ln161', divergent.cpp:161) to 'my_filter_fy5' [113]  (2.03 ns)

 <State 14>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('y') with incoming values : ('y', divergent.cpp:170) [118]  (1.77 ns)

 <State 15>: 2.54ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln170', divergent.cpp:170) [119]  (1.55 ns)
	blocking operation 0.99 ns on control path)

 <State 16>: 5.2ns
The critical path consists of the following:
	'phi' operation ('x') with incoming values : ('x', divergent.cpp:172) [130]  (0 ns)
	'add' operation ('add_ln215_1', divergent.cpp:175) [138]  (1.94 ns)
	'getelementptr' operation ('adjChImg_V_addr', divergent.cpp:175) [140]  (0 ns)
	'load' operation ('adjChImg_V_load', divergent.cpp:175) on array 'adjChImg_V' [145]  (3.25 ns)

 <State 17>: 7.5ns
The critical path consists of the following:
	'load' operation ('adjChImg_V_load', divergent.cpp:175) on array 'adjChImg_V' [145]  (3.25 ns)
	'and' operation ('and_ln209', divergent.cpp:175) [148]  (0.993 ns)
	'store' operation ('store_ln175', divergent.cpp:175) of variable 'and_ln209', divergent.cpp:175 on array 'temp_cross6.V', divergent.cpp:166 [149]  (3.25 ns)

 <State 18>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
