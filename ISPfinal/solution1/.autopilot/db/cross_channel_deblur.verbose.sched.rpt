

================================================================
== Vivado HLS Report for 'cross_channel_deblur'
================================================================
* Date:           Tue Jan 19 21:42:20 2021

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        ISPfinal
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 9.406 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +----------+----------+-----------+-----------+----------+----------+---------+
    |   Latency (cycles)  |   Latency (absolute)  |       Interval      | Pipeline|
    |    min   |    max   |    min    |    max    |    min   |    max   |   Type  |
    +----------+----------+-----------+-----------+----------+----------+---------+
    |  17976489|  25349289| 0.180 sec | 0.253 sec |  17976489|  25349289|   none  |
    +----------+----------+-----------+-----------+----------+----------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+----------+----------+-------------------+-----------+-----------+-------+----------+
        |                 |   Latency (cycles)  |     Iteration     |  Initiation Interval  |  Trip |          |
        |    Loop Name    |    min   |    max   |      Latency      |  achieved |   target  | Count | Pipelined|
        +-----------------+----------+----------+-------------------+-----------+-----------+-------+----------+
        |- for_y_for_x    |     16384|     16384|                  1|          1|          1|  16384|    yes   |
        |- for_iteration  |  17910940|  25283740| 1791094 ~ 2528374 |          -|          -|     10|    no    |
        | + for_y_for_x   |    131072|    131072|                  8|          -|          -|  16384|    no    |
        +-----------------+----------+----------+-------------------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 21
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 5 
6 --> 7 
7 --> 8 21 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 7 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 13 
21 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.86>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%x_bar = alloca [16384 x float], align 4" [deblur.cpp:98]   --->   Operation 22 'alloca' 'x_bar' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%x_old = alloca [16384 x float], align 4"   --->   Operation 23 'alloca' 'x_old' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%x_2 = alloca [16384 x float], align 4" [deblur.cpp:98]   --->   Operation 24 'alloca' 'x_2' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%y_1 = alloca [16384 x float], align 4" [deblur.cpp:99]   --->   Operation 25 'alloca' 'y_1' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%y_2 = alloca [16384 x float], align 4" [deblur.cpp:99]   --->   Operation 26 'alloca' 'y_2' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%y_3 = alloca [16384 x float], align 4" [deblur.cpp:99]   --->   Operation 27 'alloca' 'y_3' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%y_4 = alloca [16384 x float], align 4" [deblur.cpp:99]   --->   Operation 28 'alloca' 'y_4' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%y_5 = alloca [16384 x float], align 4" [deblur.cpp:99]   --->   Operation 29 'alloca' 'y_5' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%y_6 = alloca [16384 x float], align 4" [deblur.cpp:99]   --->   Operation 30 'alloca' 'y_6' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%y_7 = alloca [16384 x float], align 4" [deblur.cpp:99]   --->   Operation 31 'alloca' 'y_7' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%y_8 = alloca [16384 x float], align 4" [deblur.cpp:99]   --->   Operation 32 'alloca' 'y_8' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%y_9 = alloca [16384 x float], align 4" [deblur.cpp:99]   --->   Operation 33 'alloca' 'y_9' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_1 : Operation 34 [2/2] (1.86ns)   --->   "call fastcc void @array_copy3([16384 x float]* %Img, [16384 x float]* %x_bar)" [deblur.cpp:101]   --->   Operation 34 'call' <Predicate = true> <Delay = 1.86> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 35 [1/2] (0.00ns)   --->   "call fastcc void @array_copy3([16384 x float]* %Img, [16384 x float]* %x_bar)" [deblur.cpp:101]   --->   Operation 35 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 1.86>
ST_3 : Operation 36 [2/2] (1.86ns)   --->   "call fastcc void @array_copy3([16384 x float]* %Img, [16384 x float]* %x_2)" [deblur.cpp:102]   --->   Operation 36 'call' <Predicate = true> <Delay = 1.86> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 1.76>
ST_4 : Operation 37 [1/2] (0.00ns)   --->   "call fastcc void @array_copy3([16384 x float]* %Img, [16384 x float]* %x_2)" [deblur.cpp:102]   --->   Operation 37 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 38 [1/1] (1.76ns)   --->   "br label %1" [deblur.cpp:63->deblur.cpp:103]   --->   Operation 38 'br' <Predicate = true> <Delay = 1.76>

State 5 <SV = 4> <Delay = 8.36>
ST_5 : Operation 39 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i15 [ 0, %0 ], [ %add_ln63, %for_x ]" [deblur.cpp:63->deblur.cpp:103]   --->   Operation 39 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 40 [1/1] (0.00ns)   --->   "%y_0_i = phi i8 [ 0, %0 ], [ %select_ln68_1, %for_x ]" [deblur.cpp:68->deblur.cpp:103]   --->   Operation 40 'phi' 'y_0_i' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 41 [1/1] (0.00ns)   --->   "%x_0_i = phi i8 [ 0, %0 ], [ %x, %for_x ]"   --->   Operation 41 'phi' 'x_0_i' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 42 [1/1] (2.31ns)   --->   "%icmp_ln63 = icmp eq i15 %indvar_flatten, -16384" [deblur.cpp:63->deblur.cpp:103]   --->   Operation 42 'icmp' 'icmp_ln63' <Predicate = true> <Delay = 2.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 43 [1/1] (1.94ns)   --->   "%add_ln63 = add i15 %indvar_flatten, 1" [deblur.cpp:63->deblur.cpp:103]   --->   Operation 43 'add' 'add_ln63' <Predicate = true> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 44 [1/1] (0.00ns)   --->   "br i1 %icmp_ln63, label %array_initialize.exit.preheader, label %for_x" [deblur.cpp:63->deblur.cpp:103]   --->   Operation 44 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 45 [1/1] (1.91ns)   --->   "%y = add i8 %y_0_i, 1" [deblur.cpp:63->deblur.cpp:103]   --->   Operation 45 'add' 'y' <Predicate = (!icmp_ln63)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 46 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @for_y_for_x_str)"   --->   Operation 46 'specloopname' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 47 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16384, i64 16384, i64 16384)"   --->   Operation 47 'speclooptripcount' 'empty' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 48 [1/1] (1.55ns)   --->   "%icmp_ln65 = icmp eq i8 %x_0_i, -128" [deblur.cpp:65->deblur.cpp:103]   --->   Operation 48 'icmp' 'icmp_ln65' <Predicate = (!icmp_ln63)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 49 [1/1] (1.24ns)   --->   "%select_ln68 = select i1 %icmp_ln65, i8 0, i8 %x_0_i" [deblur.cpp:68->deblur.cpp:103]   --->   Operation 49 'select' 'select_ln68' <Predicate = (!icmp_ln63)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 50 [1/1] (1.24ns)   --->   "%select_ln68_1 = select i1 %icmp_ln65, i8 %y, i8 %y_0_i" [deblur.cpp:68->deblur.cpp:103]   --->   Operation 50 'select' 'select_ln68_1' <Predicate = (!icmp_ln63)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 51 [1/1] (0.00ns)   --->   "%tmp = call i15 @_ssdm_op_BitConcatenate.i15.i8.i7(i8 %select_ln68_1, i7 0)" [deblur.cpp:68->deblur.cpp:103]   --->   Operation 51 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln66 = zext i15 %tmp to i16" [deblur.cpp:66->deblur.cpp:103]   --->   Operation 52 'zext' 'zext_ln66' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 53 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str148) nounwind" [deblur.cpp:66->deblur.cpp:103]   --->   Operation 53 'specloopname' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_41_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([6 x i8]* @p_str148)" [deblur.cpp:66->deblur.cpp:103]   --->   Operation 54 'specregionbegin' 'tmp_41_i' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str249) nounwind" [deblur.cpp:67->deblur.cpp:103]   --->   Operation 55 'specpipeline' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%zext_ln68 = zext i8 %select_ln68 to i16" [deblur.cpp:68->deblur.cpp:103]   --->   Operation 56 'zext' 'zext_ln68' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (1.94ns)   --->   "%add_ln68 = add i16 %zext_ln68, %zext_ln66" [deblur.cpp:68->deblur.cpp:103]   --->   Operation 57 'add' 'add_ln68' <Predicate = (!icmp_ln63)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln68_1 = zext i16 %add_ln68 to i64" [deblur.cpp:68->deblur.cpp:103]   --->   Operation 58 'zext' 'zext_ln68_1' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%y_1_addr = getelementptr [16384 x float]* %y_1, i64 0, i64 %zext_ln68_1" [deblur.cpp:68->deblur.cpp:103]   --->   Operation 59 'getelementptr' 'y_1_addr' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%y_2_addr = getelementptr [16384 x float]* %y_2, i64 0, i64 %zext_ln68_1" [deblur.cpp:70->deblur.cpp:103]   --->   Operation 60 'getelementptr' 'y_2_addr' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%y_3_addr = getelementptr [16384 x float]* %y_3, i64 0, i64 %zext_ln68_1" [deblur.cpp:72->deblur.cpp:103]   --->   Operation 61 'getelementptr' 'y_3_addr' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%y_4_addr = getelementptr [16384 x float]* %y_4, i64 0, i64 %zext_ln68_1" [deblur.cpp:74->deblur.cpp:103]   --->   Operation 62 'getelementptr' 'y_4_addr' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%y_5_addr = getelementptr [16384 x float]* %y_5, i64 0, i64 %zext_ln68_1" [deblur.cpp:76->deblur.cpp:103]   --->   Operation 63 'getelementptr' 'y_5_addr' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%y_6_addr = getelementptr [16384 x float]* %y_6, i64 0, i64 %zext_ln68_1" [deblur.cpp:78->deblur.cpp:103]   --->   Operation 64 'getelementptr' 'y_6_addr' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%y_7_addr = getelementptr [16384 x float]* %y_7, i64 0, i64 %zext_ln68_1" [deblur.cpp:80->deblur.cpp:103]   --->   Operation 65 'getelementptr' 'y_7_addr' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 66 [1/1] (0.00ns)   --->   "%y_8_addr = getelementptr [16384 x float]* %y_8, i64 0, i64 %zext_ln68_1" [deblur.cpp:82->deblur.cpp:103]   --->   Operation 66 'getelementptr' 'y_8_addr' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 67 [1/1] (0.00ns)   --->   "%y_9_addr = getelementptr [16384 x float]* %y_9, i64 0, i64 %zext_ln68_1" [deblur.cpp:84->deblur.cpp:103]   --->   Operation 67 'getelementptr' 'y_9_addr' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 68 [1/1] (3.25ns)   --->   "store float 0.000000e+00, float* %y_1_addr, align 4" [deblur.cpp:68->deblur.cpp:103]   --->   Operation 68 'store' <Predicate = (!icmp_ln63)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_5 : Operation 69 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str249) nounwind" [deblur.cpp:69->deblur.cpp:103]   --->   Operation 69 'specpipeline' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 70 [1/1] (3.25ns)   --->   "store float 0.000000e+00, float* %y_2_addr, align 4" [deblur.cpp:70->deblur.cpp:103]   --->   Operation 70 'store' <Predicate = (!icmp_ln63)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str249) nounwind" [deblur.cpp:71->deblur.cpp:103]   --->   Operation 71 'specpipeline' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 72 [1/1] (3.25ns)   --->   "store float 0.000000e+00, float* %y_3_addr, align 4" [deblur.cpp:72->deblur.cpp:103]   --->   Operation 72 'store' <Predicate = (!icmp_ln63)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_5 : Operation 73 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str249) nounwind" [deblur.cpp:73->deblur.cpp:103]   --->   Operation 73 'specpipeline' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 74 [1/1] (3.25ns)   --->   "store float 0.000000e+00, float* %y_4_addr, align 4" [deblur.cpp:74->deblur.cpp:103]   --->   Operation 74 'store' <Predicate = (!icmp_ln63)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_5 : Operation 75 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str249) nounwind" [deblur.cpp:75->deblur.cpp:103]   --->   Operation 75 'specpipeline' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 76 [1/1] (3.25ns)   --->   "store float 0.000000e+00, float* %y_5_addr, align 4" [deblur.cpp:76->deblur.cpp:103]   --->   Operation 76 'store' <Predicate = (!icmp_ln63)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_5 : Operation 77 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str249) nounwind" [deblur.cpp:77->deblur.cpp:103]   --->   Operation 77 'specpipeline' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 78 [1/1] (3.25ns)   --->   "store float 0.000000e+00, float* %y_6_addr, align 4" [deblur.cpp:78->deblur.cpp:103]   --->   Operation 78 'store' <Predicate = (!icmp_ln63)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_5 : Operation 79 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str249) nounwind" [deblur.cpp:79->deblur.cpp:103]   --->   Operation 79 'specpipeline' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 80 [1/1] (3.25ns)   --->   "store float 0.000000e+00, float* %y_7_addr, align 4" [deblur.cpp:80->deblur.cpp:103]   --->   Operation 80 'store' <Predicate = (!icmp_ln63)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_5 : Operation 81 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str249) nounwind" [deblur.cpp:81->deblur.cpp:103]   --->   Operation 81 'specpipeline' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 82 [1/1] (3.25ns)   --->   "store float 0.000000e+00, float* %y_8_addr, align 4" [deblur.cpp:82->deblur.cpp:103]   --->   Operation 82 'store' <Predicate = (!icmp_ln63)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_5 : Operation 83 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str249) nounwind" [deblur.cpp:83->deblur.cpp:103]   --->   Operation 83 'specpipeline' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 84 [1/1] (3.25ns)   --->   "store float 0.000000e+00, float* %y_9_addr, align 4" [deblur.cpp:84->deblur.cpp:103]   --->   Operation 84 'store' <Predicate = (!icmp_ln63)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_5 : Operation 85 [1/1] (0.00ns)   --->   "%empty_29 = call i32 (...)* @_ssdm_op_SpecRegionEnd([6 x i8]* @p_str148, i32 %tmp_41_i)" [deblur.cpp:85->deblur.cpp:103]   --->   Operation 85 'specregionend' 'empty_29' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_5 : Operation 86 [1/1] (1.91ns)   --->   "%x = add i8 %select_ln68, 1" [deblur.cpp:65->deblur.cpp:103]   --->   Operation 86 'add' 'x' <Predicate = (!icmp_ln63)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 87 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 87 'br' <Predicate = (!icmp_ln63)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 1.76>
ST_6 : Operation 88 [1/1] (1.76ns)   --->   "br label %array_initialize.exit" [deblur.cpp:105]   --->   Operation 88 'br' <Predicate = true> <Delay = 1.76>

State 7 <SV = 6> <Delay = 1.86>
ST_7 : Operation 89 [1/1] (0.00ns)   --->   "%k_0 = phi i4 [ %k, %array_initialize.exit.loopexit ], [ 0, %array_initialize.exit.preheader ]"   --->   Operation 89 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 90 [1/1] (1.30ns)   --->   "%icmp_ln105 = icmp eq i4 %k_0, -6" [deblur.cpp:105]   --->   Operation 90 'icmp' 'icmp_ln105' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 91 [1/1] (0.00ns)   --->   "%empty_30 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 91 'speclooptripcount' 'empty_30' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 92 [1/1] (1.73ns)   --->   "%k = add i4 %k_0, 1" [deblur.cpp:105]   --->   Operation 92 'add' 'k' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 93 [1/1] (0.00ns)   --->   "br i1 %icmp_ln105, label %4, label %2" [deblur.cpp:105]   --->   Operation 93 'br' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 94 [2/2] (1.86ns)   --->   "call fastcc void @array_copy3([16384 x float]* %x_2, [16384 x float]* %x_old)" [deblur.cpp:107]   --->   Operation 94 'call' <Predicate = (!icmp_ln105)> <Delay = 1.86> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 95 [2/2] (1.86ns)   --->   "call fastcc void @array_copy3([16384 x float]* %x_2, [16384 x float]* %Img)" [deblur.cpp:114]   --->   Operation 95 'call' <Predicate = (icmp_ln105)> <Delay = 1.86> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 7> <Delay = 0.00>
ST_8 : Operation 96 [1/2] (0.00ns)   --->   "call fastcc void @array_copy3([16384 x float]* %x_2, [16384 x float]* %x_old)" [deblur.cpp:107]   --->   Operation 96 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 8> <Delay = 0.00>
ST_9 : Operation 97 [2/2] (0.00ns)   --->   "call fastcc void @my_filter_v12([16384 x float]* %x_2, [16384 x float]* %x_bar, [16384 x float]* %adjChImg, [16384 x float]* %adjChImg2, [16384 x float]* %y_1, [16384 x float]* %y_2, [16384 x float]* %y_3, [16384 x float]* %y_4, [16384 x float]* %y_5, [16384 x float]* %y_6, [16384 x float]* %y_7, [16384 x float]* %y_8, [16384 x float]* %y_9)" [deblur.cpp:108]   --->   Operation 97 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 98 [1/2] (0.00ns)   --->   "call fastcc void @my_filter_v12([16384 x float]* %x_2, [16384 x float]* %x_bar, [16384 x float]* %adjChImg, [16384 x float]* %adjChImg2, [16384 x float]* %y_1, [16384 x float]* %y_2, [16384 x float]* %y_3, [16384 x float]* %y_4, [16384 x float]* %y_5, [16384 x float]* %y_6, [16384 x float]* %y_7, [16384 x float]* %y_8, [16384 x float]* %y_9)" [deblur.cpp:108]   --->   Operation 98 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 0.00>
ST_11 : Operation 99 [2/2] (0.00ns)   --->   "call fastcc void @ProxGS4([16384 x float]* %x_2, [16384 x float]* %coe_a_M_real, [16384 x float]* %coe_a_M_imag, [16384 x float]* %coe_b)" [deblur.cpp:109]   --->   Operation 99 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 1.76>
ST_12 : Operation 100 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str350) nounwind" [deblur.cpp:105]   --->   Operation 100 'specloopname' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 101 [1/2] (0.00ns)   --->   "call fastcc void @ProxGS4([16384 x float]* %x_2, [16384 x float]* %coe_a_M_real, [16384 x float]* %coe_a_M_imag, [16384 x float]* %coe_b)" [deblur.cpp:109]   --->   Operation 101 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 102 [1/1] (1.76ns)   --->   "br label %3" [divergent.cpp:85->deblur.cpp:110]   --->   Operation 102 'br' <Predicate = true> <Delay = 1.76>

State 13 <SV = 12> <Delay = 8.36>
ST_13 : Operation 103 [1/1] (0.00ns)   --->   "%indvar_flatten11 = phi i15 [ 0, %2 ], [ %add_ln85, %for_x1 ]" [divergent.cpp:85->deblur.cpp:110]   --->   Operation 103 'phi' 'indvar_flatten11' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 104 [1/1] (0.00ns)   --->   "%j_0_i = phi i8 [ 0, %2 ], [ %select_ln90_1, %for_x1 ]" [divergent.cpp:90->deblur.cpp:110]   --->   Operation 104 'phi' 'j_0_i' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 105 [1/1] (0.00ns)   --->   "%i_0_i = phi i8 [ 0, %2 ], [ %i, %for_x1 ]"   --->   Operation 105 'phi' 'i_0_i' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 106 [1/1] (2.31ns)   --->   "%icmp_ln85 = icmp eq i15 %indvar_flatten11, -16384" [divergent.cpp:85->deblur.cpp:110]   --->   Operation 106 'icmp' 'icmp_ln85' <Predicate = true> <Delay = 2.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 107 [1/1] (1.94ns)   --->   "%add_ln85 = add i15 %indvar_flatten11, 1" [divergent.cpp:85->deblur.cpp:110]   --->   Operation 107 'add' 'add_ln85' <Predicate = true> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 108 [1/1] (0.00ns)   --->   "br i1 %icmp_ln85, label %array_initialize.exit.loopexit, label %for_x1" [divergent.cpp:85->deblur.cpp:110]   --->   Operation 108 'br' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 109 [1/1] (1.91ns)   --->   "%j = add i8 %j_0_i, 1" [divergent.cpp:85->deblur.cpp:110]   --->   Operation 109 'add' 'j' <Predicate = (!icmp_ln85)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 110 [1/1] (1.55ns)   --->   "%icmp_ln87 = icmp eq i8 %i_0_i, -128" [divergent.cpp:87->deblur.cpp:110]   --->   Operation 110 'icmp' 'icmp_ln87' <Predicate = (!icmp_ln85)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 111 [1/1] (1.24ns)   --->   "%select_ln90 = select i1 %icmp_ln87, i8 0, i8 %i_0_i" [divergent.cpp:90->deblur.cpp:110]   --->   Operation 111 'select' 'select_ln90' <Predicate = (!icmp_ln85)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 112 [1/1] (1.24ns)   --->   "%select_ln90_1 = select i1 %icmp_ln87, i8 %j, i8 %j_0_i" [divergent.cpp:90->deblur.cpp:110]   --->   Operation 112 'select' 'select_ln90_1' <Predicate = (!icmp_ln85)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 113 [1/1] (0.00ns)   --->   "%tmp_s = call i15 @_ssdm_op_BitConcatenate.i15.i8.i7(i8 %select_ln90_1, i7 0)" [divergent.cpp:90->deblur.cpp:110]   --->   Operation 113 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_13 : Operation 114 [1/1] (0.00ns)   --->   "%zext_ln88 = zext i15 %tmp_s to i16" [divergent.cpp:88->deblur.cpp:110]   --->   Operation 114 'zext' 'zext_ln88' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_13 : Operation 115 [1/1] (0.00ns)   --->   "%zext_ln90 = zext i8 %select_ln90 to i16" [divergent.cpp:90->deblur.cpp:110]   --->   Operation 115 'zext' 'zext_ln90' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_13 : Operation 116 [1/1] (1.94ns)   --->   "%add_ln90 = add i16 %zext_ln90, %zext_ln88" [divergent.cpp:90->deblur.cpp:110]   --->   Operation 116 'add' 'add_ln90' <Predicate = (!icmp_ln85)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 117 [1/1] (0.00ns)   --->   "%zext_ln90_1 = zext i16 %add_ln90 to i64" [divergent.cpp:90->deblur.cpp:110]   --->   Operation 117 'zext' 'zext_ln90_1' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_13 : Operation 118 [1/1] (0.00ns)   --->   "%x_old_addr = getelementptr [16384 x float]* %x_old, i64 0, i64 %zext_ln90_1" [divergent.cpp:90->deblur.cpp:110]   --->   Operation 118 'getelementptr' 'x_old_addr' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_13 : Operation 119 [1/1] (0.00ns)   --->   "%x_2_addr = getelementptr [16384 x float]* %x_2, i64 0, i64 %zext_ln90_1" [divergent.cpp:90->deblur.cpp:110]   --->   Operation 119 'getelementptr' 'x_2_addr' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_13 : Operation 120 [2/2] (3.25ns)   --->   "%x_2_load = load float* %x_2_addr, align 4" [divergent.cpp:90->deblur.cpp:110]   --->   Operation 120 'load' 'x_2_load' <Predicate = (!icmp_ln85)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_13 : Operation 121 [2/2] (3.25ns)   --->   "%x_old_load = load float* %x_old_addr, align 4" [divergent.cpp:90->deblur.cpp:110]   --->   Operation 121 'load' 'x_old_load' <Predicate = (!icmp_ln85)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_13 : Operation 122 [1/1] (1.91ns)   --->   "%i = add i8 %select_ln90, 1" [divergent.cpp:87->deblur.cpp:110]   --->   Operation 122 'add' 'i' <Predicate = (!icmp_ln85)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 123 [1/1] (0.00ns)   --->   "br label %array_initialize.exit"   --->   Operation 123 'br' <Predicate = (icmp_ln85)> <Delay = 0.00>

State 14 <SV = 13> <Delay = 3.25>
ST_14 : Operation 124 [1/2] (3.25ns)   --->   "%x_2_load = load float* %x_2_addr, align 4" [divergent.cpp:90->deblur.cpp:110]   --->   Operation 124 'load' 'x_2_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_14 : Operation 125 [1/2] (3.25ns)   --->   "%x_old_load = load float* %x_old_addr, align 4" [divergent.cpp:90->deblur.cpp:110]   --->   Operation 125 'load' 'x_old_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>

State 15 <SV = 14> <Delay = 7.25>
ST_15 : Operation 126 [5/5] (7.25ns)   --->   "%tmp_i6 = fsub float %x_2_load, %x_old_load" [divergent.cpp:90->deblur.cpp:110]   --->   Operation 126 'fsub' 'tmp_i6' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 7.25>
ST_16 : Operation 127 [4/5] (7.25ns)   --->   "%tmp_i6 = fsub float %x_2_load, %x_old_load" [divergent.cpp:90->deblur.cpp:110]   --->   Operation 127 'fsub' 'tmp_i6' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 7.25>
ST_17 : Operation 128 [3/5] (7.25ns)   --->   "%tmp_i6 = fsub float %x_2_load, %x_old_load" [divergent.cpp:90->deblur.cpp:110]   --->   Operation 128 'fsub' 'tmp_i6' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 7.25>
ST_18 : Operation 129 [2/5] (7.25ns)   --->   "%tmp_i6 = fsub float %x_2_load, %x_old_load" [divergent.cpp:90->deblur.cpp:110]   --->   Operation 129 'fsub' 'tmp_i6' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 7.25>
ST_19 : Operation 130 [1/5] (7.25ns)   --->   "%tmp_i6 = fsub float %x_2_load, %x_old_load" [divergent.cpp:90->deblur.cpp:110]   --->   Operation 130 'fsub' 'tmp_i6' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 3.25>
ST_20 : Operation 131 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @for_y_for_x_str)"   --->   Operation 131 'specloopname' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 132 [1/1] (0.00ns)   --->   "%empty_31 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16384, i64 16384, i64 16384)"   --->   Operation 132 'speclooptripcount' 'empty_31' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 133 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str645) nounwind" [divergent.cpp:88->deblur.cpp:110]   --->   Operation 133 'specloopname' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 134 [1/1] (0.00ns)   --->   "%tmp_46_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([6 x i8]* @p_str645)" [divergent.cpp:88->deblur.cpp:110]   --->   Operation 134 'specregionbegin' 'tmp_46_i' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 135 [1/1] (0.00ns)   --->   "%x_bar_addr = getelementptr [16384 x float]* %x_bar, i64 0, i64 %zext_ln90_1" [divergent.cpp:90->deblur.cpp:110]   --->   Operation 135 'getelementptr' 'x_bar_addr' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 136 [1/1] (3.25ns)   --->   "store float %tmp_i6, float* %x_bar_addr, align 4" [divergent.cpp:90->deblur.cpp:110]   --->   Operation 136 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16384> <RAM>
ST_20 : Operation 137 [1/1] (0.00ns)   --->   "%empty_32 = call i32 (...)* @_ssdm_op_SpecRegionEnd([6 x i8]* @p_str645, i32 %tmp_46_i)" [divergent.cpp:91->deblur.cpp:110]   --->   Operation 137 'specregionend' 'empty_32' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 138 [1/1] (0.00ns)   --->   "br label %3"   --->   Operation 138 'br' <Predicate = true> <Delay = 0.00>

State 21 <SV = 7> <Delay = 0.00>
ST_21 : Operation 139 [1/2] (0.00ns)   --->   "call fastcc void @array_copy3([16384 x float]* %x_2, [16384 x float]* %Img)" [deblur.cpp:114]   --->   Operation 139 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_21 : Operation 140 [1/1] (0.00ns)   --->   "ret void" [deblur.cpp:117]   --->   Operation 140 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.86ns
The critical path consists of the following:
	'alloca' operation ('x_bar', deblur.cpp:98) [7]  (0 ns)
	'call' operation ('call_ln101', deblur.cpp:101) to 'array_copy3' [19]  (1.86 ns)

 <State 2>: 0ns
The critical path consists of the following:

 <State 3>: 1.86ns
The critical path consists of the following:
	'call' operation ('call_ln102', deblur.cpp:102) to 'array_copy3' [20]  (1.86 ns)

 <State 4>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten', deblur.cpp:63->deblur.cpp:103) with incoming values : ('add_ln63', deblur.cpp:63->deblur.cpp:103) [23]  (1.77 ns)

 <State 5>: 8.36ns
The critical path consists of the following:
	'phi' operation ('y_0_i', deblur.cpp:68->deblur.cpp:103) with incoming values : ('select_ln68_1', deblur.cpp:68->deblur.cpp:103) [24]  (0 ns)
	'add' operation ('y', deblur.cpp:63->deblur.cpp:103) [30]  (1.92 ns)
	'select' operation ('select_ln68_1', deblur.cpp:68->deblur.cpp:103) [35]  (1.25 ns)
	'add' operation ('add_ln68', deblur.cpp:68->deblur.cpp:103) [42]  (1.94 ns)
	'getelementptr' operation ('y_1_addr', deblur.cpp:68->deblur.cpp:103) [44]  (0 ns)
	'store' operation ('store_ln68', deblur.cpp:68->deblur.cpp:103) of constant 0 on array 'y_1', deblur.cpp:99 [53]  (3.25 ns)

 <State 6>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('k') with incoming values : ('k', deblur.cpp:105) [76]  (1.77 ns)

 <State 7>: 1.86ns
The critical path consists of the following:
	'call' operation ('call_ln107', deblur.cpp:107) to 'array_copy3' [83]  (1.86 ns)

 <State 8>: 0ns
The critical path consists of the following:

 <State 9>: 0ns
The critical path consists of the following:

 <State 10>: 0ns
The critical path consists of the following:

 <State 11>: 0ns
The critical path consists of the following:

 <State 12>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten11', divergent.cpp:85->deblur.cpp:110) with incoming values : ('add_ln85', divergent.cpp:85->deblur.cpp:110) [88]  (1.77 ns)

 <State 13>: 8.36ns
The critical path consists of the following:
	'phi' operation ('j_0_i', divergent.cpp:90->deblur.cpp:110) with incoming values : ('select_ln90_1', divergent.cpp:90->deblur.cpp:110) [89]  (0 ns)
	'add' operation ('j', divergent.cpp:85->deblur.cpp:110) [95]  (1.92 ns)
	'select' operation ('select_ln90_1', divergent.cpp:90->deblur.cpp:110) [100]  (1.25 ns)
	'add' operation ('add_ln90', divergent.cpp:90->deblur.cpp:110) [106]  (1.94 ns)
	'getelementptr' operation ('x_2_addr', divergent.cpp:90->deblur.cpp:110) [110]  (0 ns)
	'load' operation ('x_2_load', divergent.cpp:90->deblur.cpp:110) on array 'x', deblur.cpp:98 [111]  (3.25 ns)

 <State 14>: 3.25ns
The critical path consists of the following:
	'load' operation ('x_2_load', divergent.cpp:90->deblur.cpp:110) on array 'x', deblur.cpp:98 [111]  (3.25 ns)

 <State 15>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_i6', divergent.cpp:90->deblur.cpp:110) [113]  (7.26 ns)

 <State 16>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_i6', divergent.cpp:90->deblur.cpp:110) [113]  (7.26 ns)

 <State 17>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_i6', divergent.cpp:90->deblur.cpp:110) [113]  (7.26 ns)

 <State 18>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_i6', divergent.cpp:90->deblur.cpp:110) [113]  (7.26 ns)

 <State 19>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_i6', divergent.cpp:90->deblur.cpp:110) [113]  (7.26 ns)

 <State 20>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('x_bar_addr', divergent.cpp:90->deblur.cpp:110) [108]  (0 ns)
	'store' operation ('store_ln90', divergent.cpp:90->deblur.cpp:110) of variable 'tmp_i6', divergent.cpp:90->deblur.cpp:110 on array 'x_bar', deblur.cpp:98 [114]  (3.25 ns)

 <State 21>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
