#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("refImg_R_address0", 14, hls_out, 0, "ap_memory", "mem_address", 1),
	Port_Property("refImg_R_ce0", 1, hls_out, 0, "ap_memory", "mem_ce", 1),
	Port_Property("refImg_R_q0", 32, hls_in, 0, "ap_memory", "mem_dout", 1),
	Port_Property("refImg_R_address1", 14, hls_out, 0, "ap_memory", "MemPortADDR2", 1),
	Port_Property("refImg_R_ce1", 1, hls_out, 0, "ap_memory", "MemPortCE2", 1),
	Port_Property("refImg_R_q1", 32, hls_in, 0, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("adjChImg_G_address0", 14, hls_out, 1, "ap_memory", "mem_address", 1),
	Port_Property("adjChImg_G_ce0", 1, hls_out, 1, "ap_memory", "mem_ce", 1),
	Port_Property("adjChImg_G_we0", 1, hls_out, 1, "ap_memory", "mem_we", 1),
	Port_Property("adjChImg_G_d0", 32, hls_out, 1, "ap_memory", "mem_din", 1),
	Port_Property("adjChImg_G_q0", 32, hls_in, 1, "ap_memory", "mem_dout", 1),
	Port_Property("adjChImg_G_address1", 14, hls_out, 1, "ap_memory", "MemPortADDR2", 1),
	Port_Property("adjChImg_G_ce1", 1, hls_out, 1, "ap_memory", "MemPortCE2", 1),
	Port_Property("adjChImg_G_q1", 32, hls_in, 1, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("adjChImg_B_address0", 14, hls_out, 2, "ap_memory", "mem_address", 1),
	Port_Property("adjChImg_B_ce0", 1, hls_out, 2, "ap_memory", "mem_ce", 1),
	Port_Property("adjChImg_B_we0", 1, hls_out, 2, "ap_memory", "mem_we", 1),
	Port_Property("adjChImg_B_d0", 32, hls_out, 2, "ap_memory", "mem_din", 1),
	Port_Property("adjChImg_B_q0", 32, hls_in, 2, "ap_memory", "mem_dout", 1),
	Port_Property("adjChImg_B_address1", 14, hls_out, 2, "ap_memory", "MemPortADDR2", 1),
	Port_Property("adjChImg_B_ce1", 1, hls_out, 2, "ap_memory", "MemPortCE2", 1),
	Port_Property("adjChImg_B_q1", 32, hls_in, 2, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("nominator_R_M_real_address0", 14, hls_out, 3, "ap_memory", "mem_address", 1),
	Port_Property("nominator_R_M_real_ce0", 1, hls_out, 3, "ap_memory", "mem_ce", 1),
	Port_Property("nominator_R_M_real_we0", 1, hls_out, 3, "ap_memory", "mem_we", 1),
	Port_Property("nominator_R_M_real_d0", 32, hls_out, 3, "ap_memory", "mem_din", 1),
	Port_Property("nominator_R_M_real_q0", 32, hls_in, 3, "ap_memory", "mem_dout", 1),
	Port_Property("nominator_R_M_real_address1", 14, hls_out, 3, "ap_memory", "MemPortADDR2", 1),
	Port_Property("nominator_R_M_real_ce1", 1, hls_out, 3, "ap_memory", "MemPortCE2", 1),
	Port_Property("nominator_R_M_real_we1", 1, hls_out, 3, "ap_memory", "MemPortWE2", 1),
	Port_Property("nominator_R_M_real_d1", 32, hls_out, 3, "ap_memory", "MemPortDIN2", 1),
	Port_Property("nominator_R_M_real_q1", 32, hls_in, 3, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("nominator_R_M_imag_address0", 14, hls_out, 4, "ap_memory", "mem_address", 1),
	Port_Property("nominator_R_M_imag_ce0", 1, hls_out, 4, "ap_memory", "mem_ce", 1),
	Port_Property("nominator_R_M_imag_we0", 1, hls_out, 4, "ap_memory", "mem_we", 1),
	Port_Property("nominator_R_M_imag_d0", 32, hls_out, 4, "ap_memory", "mem_din", 1),
	Port_Property("nominator_R_M_imag_q0", 32, hls_in, 4, "ap_memory", "mem_dout", 1),
	Port_Property("nominator_R_M_imag_address1", 14, hls_out, 4, "ap_memory", "MemPortADDR2", 1),
	Port_Property("nominator_R_M_imag_ce1", 1, hls_out, 4, "ap_memory", "MemPortCE2", 1),
	Port_Property("nominator_R_M_imag_we1", 1, hls_out, 4, "ap_memory", "MemPortWE2", 1),
	Port_Property("nominator_R_M_imag_d1", 32, hls_out, 4, "ap_memory", "MemPortDIN2", 1),
	Port_Property("nominator_R_M_imag_q1", 32, hls_in, 4, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("denominator_R_address0", 14, hls_out, 5, "ap_memory", "mem_address", 1),
	Port_Property("denominator_R_ce0", 1, hls_out, 5, "ap_memory", "mem_ce", 1),
	Port_Property("denominator_R_we0", 1, hls_out, 5, "ap_memory", "mem_we", 1),
	Port_Property("denominator_R_d0", 32, hls_out, 5, "ap_memory", "mem_din", 1),
	Port_Property("denominator_R_q0", 32, hls_in, 5, "ap_memory", "mem_dout", 1),
	Port_Property("denominator_R_address1", 14, hls_out, 5, "ap_memory", "MemPortADDR2", 1),
	Port_Property("denominator_R_ce1", 1, hls_out, 5, "ap_memory", "MemPortCE2", 1),
	Port_Property("denominator_R_we1", 1, hls_out, 5, "ap_memory", "MemPortWE2", 1),
	Port_Property("denominator_R_d1", 32, hls_out, 5, "ap_memory", "MemPortDIN2", 1),
	Port_Property("denominator_R_q1", 32, hls_in, 5, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("nominator_G_M_real_address0", 14, hls_out, 6, "ap_memory", "mem_address", 1),
	Port_Property("nominator_G_M_real_ce0", 1, hls_out, 6, "ap_memory", "mem_ce", 1),
	Port_Property("nominator_G_M_real_q0", 32, hls_in, 6, "ap_memory", "mem_dout", 1),
	Port_Property("nominator_G_M_imag_address0", 14, hls_out, 7, "ap_memory", "mem_address", 1),
	Port_Property("nominator_G_M_imag_ce0", 1, hls_out, 7, "ap_memory", "mem_ce", 1),
	Port_Property("nominator_G_M_imag_q0", 32, hls_in, 7, "ap_memory", "mem_dout", 1),
	Port_Property("denominator_G_address0", 14, hls_out, 8, "ap_memory", "mem_address", 1),
	Port_Property("denominator_G_ce0", 1, hls_out, 8, "ap_memory", "mem_ce", 1),
	Port_Property("denominator_G_q0", 32, hls_in, 8, "ap_memory", "mem_dout", 1),
	Port_Property("nominator_B_M_real_address0", 14, hls_out, 9, "ap_memory", "mem_address", 1),
	Port_Property("nominator_B_M_real_ce0", 1, hls_out, 9, "ap_memory", "mem_ce", 1),
	Port_Property("nominator_B_M_real_q0", 32, hls_in, 9, "ap_memory", "mem_dout", 1),
	Port_Property("nominator_B_M_imag_address0", 14, hls_out, 10, "ap_memory", "mem_address", 1),
	Port_Property("nominator_B_M_imag_ce0", 1, hls_out, 10, "ap_memory", "mem_ce", 1),
	Port_Property("nominator_B_M_imag_q0", 32, hls_in, 10, "ap_memory", "mem_dout", 1),
	Port_Property("denominator_B_address0", 14, hls_out, 11, "ap_memory", "mem_address", 1),
	Port_Property("denominator_B_ce0", 1, hls_out, 11, "ap_memory", "mem_ce", 1),
	Port_Property("denominator_B_q0", 32, hls_in, 11, "ap_memory", "mem_dout", 1),
};
const char* HLS_Design_Meta::dut_name = "DEBLUR";
