-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity my_filter_v12 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    f_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    f_V_ce0 : OUT STD_LOGIC;
    f_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    f_V_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    f_V_ce1 : OUT STD_LOGIC;
    f_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    adjChImg_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    adjChImg_V_ce0 : OUT STD_LOGIC;
    adjChImg_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    adjChImg_V_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    adjChImg_V_ce1 : OUT STD_LOGIC;
    adjChImg_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    g1_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    g1_V_ce0 : OUT STD_LOGIC;
    g1_V_we0 : OUT STD_LOGIC;
    g1_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    g1_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    g1_V_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    g1_V_ce1 : OUT STD_LOGIC;
    g1_V_we1 : OUT STD_LOGIC;
    g1_V_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    g2_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    g2_V_ce0 : OUT STD_LOGIC;
    g2_V_we0 : OUT STD_LOGIC;
    g2_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    g2_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    g2_V_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    g2_V_ce1 : OUT STD_LOGIC;
    g2_V_we1 : OUT STD_LOGIC;
    g2_V_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    g3_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    g3_V_ce0 : OUT STD_LOGIC;
    g3_V_we0 : OUT STD_LOGIC;
    g3_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    g3_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    g4_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    g4_V_ce0 : OUT STD_LOGIC;
    g4_V_we0 : OUT STD_LOGIC;
    g4_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    g4_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    g4_V_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    g4_V_ce1 : OUT STD_LOGIC;
    g4_V_we1 : OUT STD_LOGIC;
    g4_V_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    g5_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    g5_V_ce0 : OUT STD_LOGIC;
    g5_V_we0 : OUT STD_LOGIC;
    g5_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    g5_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    g6_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    g6_V_ce0 : OUT STD_LOGIC;
    g6_V_we0 : OUT STD_LOGIC;
    g6_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    g6_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    g6_V_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    g6_V_ce1 : OUT STD_LOGIC;
    g6_V_we1 : OUT STD_LOGIC;
    g6_V_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    g7_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    g7_V_ce0 : OUT STD_LOGIC;
    g7_V_we0 : OUT STD_LOGIC;
    g7_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    g7_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    g7_V_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    g7_V_ce1 : OUT STD_LOGIC;
    g7_V_we1 : OUT STD_LOGIC;
    g7_V_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of my_filter_v12 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv15_4000 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv11_433 : STD_LOGIC_VECTOR (10 downto 0) := "10000110011";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_308 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_0_reg_319 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_0_reg_330 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_341_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_354 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state15_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state21_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln68_reg_1351 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln68_reg_1351_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state13_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state16_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal icmp_ln68_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln68_reg_1351_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln68_reg_1351_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln68_reg_1351_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln68_reg_1351_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln68_fu_364_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln68_reg_1355 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln73_fu_376_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln73_reg_1360 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln73_1_fu_390_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln73_1_reg_1366 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln74_fu_406_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln74_reg_1371 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln73_fu_432_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln73_reg_1377 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln215_2_fu_497_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln215_2_reg_1392 : STD_LOGIC_VECTOR (15 downto 0);
    signal g1_V_addr_reg_1407 : STD_LOGIC_VECTOR (13 downto 0);
    signal g1_V_addr_reg_1407_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal g2_V_addr_reg_1413 : STD_LOGIC_VECTOR (13 downto 0);
    signal g3_V_addr_reg_1419 : STD_LOGIC_VECTOR (13 downto 0);
    signal g3_V_addr_reg_1419_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal g4_V_addr_reg_1424 : STD_LOGIC_VECTOR (13 downto 0);
    signal g4_V_addr_reg_1424_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal g5_V_addr_reg_1430 : STD_LOGIC_VECTOR (13 downto 0);
    signal g5_V_addr_reg_1430_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal g6_V_addr_reg_1435 : STD_LOGIC_VECTOR (13 downto 0);
    signal g6_V_addr_reg_1435_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal g6_V_addr_reg_1435_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal g6_V_addr_reg_1435_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal g6_V_addr_reg_1435_pp0_iter4_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal g6_V_addr_reg_1435_pp0_iter5_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal g6_V_addr_reg_1435_pp0_iter6_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal g7_V_addr_reg_1441 : STD_LOGIC_VECTOR (13 downto 0);
    signal g7_V_addr_reg_1441_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal g7_V_addr_reg_1441_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal g7_V_addr_reg_1441_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal g7_V_addr_reg_1441_pp0_iter4_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal g7_V_addr_reg_1441_pp0_iter5_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal x_fu_507_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_reg_1452 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln215_4_fu_527_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln215_4_reg_1462 : STD_LOGIC_VECTOR (15 downto 0);
    signal f_V_load_1_reg_1472 : STD_LOGIC_VECTOR (7 downto 0);
    signal g1_V_load_reg_1482 : STD_LOGIC_VECTOR (7 downto 0);
    signal f_V_load_2_reg_1487 : STD_LOGIC_VECTOR (7 downto 0);
    signal g2_V_load_reg_1494 : STD_LOGIC_VECTOR (7 downto 0);
    signal g3_V_load_reg_1499 : STD_LOGIC_VECTOR (7 downto 0);
    signal g4_V_load_reg_1504 : STD_LOGIC_VECTOR (7 downto 0);
    signal g5_V_load_reg_1509 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_fu_532_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_reg_1514 : STD_LOGIC_VECTOR (8 downto 0);
    signal adjChImg_V_load_reg_1519 : STD_LOGIC_VECTOR (7 downto 0);
    signal g6_V_load_reg_1525 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_5_fu_540_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_5_reg_1530 : STD_LOGIC_VECTOR (8 downto 0);
    signal adjChImg_V_load_2_reg_1535 : STD_LOGIC_VECTOR (7 downto 0);
    signal g7_V_load_reg_1540 : STD_LOGIC_VECTOR (7 downto 0);
    signal f_V_load_reg_1550 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln214_1_fu_584_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln214_1_reg_1562 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_fu_594_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_reg_1567 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_1_fu_599_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_V_1_reg_1572 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_2_fu_609_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_2_reg_1577 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_3_fu_615_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_V_3_reg_1582 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1336_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_9_reg_1592 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln895_1_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_1_reg_1602 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln214_fu_683_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln214_reg_1606 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln1353_3_fu_704_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln1353_3_reg_1611 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1344_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_4_reg_1616 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal sext_ln1429_1_fu_724_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln895_fu_738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_reg_1626 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_3_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_3_reg_1630 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1429_fu_780_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln895_2_fu_794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_2_reg_1639 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_4_fu_810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_4_reg_1643 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_345_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_reg_1647 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_348_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_reg_1652 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_351_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_op_assign_1_reg_1657 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal i_op_assign_reg_1662 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal reg_V_1_fu_816_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_V_1_reg_1667 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_5_reg_1673 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln331_1_fu_846_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln331_1_reg_1678 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln326_1_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln326_1_reg_1684 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_2_fu_856_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_2_reg_1690 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln330_1_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln330_1_reg_1696 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln332_1_fu_868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln332_1_reg_1701 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln333_1_fu_874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln333_1_reg_1707 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln330_1_fu_880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln330_1_reg_1713 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_V_fu_886_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_V_reg_1719 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_3_reg_1725 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln331_fu_916_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln331_reg_1730 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln326_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln326_reg_1736 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_926_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_1742 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln330_fu_932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln330_reg_1748 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln332_fu_938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln332_reg_1753 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln333_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln333_reg_1759 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln330_fu_950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln330_reg_1765 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln332_1_fu_1019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln332_1_reg_1771 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln326_1_fu_1061_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln326_1_reg_1776 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln332_fu_1131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln332_reg_1781 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln326_fu_1173_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln326_reg_1786 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln351_1_fu_1235_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln351_1_reg_1791 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln895_6_fu_1252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_6_reg_1796 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln351_fu_1313_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln351_reg_1800 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln895_5_fu_1330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_5_reg_1805 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_phi_mux_indvar_flatten_phi_fu_312_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_y_0_phi_fu_323_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_x_0_phi_fu_334_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_1_fu_472_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_2_fu_491_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_3_fu_503_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln215_5_fu_521_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_6_fu_546_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln215_8_fu_574_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln214_fu_672_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln214_1_fu_554_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln214_3_fu_764_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln214_5_fu_693_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln214_6_fu_774_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_341_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_345_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_348_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_351_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln70_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln74_1_fu_384_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_398_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln74_fu_410_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln73_2_fu_416_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_424_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln73_3_fu_436_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln73_fu_444_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_450_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln215_fu_462_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln215_fu_466_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln215_1_fu_485_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln71_fu_458_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln215_4_fu_512_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln215_3_fu_516_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_5_fu_536_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1353_1_fu_550_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln75_fu_560_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_7_fu_565_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln215_5_fu_569_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln214_1_fu_579_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_fu_590_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_2_fu_602_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_2_fu_606_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_6_fu_625_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_6_fu_625_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_6_fu_631_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_7_fu_634_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_6_fu_625_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_15_fu_652_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln1353_fu_668_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln214_fu_678_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln214_4_fu_689_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln1353_2_fu_699_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_1_fu_712_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_1_fu_712_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_1_fu_712_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_14_fu_728_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_17_fu_744_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln214_2_fu_760_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln214_7_fu_770_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_784_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_18_fu_800_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Result_4_fu_832_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln310_1_fu_820_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal exp_V_1_fu_842_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_s_fu_902_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln310_fu_890_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal exp_V_fu_912_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln318_1_fu_956_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal sh_amt_3_fu_970_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_12_fu_979_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln329_1_fu_967_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_959_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln334_1_fu_995_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal lshr_ln334_1_fu_999_p2 : STD_LOGIC_VECTOR (52 downto 0);
    signal trunc_ln342_1_fu_975_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln330_1_fu_1014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln333_2_fu_1024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln334_1_fu_1005_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln332_1_fu_1037_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln343_1_fu_989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln332_1_fu_1041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln343_1_fu_1047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln345_1_fu_1009_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln333_2_fu_1029_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln343_1_fu_1053_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln318_fu_1068_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal sh_amt_1_fu_1082_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_9_fu_1091_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln329_fu_1079_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1071_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln334_fu_1107_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal lshr_ln334_fu_1111_p2 : STD_LOGIC_VECTOR (52 downto 0);
    signal trunc_ln342_fu_1087_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln330_fu_1126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln333_fu_1136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln334_fu_1117_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln332_fu_1149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln343_fu_1101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln332_fu_1153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln343_fu_1159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln345_fu_1121_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln333_fu_1141_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln343_fu_1165_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_1180_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln333_1_fu_1195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln333_3_fu_1200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln336_1_fu_1187_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln326_1_fu_1212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_1_fu_1217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln333_3_fu_1205_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln330_1_fu_1222_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln461_1_fu_1229_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_fu_1242_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_10_fu_1258_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln333_fu_1273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln333_1_fu_1278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln336_fu_1265_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln326_fu_1290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_fu_1295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln333_1_fu_1283_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln330_fu_1300_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln461_fu_1307_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_1320_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1336_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1344_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1336_p10 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_6_fu_625_p10 : STD_LOGIC_VECTOR (16 downto 0);

    component DEBLUR_dadd_64ns_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component DEBLUR_uitodp_32ncud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component DEBLUR_sitodp_32sdEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component DEBLUR_mac_mulsubeOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    DEBLUR_dadd_64ns_bkb_U3 : component DEBLUR_dadd_64ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_341_p0,
        din1 => grp_fu_341_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_341_p2);

    DEBLUR_uitodp_32ncud_U4 : component DEBLUR_uitodp_32ncud
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_345_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_345_p1);

    DEBLUR_uitodp_32ncud_U5 : component DEBLUR_uitodp_32ncud
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_348_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_348_p1);

    DEBLUR_sitodp_32sdEe_U6 : component DEBLUR_sitodp_32sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_351_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_351_p1);

    DEBLUR_mac_mulsubeOg_U7 : component DEBLUR_mac_mulsubeOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => ret_V_7_fu_634_p2,
        din1 => grp_fu_1336_p1,
        din2 => ret_V_6_fu_625_p2,
        dout => grp_fu_1336_p3);

    DEBLUR_mac_mulsubeOg_U8 : component DEBLUR_mac_mulsubeOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => ret_V_2_reg_1577,
        din1 => grp_fu_1344_p1,
        din2 => ret_V_1_fu_712_p2,
        dout => grp_fu_1344_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln68_reg_1351 = ap_const_lv1_0))) then 
                indvar_flatten_reg_308 <= add_ln68_reg_1355;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_308 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    x_0_reg_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln68_reg_1351 = ap_const_lv1_0))) then 
                x_0_reg_330 <= x_reg_1452;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                x_0_reg_330 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    y_0_reg_319_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln68_reg_1351 = ap_const_lv1_0))) then 
                y_0_reg_319 <= select_ln73_1_reg_1366;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                y_0_reg_319 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln68_fu_358_p2 = ap_const_lv1_0))) then
                add_ln215_2_reg_1392 <= add_ln215_2_fu_497_p2;
                g1_V_addr_reg_1407 <= zext_ln215_1_fu_472_p1(14 - 1 downto 0);
                g2_V_addr_reg_1413 <= zext_ln215_1_fu_472_p1(14 - 1 downto 0);
                g3_V_addr_reg_1419 <= zext_ln215_1_fu_472_p1(14 - 1 downto 0);
                g4_V_addr_reg_1424 <= zext_ln215_1_fu_472_p1(14 - 1 downto 0);
                g5_V_addr_reg_1430 <= zext_ln215_1_fu_472_p1(14 - 1 downto 0);
                g6_V_addr_reg_1435 <= zext_ln215_1_fu_472_p1(14 - 1 downto 0);
                g7_V_addr_reg_1441 <= zext_ln215_1_fu_472_p1(14 - 1 downto 0);
                select_ln73_reg_1360 <= select_ln73_fu_376_p3;
                    zext_ln73_reg_1377(14 downto 7) <= zext_ln73_fu_432_p1(14 downto 7);
                    zext_ln74_reg_1371(14 downto 7) <= zext_ln74_fu_406_p1(14 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln68_reg_1351 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln215_4_reg_1462 <= add_ln215_4_fu_527_p2;
                ret_V_5_reg_1530 <= ret_V_5_fu_540_p2;
                    rhs_V_reg_1514(7 downto 0) <= rhs_V_fu_532_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln68_reg_1355 <= add_ln68_fu_364_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln68_reg_1351 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                adjChImg_V_load_2_reg_1535 <= adjChImg_V_q1;
                adjChImg_V_load_reg_1519 <= adjChImg_V_q0;
                f_V_load_1_reg_1472 <= f_V_q0;
                f_V_load_2_reg_1487 <= f_V_q1;
                g1_V_load_reg_1482 <= g1_V_q0;
                g2_V_load_reg_1494 <= g2_V_q0;
                g3_V_load_reg_1499 <= g3_V_q0;
                g4_V_load_reg_1504 <= g4_V_q0;
                g5_V_load_reg_1509 <= g5_V_q0;
                g6_V_load_reg_1525 <= g6_V_q0;
                g7_V_load_reg_1540 <= g7_V_q0;
                x_reg_1452 <= x_fu_507_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln68_reg_1351_pp0_iter4_reg = ap_const_lv1_0))) then
                and_ln332_1_reg_1771 <= and_ln332_1_fu_1019_p2;
                icmp_ln326_reg_1736 <= icmp_ln326_fu_920_p2;
                icmp_ln330_reg_1748 <= icmp_ln330_fu_932_p2;
                icmp_ln332_reg_1753 <= icmp_ln332_fu_938_p2;
                icmp_ln333_reg_1759 <= icmp_ln333_fu_944_p2;
                or_ln330_reg_1765 <= or_ln330_fu_950_p2;
                p_Result_3_reg_1725 <= reg_V_fu_886_p1(63 downto 63);
                reg_V_reg_1719 <= reg_V_fu_886_p1;
                select_ln326_1_reg_1776 <= select_ln326_1_fu_1061_p3;
                sh_amt_reg_1742 <= sh_amt_fu_926_p2;
                trunc_ln331_reg_1730 <= trunc_ln331_fu_916_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln68_reg_1351_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                and_ln332_reg_1781 <= and_ln332_fu_1131_p2;
                select_ln326_reg_1786 <= select_ln326_fu_1173_p3;
                select_ln351_1_reg_1791 <= select_ln351_1_fu_1235_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln68_reg_1351 = ap_const_lv1_0))) then
                f_V_load_reg_1550 <= f_V_q0;
                ret_V_9_reg_1592 <= grp_fu_1336_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                g1_V_addr_reg_1407_pp0_iter1_reg <= g1_V_addr_reg_1407;
                g3_V_addr_reg_1419_pp0_iter1_reg <= g3_V_addr_reg_1419;
                g4_V_addr_reg_1424_pp0_iter1_reg <= g4_V_addr_reg_1424;
                g5_V_addr_reg_1430_pp0_iter1_reg <= g5_V_addr_reg_1430;
                g6_V_addr_reg_1435_pp0_iter1_reg <= g6_V_addr_reg_1435;
                g6_V_addr_reg_1435_pp0_iter2_reg <= g6_V_addr_reg_1435_pp0_iter1_reg;
                g6_V_addr_reg_1435_pp0_iter3_reg <= g6_V_addr_reg_1435_pp0_iter2_reg;
                g6_V_addr_reg_1435_pp0_iter4_reg <= g6_V_addr_reg_1435_pp0_iter3_reg;
                g6_V_addr_reg_1435_pp0_iter5_reg <= g6_V_addr_reg_1435_pp0_iter4_reg;
                g6_V_addr_reg_1435_pp0_iter6_reg <= g6_V_addr_reg_1435_pp0_iter5_reg;
                g7_V_addr_reg_1441_pp0_iter1_reg <= g7_V_addr_reg_1441;
                g7_V_addr_reg_1441_pp0_iter2_reg <= g7_V_addr_reg_1441_pp0_iter1_reg;
                g7_V_addr_reg_1441_pp0_iter3_reg <= g7_V_addr_reg_1441_pp0_iter2_reg;
                g7_V_addr_reg_1441_pp0_iter4_reg <= g7_V_addr_reg_1441_pp0_iter3_reg;
                g7_V_addr_reg_1441_pp0_iter5_reg <= g7_V_addr_reg_1441_pp0_iter4_reg;
                icmp_ln68_reg_1351 <= icmp_ln68_fu_358_p2;
                icmp_ln68_reg_1351_pp0_iter1_reg <= icmp_ln68_reg_1351;
                icmp_ln68_reg_1351_pp0_iter2_reg <= icmp_ln68_reg_1351_pp0_iter1_reg;
                icmp_ln68_reg_1351_pp0_iter3_reg <= icmp_ln68_reg_1351_pp0_iter2_reg;
                icmp_ln68_reg_1351_pp0_iter4_reg <= icmp_ln68_reg_1351_pp0_iter3_reg;
                icmp_ln68_reg_1351_pp0_iter5_reg <= icmp_ln68_reg_1351_pp0_iter4_reg;
                icmp_ln895_3_reg_1630 <= icmp_ln895_3_fu_754_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln68_reg_1351_pp0_iter2_reg = ap_const_lv1_0))) then
                i_op_assign_1_reg_1657 <= grp_fu_351_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln68_reg_1351_pp0_iter2_reg = ap_const_lv1_0))) then
                i_op_assign_reg_1662 <= grp_fu_351_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln68_reg_1351_pp0_iter4_reg = ap_const_lv1_0))) then
                icmp_ln326_1_reg_1684 <= icmp_ln326_1_fu_850_p2;
                icmp_ln330_1_reg_1696 <= icmp_ln330_1_fu_862_p2;
                icmp_ln332_1_reg_1701 <= icmp_ln332_1_fu_868_p2;
                icmp_ln333_1_reg_1707 <= icmp_ln333_1_fu_874_p2;
                or_ln330_1_reg_1713 <= or_ln330_1_fu_880_p2;
                p_Result_5_reg_1673 <= reg_V_1_fu_816_p1(63 downto 63);
                reg_V_1_reg_1667 <= reg_V_1_fu_816_p1;
                sh_amt_2_reg_1690 <= sh_amt_2_fu_856_p2;
                trunc_ln331_1_reg_1678 <= trunc_ln331_1_fu_846_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln68_reg_1351 = ap_const_lv1_0))) then
                icmp_ln895_1_reg_1602 <= icmp_ln895_1_fu_662_p2;
                    lhs_V_1_reg_1572(7 downto 0) <= lhs_V_1_fu_599_p1(7 downto 0);
                ret_V_2_reg_1577 <= ret_V_2_fu_609_p2;
                ret_V_reg_1567 <= ret_V_fu_594_p2;
                    rhs_V_3_reg_1582(7 downto 0) <= rhs_V_3_fu_615_p1(7 downto 0);
                sub_ln214_1_reg_1562 <= sub_ln214_1_fu_584_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                icmp_ln895_2_reg_1639 <= icmp_ln895_2_fu_794_p2;
                icmp_ln895_4_reg_1643 <= icmp_ln895_4_fu_810_p2;
                icmp_ln895_6_reg_1796 <= icmp_ln895_6_fu_1252_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                icmp_ln895_5_reg_1805 <= icmp_ln895_5_fu_1330_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln68_reg_1351 = ap_const_lv1_0))) then
                icmp_ln895_reg_1626 <= icmp_ln895_fu_738_p2;
                sub_ln1353_3_reg_1611 <= sub_ln1353_3_fu_704_p2;
                sub_ln214_reg_1606 <= sub_ln214_fu_683_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln68_reg_1351_pp0_iter4_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln68_reg_1351_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then
                reg_354 <= grp_fu_341_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln68_reg_1351 = ap_const_lv1_0))) then
                ret_V_4_reg_1616 <= grp_fu_1344_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln68_reg_1351_pp0_iter5_reg = ap_const_lv1_0))) then
                select_ln351_reg_1800 <= select_ln351_fu_1313_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln68_fu_358_p2 = ap_const_lv1_0))) then
                select_ln73_1_reg_1366 <= select_ln73_1_fu_390_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln68_reg_1351_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_1_reg_1647 <= grp_fu_345_p1;
                tmp_5_reg_1652 <= grp_fu_348_p1;
            end if;
        end if;
    end process;
    zext_ln74_reg_1371(6 downto 0) <= "0000000";
    zext_ln74_reg_1371(15) <= '0';
    zext_ln73_reg_1377(6 downto 0) <= "0000000";
    zext_ln73_reg_1377(15) <= '0';
    rhs_V_reg_1514(8) <= '0';
    lhs_V_1_reg_1572(16 downto 8) <= "000000000";
    rhs_V_3_reg_1582(16 downto 8) <= "000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage1, icmp_ln68_fu_358_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln68_fu_358_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln68_fu_358_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln214_1_fu_554_p2 <= std_logic_vector(unsigned(g2_V_load_reg_1494) + unsigned(sub_ln1353_1_fu_550_p2));
    add_ln214_2_fu_760_p2 <= std_logic_vector(unsigned(g3_V_load_reg_1499) + unsigned(sub_ln214_reg_1606));
    add_ln214_3_fu_764_p2 <= std_logic_vector(unsigned(add_ln214_2_fu_760_p2) + unsigned(f_V_load_1_reg_1472));
    add_ln214_4_fu_689_p2 <= std_logic_vector(unsigned(g4_V_load_reg_1504) + unsigned(sub_ln214_1_reg_1562));
    add_ln214_5_fu_693_p2 <= std_logic_vector(unsigned(add_ln214_4_fu_689_p2) + unsigned(f_V_load_1_reg_1472));
    add_ln214_6_fu_774_p2 <= std_logic_vector(unsigned(add_ln214_7_fu_770_p2) + unsigned(f_V_load_1_reg_1472));
    add_ln214_7_fu_770_p2 <= std_logic_vector(unsigned(g5_V_load_reg_1509) + unsigned(sub_ln1353_3_reg_1611));
    add_ln214_fu_672_p2 <= std_logic_vector(unsigned(g1_V_load_reg_1482) + unsigned(sub_ln1353_fu_668_p2));
    add_ln215_1_fu_485_p2 <= std_logic_vector(unsigned(zext_ln73_fu_432_p1) + unsigned(zext_ln215_fu_462_p1));
    add_ln215_2_fu_497_p2 <= std_logic_vector(unsigned(zext_ln71_fu_458_p1) + unsigned(zext_ln215_fu_462_p1));
    add_ln215_3_fu_516_p2 <= std_logic_vector(unsigned(zext_ln74_reg_1371) + unsigned(zext_ln215_4_fu_512_p1));
    add_ln215_4_fu_527_p2 <= std_logic_vector(unsigned(zext_ln73_reg_1377) + unsigned(zext_ln215_4_fu_512_p1));
    add_ln215_5_fu_569_p2 <= std_logic_vector(unsigned(zext_ln74_reg_1371) + unsigned(zext_ln215_7_fu_565_p1));
    add_ln215_fu_466_p2 <= std_logic_vector(unsigned(zext_ln74_fu_406_p1) + unsigned(zext_ln215_fu_462_p1));
    add_ln68_fu_364_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_312_p4) + unsigned(ap_const_lv15_1));
    add_ln73_fu_444_p2 <= std_logic_vector(unsigned(ap_phi_mux_y_0_phi_fu_323_p4) + unsigned(select_ln73_3_fu_436_p3));
    add_ln74_1_fu_384_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(ap_phi_mux_y_0_phi_fu_323_p4));
    add_ln74_fu_410_p2 <= std_logic_vector(unsigned(ap_const_lv8_2) + unsigned(ap_phi_mux_y_0_phi_fu_323_p4));
    add_ln75_fu_560_p2 <= std_logic_vector(unsigned(ap_const_lv8_2) + unsigned(select_ln73_reg_1360));

    adjChImg_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, zext_ln215_1_fu_472_p1, ap_block_pp0_stage1, zext_ln215_5_fu_521_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                adjChImg_V_address0 <= zext_ln215_5_fu_521_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                adjChImg_V_address0 <= zext_ln215_1_fu_472_p1(14 - 1 downto 0);
            else 
                adjChImg_V_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            adjChImg_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;

    adjChImg_V_address1 <= zext_ln215_2_fu_491_p1(14 - 1 downto 0);

    adjChImg_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            adjChImg_V_ce0 <= ap_const_logic_1;
        else 
            adjChImg_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    adjChImg_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            adjChImg_V_ce1 <= ap_const_logic_1;
        else 
            adjChImg_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    and_ln330_1_fu_1217_p2 <= (xor_ln326_1_fu_1212_p2 and icmp_ln330_1_reg_1696);
    and_ln330_fu_1295_p2 <= (xor_ln326_fu_1290_p2 and icmp_ln330_reg_1748);
    and_ln332_1_fu_1019_p2 <= (xor_ln330_1_fu_1014_p2 and icmp_ln332_1_reg_1701);
    and_ln332_fu_1131_p2 <= (xor_ln330_fu_1126_p2 and icmp_ln332_reg_1753);
    and_ln333_1_fu_1278_p2 <= (xor_ln333_fu_1273_p2 and and_ln332_reg_1781);
    and_ln333_2_fu_1024_p2 <= (icmp_ln333_1_reg_1707 and and_ln332_1_fu_1019_p2);
    and_ln333_3_fu_1200_p2 <= (xor_ln333_1_fu_1195_p2 and and_ln332_1_reg_1771);
    and_ln333_fu_1136_p2 <= (icmp_ln333_reg_1759 and and_ln332_fu_1131_p2);
    and_ln343_1_fu_1047_p2 <= (xor_ln332_1_fu_1041_p2 and icmp_ln343_1_fu_989_p2);
    and_ln343_fu_1159_p2 <= (xor_ln332_fu_1153_p2 and icmp_ln343_fu_1101_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state22 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln68_fu_358_p2)
    begin
        if ((icmp_ln68_fu_358_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_312_p4_assign_proc : process(indvar_flatten_reg_308, icmp_ln68_reg_1351, ap_CS_fsm_pp0_stage0, add_ln68_reg_1355, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln68_reg_1351 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_312_p4 <= add_ln68_reg_1355;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_312_p4 <= indvar_flatten_reg_308;
        end if; 
    end process;


    ap_phi_mux_x_0_phi_fu_334_p4_assign_proc : process(x_0_reg_330, icmp_ln68_reg_1351, ap_CS_fsm_pp0_stage0, x_reg_1452, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln68_reg_1351 = ap_const_lv1_0))) then 
            ap_phi_mux_x_0_phi_fu_334_p4 <= x_reg_1452;
        else 
            ap_phi_mux_x_0_phi_fu_334_p4 <= x_0_reg_330;
        end if; 
    end process;


    ap_phi_mux_y_0_phi_fu_323_p4_assign_proc : process(y_0_reg_319, icmp_ln68_reg_1351, ap_CS_fsm_pp0_stage0, select_ln73_1_reg_1366, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln68_reg_1351 = ap_const_lv1_0))) then 
            ap_phi_mux_y_0_phi_fu_323_p4 <= select_ln73_1_reg_1366;
        else 
            ap_phi_mux_y_0_phi_fu_323_p4 <= y_0_reg_319;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exp_V_1_fu_842_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_4_fu_832_p4),12));
    exp_V_fu_912_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_fu_902_p4),12));

    f_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, zext_ln215_1_fu_472_p1, ap_block_pp0_stage1, zext_ln215_5_fu_521_p1, ap_block_pp0_stage2, zext_ln215_8_fu_574_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                f_V_address0 <= zext_ln215_8_fu_574_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                f_V_address0 <= zext_ln215_5_fu_521_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                f_V_address0 <= zext_ln215_1_fu_472_p1(14 - 1 downto 0);
            else 
                f_V_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            f_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    f_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, zext_ln215_2_fu_491_p1, zext_ln215_3_fu_503_p1, ap_block_pp0_stage1, zext_ln215_6_fu_546_p1, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                f_V_address1 <= zext_ln215_6_fu_546_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                f_V_address1 <= zext_ln215_3_fu_503_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                f_V_address1 <= zext_ln215_2_fu_491_p1(14 - 1 downto 0);
            else 
                f_V_address1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            f_V_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    f_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            f_V_ce0 <= ap_const_logic_1;
        else 
            f_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    f_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            f_V_ce1 <= ap_const_logic_1;
        else 
            f_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    g1_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, g1_V_addr_reg_1407_pp0_iter1_reg, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln215_1_fu_472_p1, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            g1_V_address0 <= g1_V_addr_reg_1407_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            g1_V_address0 <= zext_ln215_1_fu_472_p1(14 - 1 downto 0);
        else 
            g1_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;

    g1_V_address1 <= g1_V_addr_reg_1407;

    g1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            g1_V_ce0 <= ap_const_logic_1;
        else 
            g1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    g1_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            g1_V_ce1 <= ap_const_logic_1;
        else 
            g1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    g1_V_d0 <= ap_const_lv8_1;
    g1_V_d1 <= add_ln214_fu_672_p2;

    g1_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1, icmp_ln895_reg_1626)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln895_reg_1626 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            g1_V_we0 <= ap_const_logic_1;
        else 
            g1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    g1_V_we1_assign_proc : process(icmp_ln68_reg_1351, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln68_reg_1351 = ap_const_lv1_0))) then 
            g1_V_we1 <= ap_const_logic_1;
        else 
            g1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    g2_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, g2_V_addr_reg_1413, ap_block_pp0_stage0, zext_ln215_1_fu_472_p1, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                g2_V_address0 <= g2_V_addr_reg_1413;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                g2_V_address0 <= zext_ln215_1_fu_472_p1(14 - 1 downto 0);
            else 
                g2_V_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            g2_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;

    g2_V_address1 <= g2_V_addr_reg_1413;

    g2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            g2_V_ce0 <= ap_const_logic_1;
        else 
            g2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    g2_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            g2_V_ce1 <= ap_const_logic_1;
        else 
            g2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    g2_V_d0 <= add_ln214_1_fu_554_p2;
    g2_V_d1 <= ap_const_lv8_1;

    g2_V_we0_assign_proc : process(icmp_ln68_reg_1351, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln68_reg_1351 = ap_const_lv1_0))) then 
            g2_V_we0 <= ap_const_logic_1;
        else 
            g2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    g2_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln895_1_reg_1602, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln895_1_reg_1602 = ap_const_lv1_0))) then 
            g2_V_we1 <= ap_const_logic_1;
        else 
            g2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    g3_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, g3_V_addr_reg_1419_pp0_iter1_reg, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln215_1_fu_472_p1, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            g3_V_address0 <= g3_V_addr_reg_1419_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            g3_V_address0 <= zext_ln215_1_fu_472_p1(14 - 1 downto 0);
        else 
            g3_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    g3_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            g3_V_ce0 <= ap_const_logic_1;
        else 
            g3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    g3_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1, ap_block_pp0_stage2, add_ln214_3_fu_764_p2)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                g3_V_d0 <= ap_const_lv8_1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                g3_V_d0 <= add_ln214_3_fu_764_p2;
            else 
                g3_V_d0 <= "XXXXXXXX";
            end if;
        else 
            g3_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    g3_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, icmp_ln68_reg_1351_pp0_iter1_reg, ap_enable_reg_pp0_iter1, icmp_ln895_2_reg_1639)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln895_2_reg_1639 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln68_reg_1351_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            g3_V_we0 <= ap_const_logic_1;
        else 
            g3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    g4_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, g4_V_addr_reg_1424_pp0_iter1_reg, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln215_1_fu_472_p1, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            g4_V_address0 <= g4_V_addr_reg_1424_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            g4_V_address0 <= zext_ln215_1_fu_472_p1(14 - 1 downto 0);
        else 
            g4_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;

    g4_V_address1 <= g4_V_addr_reg_1424;

    g4_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            g4_V_ce0 <= ap_const_logic_1;
        else 
            g4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    g4_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            g4_V_ce1 <= ap_const_logic_1;
        else 
            g4_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    g4_V_d0 <= ap_const_lv8_1;
    g4_V_d1 <= add_ln214_5_fu_693_p2;

    g4_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1, icmp_ln895_3_reg_1630)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln895_3_reg_1630 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            g4_V_we0 <= ap_const_logic_1;
        else 
            g4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    g4_V_we1_assign_proc : process(icmp_ln68_reg_1351, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln68_reg_1351 = ap_const_lv1_0))) then 
            g4_V_we1 <= ap_const_logic_1;
        else 
            g4_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    g5_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, g5_V_addr_reg_1430_pp0_iter1_reg, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln215_1_fu_472_p1, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            g5_V_address0 <= g5_V_addr_reg_1430_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            g5_V_address0 <= zext_ln215_1_fu_472_p1(14 - 1 downto 0);
        else 
            g5_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    g5_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            g5_V_ce0 <= ap_const_logic_1;
        else 
            g5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    g5_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1, ap_block_pp0_stage2, add_ln214_6_fu_774_p2)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                g5_V_d0 <= ap_const_lv8_1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                g5_V_d0 <= add_ln214_6_fu_774_p2;
            else 
                g5_V_d0 <= "XXXXXXXX";
            end if;
        else 
            g5_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    g5_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, icmp_ln68_reg_1351_pp0_iter1_reg, ap_enable_reg_pp0_iter1, icmp_ln895_4_reg_1643)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln895_4_reg_1643 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln68_reg_1351_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            g5_V_we0 <= ap_const_logic_1;
        else 
            g5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    g6_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, g6_V_addr_reg_1435_pp0_iter6_reg, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0, zext_ln215_1_fu_472_p1, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            g6_V_address0 <= g6_V_addr_reg_1435_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            g6_V_address0 <= zext_ln215_1_fu_472_p1(14 - 1 downto 0);
        else 
            g6_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;

    g6_V_address1 <= g6_V_addr_reg_1435_pp0_iter5_reg;

    g6_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter6)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            g6_V_ce0 <= ap_const_logic_1;
        else 
            g6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    g6_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            g6_V_ce1 <= ap_const_logic_1;
        else 
            g6_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    g6_V_d0 <= ap_const_lv8_1;
    g6_V_d1 <= select_ln351_reg_1800;

    g6_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln895_5_reg_1805, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln895_5_reg_1805 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            g6_V_we0 <= ap_const_logic_1;
        else 
            g6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    g6_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln68_reg_1351_pp0_iter5_reg, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln68_reg_1351_pp0_iter5_reg = ap_const_lv1_0))) then 
            g6_V_we1 <= ap_const_logic_1;
        else 
            g6_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    g7_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, g7_V_addr_reg_1441_pp0_iter5_reg, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0, zext_ln215_1_fu_472_p1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            g7_V_address0 <= g7_V_addr_reg_1441_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            g7_V_address0 <= zext_ln215_1_fu_472_p1(14 - 1 downto 0);
        else 
            g7_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;

    g7_V_address1 <= g7_V_addr_reg_1441_pp0_iter5_reg;

    g7_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            g7_V_ce0 <= ap_const_logic_1;
        else 
            g7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    g7_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            g7_V_ce1 <= ap_const_logic_1;
        else 
            g7_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    g7_V_d0 <= select_ln351_1_reg_1791;
    g7_V_d1 <= ap_const_lv8_1;

    g7_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, icmp_ln68_reg_1351_pp0_iter5_reg, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln68_reg_1351_pp0_iter5_reg = ap_const_lv1_0))) then 
            g7_V_we0 <= ap_const_logic_1;
        else 
            g7_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    g7_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln895_6_reg_1796, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln895_6_reg_1796 = ap_const_lv1_0))) then 
            g7_V_we1 <= ap_const_logic_1;
        else 
            g7_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1336_p1 <= grp_fu_1336_p10(8 - 1 downto 0);
    grp_fu_1336_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(f_V_load_1_reg_1472),17));
    grp_fu_1344_p1 <= rhs_V_3_reg_1582(8 - 1 downto 0);

    grp_fu_341_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, tmp_1_reg_1647, tmp_5_reg_1652, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_341_p0 <= tmp_1_reg_1647;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_341_p0 <= tmp_5_reg_1652;
            else 
                grp_fu_341_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_341_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_341_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, i_op_assign_1_reg_1657, i_op_assign_reg_1662, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_341_p1 <= i_op_assign_reg_1662;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_341_p1 <= i_op_assign_1_reg_1657;
            else 
                grp_fu_341_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_341_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_345_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(g6_V_load_reg_1525),32));
    grp_fu_348_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(g7_V_load_reg_1540),32));

    grp_fu_351_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, sext_ln1429_1_fu_724_p1, sext_ln1429_fu_780_p1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_351_p0 <= sext_ln1429_fu_780_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_351_p0 <= sext_ln1429_1_fu_724_p1;
            else 
                grp_fu_351_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_351_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln326_1_fu_850_p2 <= "1" when (trunc_ln310_1_fu_820_p1 = ap_const_lv63_0) else "0";
    icmp_ln326_fu_920_p2 <= "1" when (trunc_ln310_fu_890_p1 = ap_const_lv63_0) else "0";
    icmp_ln330_1_fu_862_p2 <= "1" when (p_Result_4_fu_832_p4 = ap_const_lv11_433) else "0";
    icmp_ln330_fu_932_p2 <= "1" when (p_Result_s_fu_902_p4 = ap_const_lv11_433) else "0";
    icmp_ln332_1_fu_868_p2 <= "1" when (signed(sh_amt_2_fu_856_p2) > signed(ap_const_lv12_0)) else "0";
    icmp_ln332_fu_938_p2 <= "1" when (signed(sh_amt_fu_926_p2) > signed(ap_const_lv12_0)) else "0";
    icmp_ln333_1_fu_874_p2 <= "1" when (signed(sh_amt_2_fu_856_p2) < signed(ap_const_lv12_36)) else "0";
    icmp_ln333_fu_944_p2 <= "1" when (signed(sh_amt_fu_926_p2) < signed(ap_const_lv12_36)) else "0";
    icmp_ln343_1_fu_989_p2 <= "1" when (signed(tmp_12_fu_979_p4) < signed(ap_const_lv8_1)) else "0";
    icmp_ln343_fu_1101_p2 <= "1" when (signed(tmp_9_fu_1091_p4) < signed(ap_const_lv8_1)) else "0";
    icmp_ln68_fu_358_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_312_p4 = ap_const_lv15_4000) else "0";
    icmp_ln70_fu_370_p2 <= "1" when (ap_phi_mux_x_0_phi_fu_334_p4 = ap_const_lv8_80) else "0";
    icmp_ln895_1_fu_662_p2 <= "1" when (tmp_15_fu_652_p4 = ap_const_lv7_0) else "0";
    icmp_ln895_2_fu_794_p2 <= "1" when (tmp_16_fu_784_p4 = ap_const_lv7_0) else "0";
    icmp_ln895_3_fu_754_p2 <= "1" when (tmp_17_fu_744_p4 = ap_const_lv7_0) else "0";
    icmp_ln895_4_fu_810_p2 <= "1" when (tmp_18_fu_800_p4 = ap_const_lv7_0) else "0";
    icmp_ln895_5_fu_1330_p2 <= "1" when (tmp_19_fu_1320_p4 = ap_const_lv7_0) else "0";
    icmp_ln895_6_fu_1252_p2 <= "1" when (tmp_20_fu_1242_p4 = ap_const_lv7_0) else "0";
    icmp_ln895_fu_738_p2 <= "1" when (tmp_14_fu_728_p4 = ap_const_lv7_0) else "0";
    lhs_V_1_fu_599_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(adjChImg_V_load_reg_1519),17));
    lhs_V_2_fu_602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(adjChImg_V_q0),9));
    lhs_V_5_fu_536_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(f_V_q1),9));
    lhs_V_6_fu_631_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(adjChImg_V_load_2_reg_1535),9));
    lhs_V_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(f_V_q0),9));
    lshr_ln334_1_fu_999_p2 <= std_logic_vector(shift_right(unsigned(tmp_8_fu_959_p3),to_integer(unsigned('0' & zext_ln334_1_fu_995_p1(31-1 downto 0)))));
    lshr_ln334_fu_1111_p2 <= std_logic_vector(shift_right(unsigned(tmp_fu_1071_p3),to_integer(unsigned('0' & zext_ln334_fu_1107_p1(31-1 downto 0)))));
    or_ln330_1_fu_880_p2 <= (icmp_ln330_1_fu_862_p2 or icmp_ln326_1_fu_850_p2);
    or_ln330_fu_950_p2 <= (icmp_ln330_fu_932_p2 or icmp_ln326_fu_920_p2);
    or_ln332_1_fu_1037_p2 <= (or_ln330_1_reg_1713 or icmp_ln332_1_reg_1701);
    or_ln332_fu_1149_p2 <= (or_ln330_reg_1765 or icmp_ln332_reg_1753);
    p_Result_4_fu_832_p4 <= reg_V_1_fu_816_p1(62 downto 52);
    p_Result_s_fu_902_p4 <= reg_V_fu_886_p1(62 downto 52);
    reg_V_1_fu_816_p1 <= reg_354;
    reg_V_fu_886_p1 <= reg_354;
    ret_V_1_fu_712_p0 <= ret_V_reg_1567;
    ret_V_1_fu_712_p1 <= lhs_V_1_reg_1572(8 - 1 downto 0);
    ret_V_1_fu_712_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ret_V_1_fu_712_p0) * signed('0' &ret_V_1_fu_712_p1))), 17));
    ret_V_2_fu_609_p2 <= std_logic_vector(unsigned(lhs_V_2_fu_602_p1) - unsigned(rhs_V_2_fu_606_p1));
    ret_V_5_fu_540_p2 <= std_logic_vector(unsigned(lhs_V_5_fu_536_p1) - unsigned(rhs_V_fu_532_p1));
    ret_V_6_fu_625_p0 <= ret_V_5_reg_1530;
    ret_V_6_fu_625_p1 <= ret_V_6_fu_625_p10(8 - 1 downto 0);
    ret_V_6_fu_625_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(adjChImg_V_load_reg_1519),17));
    ret_V_6_fu_625_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ret_V_6_fu_625_p0) * signed('0' &ret_V_6_fu_625_p1))), 17));
    ret_V_7_fu_634_p2 <= std_logic_vector(unsigned(lhs_V_6_fu_631_p1) - unsigned(rhs_V_2_fu_606_p1));
    ret_V_fu_594_p2 <= std_logic_vector(unsigned(lhs_V_fu_590_p1) - unsigned(rhs_V_reg_1514));
    rhs_V_2_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(adjChImg_V_load_reg_1519),9));
    rhs_V_3_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(f_V_load_1_reg_1472),17));
    rhs_V_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(f_V_q0),9));
    select_ln326_1_fu_1061_p3 <= 
        ap_const_lv8_0 when (icmp_ln326_1_reg_1684(0) = '1') else 
        select_ln343_1_fu_1053_p3;
    select_ln326_fu_1173_p3 <= 
        ap_const_lv8_0 when (icmp_ln326_reg_1736(0) = '1') else 
        select_ln343_fu_1165_p3;
    select_ln330_1_fu_1222_p3 <= 
        trunc_ln331_1_reg_1678 when (and_ln330_1_fu_1217_p2(0) = '1') else 
        select_ln333_3_fu_1205_p3;
    select_ln330_fu_1300_p3 <= 
        trunc_ln331_reg_1730 when (and_ln330_fu_1295_p2(0) = '1') else 
        select_ln333_1_fu_1283_p3;
    select_ln333_1_fu_1283_p3 <= 
        select_ln336_fu_1265_p3 when (and_ln333_1_fu_1278_p2(0) = '1') else 
        select_ln326_reg_1786;
    select_ln333_2_fu_1029_p3 <= 
        trunc_ln334_1_fu_1005_p1 when (and_ln333_2_fu_1024_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln333_3_fu_1205_p3 <= 
        select_ln336_1_fu_1187_p3 when (and_ln333_3_fu_1200_p2(0) = '1') else 
        select_ln326_1_reg_1776;
    select_ln333_fu_1141_p3 <= 
        trunc_ln334_fu_1117_p1 when (and_ln333_fu_1136_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln336_1_fu_1187_p3 <= 
        ap_const_lv8_FF when (tmp_13_fu_1180_p3(0) = '1') else 
        ap_const_lv8_0;
    select_ln336_fu_1265_p3 <= 
        ap_const_lv8_FF when (tmp_10_fu_1258_p3(0) = '1') else 
        ap_const_lv8_0;
    select_ln343_1_fu_1053_p3 <= 
        shl_ln345_1_fu_1009_p2 when (and_ln343_1_fu_1047_p2(0) = '1') else 
        select_ln333_2_fu_1029_p3;
    select_ln343_fu_1165_p3 <= 
        shl_ln345_fu_1121_p2 when (and_ln343_fu_1159_p2(0) = '1') else 
        select_ln333_fu_1141_p3;
    select_ln351_1_fu_1235_p3 <= 
        sub_ln461_1_fu_1229_p2 when (p_Result_5_reg_1673(0) = '1') else 
        select_ln330_1_fu_1222_p3;
    select_ln351_fu_1313_p3 <= 
        sub_ln461_fu_1307_p2 when (p_Result_3_reg_1725(0) = '1') else 
        select_ln330_fu_1300_p3;
    select_ln73_1_fu_390_p3 <= 
        add_ln74_1_fu_384_p2 when (icmp_ln70_fu_370_p2(0) = '1') else 
        ap_phi_mux_y_0_phi_fu_323_p4;
    select_ln73_2_fu_416_p3 <= 
        add_ln74_fu_410_p2 when (icmp_ln70_fu_370_p2(0) = '1') else 
        add_ln74_1_fu_384_p2;
    select_ln73_3_fu_436_p3 <= 
        ap_const_lv8_3 when (icmp_ln70_fu_370_p2(0) = '1') else 
        ap_const_lv8_2;
    select_ln73_fu_376_p3 <= 
        ap_const_lv8_0 when (icmp_ln70_fu_370_p2(0) = '1') else 
        ap_phi_mux_x_0_phi_fu_334_p4;
        sext_ln1429_1_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_9_reg_1592),32));

        sext_ln1429_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_4_reg_1616),32));

        sext_ln329_1_fu_967_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_2_reg_1690),32));

        sext_ln329_fu_1079_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_1742),32));

    sh_amt_1_fu_1082_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(sh_amt_reg_1742));
    sh_amt_2_fu_856_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(exp_V_1_fu_842_p1));
    sh_amt_3_fu_970_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(sh_amt_2_reg_1690));
    sh_amt_fu_926_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(exp_V_fu_912_p1));
    shl_ln214_1_fu_579_p2 <= std_logic_vector(shift_left(unsigned(f_V_load_2_reg_1487),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    shl_ln214_fu_678_p2 <= std_logic_vector(shift_left(unsigned(f_V_load_reg_1550),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    shl_ln345_1_fu_1009_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln331_1_reg_1678),to_integer(unsigned('0' & trunc_ln342_1_fu_975_p1(8-1 downto 0)))));
    shl_ln345_fu_1121_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln331_reg_1730),to_integer(unsigned('0' & trunc_ln342_fu_1087_p1(8-1 downto 0)))));
    sub_ln1353_1_fu_550_p2 <= std_logic_vector(unsigned(f_V_load_2_reg_1487) - unsigned(f_V_load_1_reg_1472));
    sub_ln1353_2_fu_699_p2 <= std_logic_vector(unsigned(f_V_q1) - unsigned(f_V_load_2_reg_1487));
    sub_ln1353_3_fu_704_p2 <= std_logic_vector(unsigned(sub_ln1353_2_fu_699_p2) - unsigned(f_V_load_reg_1550));
    sub_ln1353_fu_668_p2 <= std_logic_vector(unsigned(f_V_load_reg_1550) - unsigned(f_V_load_1_reg_1472));
    sub_ln214_1_fu_584_p2 <= std_logic_vector(unsigned(f_V_q1) - unsigned(shl_ln214_1_fu_579_p2));
    sub_ln214_fu_683_p2 <= std_logic_vector(unsigned(f_V_q0) - unsigned(shl_ln214_fu_678_p2));
    sub_ln461_1_fu_1229_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(select_ln330_1_fu_1222_p3));
    sub_ln461_fu_1307_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(select_ln330_fu_1300_p3));
    tmp_10_fu_1258_p3 <= reg_V_reg_1719(63 downto 63);
    tmp_12_fu_979_p4 <= sh_amt_3_fu_970_p2(10 downto 3);
    tmp_13_fu_1180_p3 <= reg_V_1_reg_1667(63 downto 63);
    tmp_14_fu_728_p4 <= add_ln214_fu_672_p2(7 downto 1);
    tmp_15_fu_652_p4 <= add_ln214_1_fu_554_p2(7 downto 1);
    tmp_16_fu_784_p4 <= add_ln214_3_fu_764_p2(7 downto 1);
    tmp_17_fu_744_p4 <= add_ln214_5_fu_693_p2(7 downto 1);
    tmp_18_fu_800_p4 <= add_ln214_6_fu_774_p2(7 downto 1);
    tmp_19_fu_1320_p4 <= select_ln351_fu_1313_p3(7 downto 1);
    tmp_20_fu_1242_p4 <= select_ln351_1_fu_1235_p3(7 downto 1);
    tmp_2_fu_398_p3 <= (select_ln73_1_fu_390_p3 & ap_const_lv7_0);
    tmp_3_fu_424_p3 <= (select_ln73_2_fu_416_p3 & ap_const_lv7_0);
    tmp_4_fu_450_p3 <= (add_ln73_fu_444_p2 & ap_const_lv7_0);
    tmp_8_fu_959_p3 <= (ap_const_lv1_1 & trunc_ln318_1_fu_956_p1);
    tmp_9_fu_1091_p4 <= sh_amt_1_fu_1082_p2(10 downto 3);
    tmp_fu_1071_p3 <= (ap_const_lv1_1 & trunc_ln318_fu_1068_p1);
    trunc_ln310_1_fu_820_p1 <= reg_V_1_fu_816_p1(63 - 1 downto 0);
    trunc_ln310_fu_890_p1 <= reg_V_fu_886_p1(63 - 1 downto 0);
    trunc_ln318_1_fu_956_p1 <= reg_V_1_reg_1667(52 - 1 downto 0);
    trunc_ln318_fu_1068_p1 <= reg_V_reg_1719(52 - 1 downto 0);
    trunc_ln331_1_fu_846_p1 <= reg_V_1_fu_816_p1(8 - 1 downto 0);
    trunc_ln331_fu_916_p1 <= reg_V_fu_886_p1(8 - 1 downto 0);
    trunc_ln334_1_fu_1005_p1 <= lshr_ln334_1_fu_999_p2(8 - 1 downto 0);
    trunc_ln334_fu_1117_p1 <= lshr_ln334_fu_1111_p2(8 - 1 downto 0);
    trunc_ln342_1_fu_975_p1 <= sh_amt_3_fu_970_p2(8 - 1 downto 0);
    trunc_ln342_fu_1087_p1 <= sh_amt_1_fu_1082_p2(8 - 1 downto 0);
    x_fu_507_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(select_ln73_reg_1360));
    xor_ln326_1_fu_1212_p2 <= (icmp_ln326_1_reg_1684 xor ap_const_lv1_1);
    xor_ln326_fu_1290_p2 <= (icmp_ln326_reg_1736 xor ap_const_lv1_1);
    xor_ln330_1_fu_1014_p2 <= (or_ln330_1_reg_1713 xor ap_const_lv1_1);
    xor_ln330_fu_1126_p2 <= (or_ln330_reg_1765 xor ap_const_lv1_1);
    xor_ln332_1_fu_1041_p2 <= (or_ln332_1_fu_1037_p2 xor ap_const_lv1_1);
    xor_ln332_fu_1153_p2 <= (or_ln332_fu_1149_p2 xor ap_const_lv1_1);
    xor_ln333_1_fu_1195_p2 <= (icmp_ln333_1_reg_1707 xor ap_const_lv1_1);
    xor_ln333_fu_1273_p2 <= (icmp_ln333_reg_1759 xor ap_const_lv1_1);
    zext_ln215_1_fu_472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_fu_466_p2),64));
    zext_ln215_2_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_1_fu_485_p2),64));
    zext_ln215_3_fu_503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_2_reg_1392),64));
    zext_ln215_4_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_fu_507_p2),16));
    zext_ln215_5_fu_521_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_3_fu_516_p2),64));
    zext_ln215_6_fu_546_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_4_reg_1462),64));
    zext_ln215_7_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln75_fu_560_p2),16));
    zext_ln215_8_fu_574_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_5_fu_569_p2),64));
    zext_ln215_fu_462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln73_fu_376_p3),16));
    zext_ln334_1_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln329_1_fu_967_p1),53));
    zext_ln334_fu_1107_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln329_fu_1079_p1),53));
    zext_ln71_fu_458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_450_p3),16));
    zext_ln73_fu_432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_424_p3),16));
    zext_ln74_fu_406_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_398_p3),16));
end behav;
