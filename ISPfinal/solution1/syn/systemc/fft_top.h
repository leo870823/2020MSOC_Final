// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fft_top_HH_
#define _fft_top_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dummy_proc_fe_1.h"
#include "fft_config1_s.h"
#include "dummy_proc_be_1.h"
#include "fifo_w16_d2_A.h"
#include "fifo_w64_d128_A.h"
#include "fifo_w8_d2_A.h"
#include "start_for_fft_conbkb.h"
#include "start_for_dummy_pcud.h"

namespace ap_rtl {

struct fft_top : public sc_module {
    // Port declarations 32
    sc_in< sc_logic > direction;
    sc_out< sc_lv<7> > in_r_address0;
    sc_out< sc_logic > in_r_ce0;
    sc_out< sc_lv<64> > in_r_d0;
    sc_in< sc_lv<64> > in_r_q0;
    sc_out< sc_logic > in_r_we0;
    sc_out< sc_lv<7> > in_r_address1;
    sc_out< sc_logic > in_r_ce1;
    sc_out< sc_lv<64> > in_r_d1;
    sc_in< sc_lv<64> > in_r_q1;
    sc_out< sc_logic > in_r_we1;
    sc_out< sc_lv<7> > out_r_address0;
    sc_out< sc_logic > out_r_ce0;
    sc_out< sc_lv<64> > out_r_d0;
    sc_in< sc_lv<64> > out_r_q0;
    sc_out< sc_logic > out_r_we0;
    sc_out< sc_lv<7> > out_r_address1;
    sc_out< sc_logic > out_r_ce1;
    sc_out< sc_lv<64> > out_r_d1;
    sc_in< sc_lv<64> > out_r_q1;
    sc_out< sc_logic > out_r_we1;
    sc_out< sc_logic > ovflo;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > direction_ap_vld;
    sc_out< sc_logic > direction_ap_ack;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ovflo_ap_vld;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_in< sc_logic > ap_continue;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<16> > ap_var_for_const1;


    // Module declarations
    fft_top(sc_module_name name);
    SC_HAS_PROCESS(fft_top);

    ~fft_top();

    sc_trace_file* mVcdFile;

    dummy_proc_fe_1* dummy_proc_fe_1_U0;
    fft_config1_s* fft_config1_U0;
    dummy_proc_be_1* dummy_proc_be_1_U0;
    fifo_w16_d2_A* fft_config_data_V_U;
    fifo_w64_d128_A* xn_channel_U;
    fifo_w64_d128_A* xk_channel_U;
    fifo_w8_d2_A* fft_status_data_V_U;
    start_for_fft_conbkb* start_for_fft_conbkb_U;
    start_for_dummy_pcud* start_for_dummy_pcud_U;
    sc_signal< sc_logic > dummy_proc_fe_1_U0_ap_start;
    sc_signal< sc_logic > dummy_proc_fe_1_U0_start_full_n;
    sc_signal< sc_logic > dummy_proc_fe_1_U0_ap_done;
    sc_signal< sc_logic > dummy_proc_fe_1_U0_ap_continue;
    sc_signal< sc_logic > dummy_proc_fe_1_U0_ap_idle;
    sc_signal< sc_logic > dummy_proc_fe_1_U0_ap_ready;
    sc_signal< sc_logic > dummy_proc_fe_1_U0_start_out;
    sc_signal< sc_logic > dummy_proc_fe_1_U0_start_write;
    sc_signal< sc_lv<1> > dummy_proc_fe_1_U0_direction;
    sc_signal< sc_logic > dummy_proc_fe_1_U0_config_data_V_read;
    sc_signal< sc_lv<16> > dummy_proc_fe_1_U0_config_data_V_din;
    sc_signal< sc_logic > dummy_proc_fe_1_U0_config_data_V_write;
    sc_signal< sc_lv<7> > dummy_proc_fe_1_U0_in_r_address0;
    sc_signal< sc_logic > dummy_proc_fe_1_U0_in_r_ce0;
    sc_signal< sc_lv<64> > dummy_proc_fe_1_U0_out_r_din;
    sc_signal< sc_logic > dummy_proc_fe_1_U0_out_r_write;
    sc_signal< sc_logic > fft_config1_U0_ap_start;
    sc_signal< sc_logic > fft_config1_U0_ap_done;
    sc_signal< sc_logic > fft_config1_U0_ap_idle;
    sc_signal< sc_logic > fft_config1_U0_ap_ready;
    sc_signal< sc_logic > fft_config1_U0_ap_continue;
    sc_signal< sc_logic > fft_config1_U0_xn_read;
    sc_signal< sc_lv<64> > fft_config1_U0_xk_din;
    sc_signal< sc_logic > fft_config1_U0_xk_write;
    sc_signal< sc_lv<8> > fft_config1_U0_status_data_V_din;
    sc_signal< sc_logic > fft_config1_U0_status_data_V_write;
    sc_signal< sc_logic > fft_config1_U0_config_ch_data_V_read;
    sc_signal< sc_logic > dummy_proc_be_1_U0_ap_start;
    sc_signal< sc_logic > dummy_proc_be_1_U0_ap_done;
    sc_signal< sc_logic > dummy_proc_be_1_U0_ap_continue;
    sc_signal< sc_logic > dummy_proc_be_1_U0_ap_idle;
    sc_signal< sc_logic > dummy_proc_be_1_U0_ap_ready;
    sc_signal< sc_logic > dummy_proc_be_1_U0_status_in_data_V_read;
    sc_signal< sc_logic > dummy_proc_be_1_U0_ovflo;
    sc_signal< sc_logic > dummy_proc_be_1_U0_ovflo_ap_vld;
    sc_signal< sc_logic > dummy_proc_be_1_U0_in_r_read;
    sc_signal< sc_lv<7> > dummy_proc_be_1_U0_out_r_address0;
    sc_signal< sc_logic > dummy_proc_be_1_U0_out_r_ce0;
    sc_signal< sc_logic > dummy_proc_be_1_U0_out_r_we0;
    sc_signal< sc_lv<64> > dummy_proc_be_1_U0_out_r_d0;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > fft_config_data_V_full_n;
    sc_signal< sc_lv<16> > fft_config_data_V_dout;
    sc_signal< sc_logic > fft_config_data_V_empty_n;
    sc_signal< sc_logic > fft_config1_U0_config_ch_data_V_full_n;
    sc_signal< sc_logic > fft_config1_U0_config_ch_data_V_write;
    sc_signal< sc_lv<16> > fft_config1_U0_config_ch_data_V_din;
    sc_signal< sc_logic > xn_channel_full_n;
    sc_signal< sc_lv<64> > xn_channel_dout;
    sc_signal< sc_logic > xn_channel_empty_n;
    sc_signal< sc_logic > xk_channel_full_n;
    sc_signal< sc_lv<64> > xk_channel_dout;
    sc_signal< sc_logic > xk_channel_empty_n;
    sc_signal< sc_logic > fft_status_data_V_full_n;
    sc_signal< sc_lv<8> > fft_status_data_V_dout;
    sc_signal< sc_logic > fft_status_data_V_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_lv<1> > start_for_fft_config1_U0_din;
    sc_signal< sc_logic > start_for_fft_config1_U0_full_n;
    sc_signal< sc_lv<1> > start_for_fft_config1_U0_dout;
    sc_signal< sc_logic > start_for_fft_config1_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_dummy_proc_be_1_U0_din;
    sc_signal< sc_logic > start_for_dummy_proc_be_1_U0_full_n;
    sc_signal< sc_lv<1> > start_for_dummy_proc_be_1_U0_dout;
    sc_signal< sc_logic > start_for_dummy_proc_be_1_U0_empty_n;
    sc_signal< sc_logic > fft_config1_U0_start_full_n;
    sc_signal< sc_logic > fft_config1_U0_start_write;
    sc_signal< sc_logic > dummy_proc_be_1_U0_start_full_n;
    sc_signal< sc_logic > dummy_proc_be_1_U0_start_write;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<16> ap_const_lv16_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_direction_ap_ack();
    void thread_dummy_proc_be_1_U0_ap_continue();
    void thread_dummy_proc_be_1_U0_ap_start();
    void thread_dummy_proc_be_1_U0_start_full_n();
    void thread_dummy_proc_be_1_U0_start_write();
    void thread_dummy_proc_fe_1_U0_ap_continue();
    void thread_dummy_proc_fe_1_U0_ap_start();
    void thread_dummy_proc_fe_1_U0_direction();
    void thread_dummy_proc_fe_1_U0_start_full_n();
    void thread_fft_config1_U0_ap_continue();
    void thread_fft_config1_U0_ap_start();
    void thread_fft_config1_U0_config_ch_data_V_din();
    void thread_fft_config1_U0_config_ch_data_V_full_n();
    void thread_fft_config1_U0_config_ch_data_V_write();
    void thread_fft_config1_U0_start_full_n();
    void thread_fft_config1_U0_start_write();
    void thread_in_r_address0();
    void thread_in_r_address1();
    void thread_in_r_ce0();
    void thread_in_r_ce1();
    void thread_in_r_d0();
    void thread_in_r_d1();
    void thread_in_r_we0();
    void thread_in_r_we1();
    void thread_out_r_address0();
    void thread_out_r_address1();
    void thread_out_r_ce0();
    void thread_out_r_ce1();
    void thread_out_r_d0();
    void thread_out_r_d1();
    void thread_out_r_we0();
    void thread_out_r_we1();
    void thread_ovflo();
    void thread_ovflo_ap_vld();
    void thread_start_for_dummy_proc_be_1_U0_din();
    void thread_start_for_fft_config1_U0_din();
};

}

using namespace ap_rtl;

#endif
