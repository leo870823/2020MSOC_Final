// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "DEBLUR.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic DEBLUR::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic DEBLUR::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> DEBLUR::ap_ST_fsm_state1 = "1";
const sc_lv<4> DEBLUR::ap_ST_fsm_state2 = "10";
const sc_lv<4> DEBLUR::ap_ST_fsm_state3 = "100";
const sc_lv<4> DEBLUR::ap_ST_fsm_state4 = "1000";
const sc_lv<32> DEBLUR::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> DEBLUR::ap_const_lv32_2 = "10";
const sc_lv<32> DEBLUR::ap_const_lv32_1 = "1";
const sc_lv<32> DEBLUR::ap_const_lv32_3 = "11";
const sc_lv<14> DEBLUR::ap_const_lv14_0 = "00000000000000";
const bool DEBLUR::ap_const_boolean_1 = true;

DEBLUR::DEBLUR(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_cross_channel_deblur_fu_32 = new cross_channel_deblur("grp_cross_channel_deblur_fu_32");
    grp_cross_channel_deblur_fu_32->ap_clk(ap_clk);
    grp_cross_channel_deblur_fu_32->ap_rst(ap_rst);
    grp_cross_channel_deblur_fu_32->ap_start(grp_cross_channel_deblur_fu_32_ap_start);
    grp_cross_channel_deblur_fu_32->ap_done(grp_cross_channel_deblur_fu_32_ap_done);
    grp_cross_channel_deblur_fu_32->ap_idle(grp_cross_channel_deblur_fu_32_ap_idle);
    grp_cross_channel_deblur_fu_32->ap_ready(grp_cross_channel_deblur_fu_32_ap_ready);
    grp_cross_channel_deblur_fu_32->Img_address0(grp_cross_channel_deblur_fu_32_Img_address0);
    grp_cross_channel_deblur_fu_32->Img_ce0(grp_cross_channel_deblur_fu_32_Img_ce0);
    grp_cross_channel_deblur_fu_32->Img_we0(grp_cross_channel_deblur_fu_32_Img_we0);
    grp_cross_channel_deblur_fu_32->Img_d0(grp_cross_channel_deblur_fu_32_Img_d0);
    grp_cross_channel_deblur_fu_32->Img_q0(grp_cross_channel_deblur_fu_32_Img_q0);
    grp_cross_channel_deblur_fu_32->adjChImg_address0(grp_cross_channel_deblur_fu_32_adjChImg_address0);
    grp_cross_channel_deblur_fu_32->adjChImg_ce0(grp_cross_channel_deblur_fu_32_adjChImg_ce0);
    grp_cross_channel_deblur_fu_32->adjChImg_q0(refImg_R_q0);
    grp_cross_channel_deblur_fu_32->adjChImg_address1(grp_cross_channel_deblur_fu_32_adjChImg_address1);
    grp_cross_channel_deblur_fu_32->adjChImg_ce1(grp_cross_channel_deblur_fu_32_adjChImg_ce1);
    grp_cross_channel_deblur_fu_32->adjChImg_q1(refImg_R_q1);
    grp_cross_channel_deblur_fu_32->adjChImg2_address0(grp_cross_channel_deblur_fu_32_adjChImg2_address0);
    grp_cross_channel_deblur_fu_32->adjChImg2_ce0(grp_cross_channel_deblur_fu_32_adjChImg2_ce0);
    grp_cross_channel_deblur_fu_32->adjChImg2_q0(grp_cross_channel_deblur_fu_32_adjChImg2_q0);
    grp_cross_channel_deblur_fu_32->adjChImg2_address1(grp_cross_channel_deblur_fu_32_adjChImg2_address1);
    grp_cross_channel_deblur_fu_32->adjChImg2_ce1(grp_cross_channel_deblur_fu_32_adjChImg2_ce1);
    grp_cross_channel_deblur_fu_32->adjChImg2_q1(grp_cross_channel_deblur_fu_32_adjChImg2_q1);
    grp_cross_channel_deblur_fu_32->coe_a_M_real_address0(grp_cross_channel_deblur_fu_32_coe_a_M_real_address0);
    grp_cross_channel_deblur_fu_32->coe_a_M_real_ce0(grp_cross_channel_deblur_fu_32_coe_a_M_real_ce0);
    grp_cross_channel_deblur_fu_32->coe_a_M_real_q0(grp_cross_channel_deblur_fu_32_coe_a_M_real_q0);
    grp_cross_channel_deblur_fu_32->coe_a_M_imag_address0(grp_cross_channel_deblur_fu_32_coe_a_M_imag_address0);
    grp_cross_channel_deblur_fu_32->coe_a_M_imag_ce0(grp_cross_channel_deblur_fu_32_coe_a_M_imag_ce0);
    grp_cross_channel_deblur_fu_32->coe_a_M_imag_q0(grp_cross_channel_deblur_fu_32_coe_a_M_imag_q0);
    grp_cross_channel_deblur_fu_32->coe_b_address0(grp_cross_channel_deblur_fu_32_coe_b_address0);
    grp_cross_channel_deblur_fu_32->coe_b_ce0(grp_cross_channel_deblur_fu_32_coe_b_ce0);
    grp_cross_channel_deblur_fu_32->coe_b_q0(grp_cross_channel_deblur_fu_32_coe_b_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_adjChImg_B_address0);
    sensitive << ( grp_cross_channel_deblur_fu_32_Img_address0 );
    sensitive << ( grp_cross_channel_deblur_fu_32_adjChImg2_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_adjChImg_B_address1);
    sensitive << ( grp_cross_channel_deblur_fu_32_adjChImg2_address1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_adjChImg_B_ce0);
    sensitive << ( grp_cross_channel_deblur_fu_32_Img_ce0 );
    sensitive << ( grp_cross_channel_deblur_fu_32_adjChImg2_ce0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_adjChImg_B_ce1);
    sensitive << ( grp_cross_channel_deblur_fu_32_adjChImg2_ce1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_adjChImg_B_d0);
    sensitive << ( grp_cross_channel_deblur_fu_32_Img_d0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_adjChImg_B_we0);
    sensitive << ( grp_cross_channel_deblur_fu_32_Img_we0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_adjChImg_G_address0);
    sensitive << ( grp_cross_channel_deblur_fu_32_Img_address0 );
    sensitive << ( grp_cross_channel_deblur_fu_32_adjChImg2_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_adjChImg_G_address1);
    sensitive << ( grp_cross_channel_deblur_fu_32_adjChImg2_address1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_adjChImg_G_ce0);
    sensitive << ( grp_cross_channel_deblur_fu_32_Img_ce0 );
    sensitive << ( grp_cross_channel_deblur_fu_32_adjChImg2_ce0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_adjChImg_G_ce1);
    sensitive << ( grp_cross_channel_deblur_fu_32_adjChImg2_ce1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_adjChImg_G_d0);
    sensitive << ( grp_cross_channel_deblur_fu_32_Img_d0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_adjChImg_G_we0);
    sensitive << ( grp_cross_channel_deblur_fu_32_Img_we0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( grp_cross_channel_deblur_fu_32_ap_done );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_cross_channel_deblur_fu_32_ap_done );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_denominator_B_address0);
    sensitive << ( grp_cross_channel_deblur_fu_32_coe_b_address0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_denominator_B_ce0);
    sensitive << ( grp_cross_channel_deblur_fu_32_coe_b_ce0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_denominator_G_address0);
    sensitive << ( grp_cross_channel_deblur_fu_32_coe_b_address0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_denominator_G_ce0);
    sensitive << ( grp_cross_channel_deblur_fu_32_coe_b_ce0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_denominator_R_address0);

    SC_METHOD(thread_denominator_R_address1);

    SC_METHOD(thread_denominator_R_ce0);

    SC_METHOD(thread_denominator_R_ce1);

    SC_METHOD(thread_denominator_R_d0);

    SC_METHOD(thread_denominator_R_d1);

    SC_METHOD(thread_denominator_R_we0);

    SC_METHOD(thread_denominator_R_we1);

    SC_METHOD(thread_grp_cross_channel_deblur_fu_32_Img_q0);
    sensitive << ( adjChImg_G_q0 );
    sensitive << ( adjChImg_B_q0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_cross_channel_deblur_fu_32_adjChImg2_q0);
    sensitive << ( adjChImg_G_q0 );
    sensitive << ( adjChImg_B_q0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_cross_channel_deblur_fu_32_adjChImg2_q1);
    sensitive << ( adjChImg_G_q1 );
    sensitive << ( adjChImg_B_q1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_cross_channel_deblur_fu_32_ap_start);
    sensitive << ( grp_cross_channel_deblur_fu_32_ap_start_reg );

    SC_METHOD(thread_grp_cross_channel_deblur_fu_32_coe_a_M_imag_q0);
    sensitive << ( nominator_G_M_imag_q0 );
    sensitive << ( nominator_B_M_imag_q0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_cross_channel_deblur_fu_32_coe_a_M_real_q0);
    sensitive << ( nominator_G_M_real_q0 );
    sensitive << ( nominator_B_M_real_q0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_cross_channel_deblur_fu_32_coe_b_q0);
    sensitive << ( denominator_G_q0 );
    sensitive << ( denominator_B_q0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_nominator_B_M_imag_address0);
    sensitive << ( grp_cross_channel_deblur_fu_32_coe_a_M_imag_address0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_nominator_B_M_imag_ce0);
    sensitive << ( grp_cross_channel_deblur_fu_32_coe_a_M_imag_ce0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_nominator_B_M_real_address0);
    sensitive << ( grp_cross_channel_deblur_fu_32_coe_a_M_real_address0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_nominator_B_M_real_ce0);
    sensitive << ( grp_cross_channel_deblur_fu_32_coe_a_M_real_ce0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_nominator_G_M_imag_address0);
    sensitive << ( grp_cross_channel_deblur_fu_32_coe_a_M_imag_address0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_nominator_G_M_imag_ce0);
    sensitive << ( grp_cross_channel_deblur_fu_32_coe_a_M_imag_ce0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_nominator_G_M_real_address0);
    sensitive << ( grp_cross_channel_deblur_fu_32_coe_a_M_real_address0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_nominator_G_M_real_ce0);
    sensitive << ( grp_cross_channel_deblur_fu_32_coe_a_M_real_ce0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_nominator_R_M_imag_address0);

    SC_METHOD(thread_nominator_R_M_imag_address1);

    SC_METHOD(thread_nominator_R_M_imag_ce0);

    SC_METHOD(thread_nominator_R_M_imag_ce1);

    SC_METHOD(thread_nominator_R_M_imag_d0);

    SC_METHOD(thread_nominator_R_M_imag_d1);

    SC_METHOD(thread_nominator_R_M_imag_we0);

    SC_METHOD(thread_nominator_R_M_imag_we1);

    SC_METHOD(thread_nominator_R_M_real_address0);

    SC_METHOD(thread_nominator_R_M_real_address1);

    SC_METHOD(thread_nominator_R_M_real_ce0);

    SC_METHOD(thread_nominator_R_M_real_ce1);

    SC_METHOD(thread_nominator_R_M_real_d0);

    SC_METHOD(thread_nominator_R_M_real_d1);

    SC_METHOD(thread_nominator_R_M_real_we0);

    SC_METHOD(thread_nominator_R_M_real_we1);

    SC_METHOD(thread_refImg_R_address0);
    sensitive << ( grp_cross_channel_deblur_fu_32_adjChImg_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_refImg_R_address1);
    sensitive << ( grp_cross_channel_deblur_fu_32_adjChImg_address1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_refImg_R_ce0);
    sensitive << ( grp_cross_channel_deblur_fu_32_adjChImg_ce0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_refImg_R_ce1);
    sensitive << ( grp_cross_channel_deblur_fu_32_adjChImg_ce1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_cross_channel_deblur_fu_32_ap_done );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0001";
    grp_cross_channel_deblur_fu_32_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "DEBLUR_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, refImg_R_address0, "(port)refImg_R_address0");
    sc_trace(mVcdFile, refImg_R_ce0, "(port)refImg_R_ce0");
    sc_trace(mVcdFile, refImg_R_q0, "(port)refImg_R_q0");
    sc_trace(mVcdFile, refImg_R_address1, "(port)refImg_R_address1");
    sc_trace(mVcdFile, refImg_R_ce1, "(port)refImg_R_ce1");
    sc_trace(mVcdFile, refImg_R_q1, "(port)refImg_R_q1");
    sc_trace(mVcdFile, adjChImg_G_address0, "(port)adjChImg_G_address0");
    sc_trace(mVcdFile, adjChImg_G_ce0, "(port)adjChImg_G_ce0");
    sc_trace(mVcdFile, adjChImg_G_we0, "(port)adjChImg_G_we0");
    sc_trace(mVcdFile, adjChImg_G_d0, "(port)adjChImg_G_d0");
    sc_trace(mVcdFile, adjChImg_G_q0, "(port)adjChImg_G_q0");
    sc_trace(mVcdFile, adjChImg_G_address1, "(port)adjChImg_G_address1");
    sc_trace(mVcdFile, adjChImg_G_ce1, "(port)adjChImg_G_ce1");
    sc_trace(mVcdFile, adjChImg_G_q1, "(port)adjChImg_G_q1");
    sc_trace(mVcdFile, adjChImg_B_address0, "(port)adjChImg_B_address0");
    sc_trace(mVcdFile, adjChImg_B_ce0, "(port)adjChImg_B_ce0");
    sc_trace(mVcdFile, adjChImg_B_we0, "(port)adjChImg_B_we0");
    sc_trace(mVcdFile, adjChImg_B_d0, "(port)adjChImg_B_d0");
    sc_trace(mVcdFile, adjChImg_B_q0, "(port)adjChImg_B_q0");
    sc_trace(mVcdFile, adjChImg_B_address1, "(port)adjChImg_B_address1");
    sc_trace(mVcdFile, adjChImg_B_ce1, "(port)adjChImg_B_ce1");
    sc_trace(mVcdFile, adjChImg_B_q1, "(port)adjChImg_B_q1");
    sc_trace(mVcdFile, nominator_R_M_real_address0, "(port)nominator_R_M_real_address0");
    sc_trace(mVcdFile, nominator_R_M_real_ce0, "(port)nominator_R_M_real_ce0");
    sc_trace(mVcdFile, nominator_R_M_real_we0, "(port)nominator_R_M_real_we0");
    sc_trace(mVcdFile, nominator_R_M_real_d0, "(port)nominator_R_M_real_d0");
    sc_trace(mVcdFile, nominator_R_M_real_q0, "(port)nominator_R_M_real_q0");
    sc_trace(mVcdFile, nominator_R_M_real_address1, "(port)nominator_R_M_real_address1");
    sc_trace(mVcdFile, nominator_R_M_real_ce1, "(port)nominator_R_M_real_ce1");
    sc_trace(mVcdFile, nominator_R_M_real_we1, "(port)nominator_R_M_real_we1");
    sc_trace(mVcdFile, nominator_R_M_real_d1, "(port)nominator_R_M_real_d1");
    sc_trace(mVcdFile, nominator_R_M_real_q1, "(port)nominator_R_M_real_q1");
    sc_trace(mVcdFile, nominator_R_M_imag_address0, "(port)nominator_R_M_imag_address0");
    sc_trace(mVcdFile, nominator_R_M_imag_ce0, "(port)nominator_R_M_imag_ce0");
    sc_trace(mVcdFile, nominator_R_M_imag_we0, "(port)nominator_R_M_imag_we0");
    sc_trace(mVcdFile, nominator_R_M_imag_d0, "(port)nominator_R_M_imag_d0");
    sc_trace(mVcdFile, nominator_R_M_imag_q0, "(port)nominator_R_M_imag_q0");
    sc_trace(mVcdFile, nominator_R_M_imag_address1, "(port)nominator_R_M_imag_address1");
    sc_trace(mVcdFile, nominator_R_M_imag_ce1, "(port)nominator_R_M_imag_ce1");
    sc_trace(mVcdFile, nominator_R_M_imag_we1, "(port)nominator_R_M_imag_we1");
    sc_trace(mVcdFile, nominator_R_M_imag_d1, "(port)nominator_R_M_imag_d1");
    sc_trace(mVcdFile, nominator_R_M_imag_q1, "(port)nominator_R_M_imag_q1");
    sc_trace(mVcdFile, denominator_R_address0, "(port)denominator_R_address0");
    sc_trace(mVcdFile, denominator_R_ce0, "(port)denominator_R_ce0");
    sc_trace(mVcdFile, denominator_R_we0, "(port)denominator_R_we0");
    sc_trace(mVcdFile, denominator_R_d0, "(port)denominator_R_d0");
    sc_trace(mVcdFile, denominator_R_q0, "(port)denominator_R_q0");
    sc_trace(mVcdFile, denominator_R_address1, "(port)denominator_R_address1");
    sc_trace(mVcdFile, denominator_R_ce1, "(port)denominator_R_ce1");
    sc_trace(mVcdFile, denominator_R_we1, "(port)denominator_R_we1");
    sc_trace(mVcdFile, denominator_R_d1, "(port)denominator_R_d1");
    sc_trace(mVcdFile, denominator_R_q1, "(port)denominator_R_q1");
    sc_trace(mVcdFile, nominator_G_M_real_address0, "(port)nominator_G_M_real_address0");
    sc_trace(mVcdFile, nominator_G_M_real_ce0, "(port)nominator_G_M_real_ce0");
    sc_trace(mVcdFile, nominator_G_M_real_q0, "(port)nominator_G_M_real_q0");
    sc_trace(mVcdFile, nominator_G_M_imag_address0, "(port)nominator_G_M_imag_address0");
    sc_trace(mVcdFile, nominator_G_M_imag_ce0, "(port)nominator_G_M_imag_ce0");
    sc_trace(mVcdFile, nominator_G_M_imag_q0, "(port)nominator_G_M_imag_q0");
    sc_trace(mVcdFile, denominator_G_address0, "(port)denominator_G_address0");
    sc_trace(mVcdFile, denominator_G_ce0, "(port)denominator_G_ce0");
    sc_trace(mVcdFile, denominator_G_q0, "(port)denominator_G_q0");
    sc_trace(mVcdFile, nominator_B_M_real_address0, "(port)nominator_B_M_real_address0");
    sc_trace(mVcdFile, nominator_B_M_real_ce0, "(port)nominator_B_M_real_ce0");
    sc_trace(mVcdFile, nominator_B_M_real_q0, "(port)nominator_B_M_real_q0");
    sc_trace(mVcdFile, nominator_B_M_imag_address0, "(port)nominator_B_M_imag_address0");
    sc_trace(mVcdFile, nominator_B_M_imag_ce0, "(port)nominator_B_M_imag_ce0");
    sc_trace(mVcdFile, nominator_B_M_imag_q0, "(port)nominator_B_M_imag_q0");
    sc_trace(mVcdFile, denominator_B_address0, "(port)denominator_B_address0");
    sc_trace(mVcdFile, denominator_B_ce0, "(port)denominator_B_ce0");
    sc_trace(mVcdFile, denominator_B_q0, "(port)denominator_B_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_ap_start, "grp_cross_channel_deblur_fu_32_ap_start");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_ap_done, "grp_cross_channel_deblur_fu_32_ap_done");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_ap_idle, "grp_cross_channel_deblur_fu_32_ap_idle");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_ap_ready, "grp_cross_channel_deblur_fu_32_ap_ready");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_Img_address0, "grp_cross_channel_deblur_fu_32_Img_address0");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_Img_ce0, "grp_cross_channel_deblur_fu_32_Img_ce0");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_Img_we0, "grp_cross_channel_deblur_fu_32_Img_we0");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_Img_d0, "grp_cross_channel_deblur_fu_32_Img_d0");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_Img_q0, "grp_cross_channel_deblur_fu_32_Img_q0");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_adjChImg_address0, "grp_cross_channel_deblur_fu_32_adjChImg_address0");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_adjChImg_ce0, "grp_cross_channel_deblur_fu_32_adjChImg_ce0");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_adjChImg_address1, "grp_cross_channel_deblur_fu_32_adjChImg_address1");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_adjChImg_ce1, "grp_cross_channel_deblur_fu_32_adjChImg_ce1");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_adjChImg2_address0, "grp_cross_channel_deblur_fu_32_adjChImg2_address0");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_adjChImg2_ce0, "grp_cross_channel_deblur_fu_32_adjChImg2_ce0");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_adjChImg2_q0, "grp_cross_channel_deblur_fu_32_adjChImg2_q0");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_adjChImg2_address1, "grp_cross_channel_deblur_fu_32_adjChImg2_address1");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_adjChImg2_ce1, "grp_cross_channel_deblur_fu_32_adjChImg2_ce1");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_adjChImg2_q1, "grp_cross_channel_deblur_fu_32_adjChImg2_q1");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_coe_a_M_real_address0, "grp_cross_channel_deblur_fu_32_coe_a_M_real_address0");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_coe_a_M_real_ce0, "grp_cross_channel_deblur_fu_32_coe_a_M_real_ce0");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_coe_a_M_real_q0, "grp_cross_channel_deblur_fu_32_coe_a_M_real_q0");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_coe_a_M_imag_address0, "grp_cross_channel_deblur_fu_32_coe_a_M_imag_address0");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_coe_a_M_imag_ce0, "grp_cross_channel_deblur_fu_32_coe_a_M_imag_ce0");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_coe_a_M_imag_q0, "grp_cross_channel_deblur_fu_32_coe_a_M_imag_q0");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_coe_b_address0, "grp_cross_channel_deblur_fu_32_coe_b_address0");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_coe_b_ce0, "grp_cross_channel_deblur_fu_32_coe_b_ce0");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_coe_b_q0, "grp_cross_channel_deblur_fu_32_coe_b_q0");
    sc_trace(mVcdFile, grp_cross_channel_deblur_fu_32_ap_start_reg, "grp_cross_channel_deblur_fu_32_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("DEBLUR.hdltvin.dat");
    mHdltvoutHandle.open("DEBLUR.hdltvout.dat");
}

DEBLUR::~DEBLUR() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_cross_channel_deblur_fu_32;
}

void DEBLUR::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_cross_channel_deblur_fu_32_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
              esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
            grp_cross_channel_deblur_fu_32_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_cross_channel_deblur_fu_32_ap_ready.read())) {
            grp_cross_channel_deblur_fu_32_ap_start_reg = ap_const_logic_0;
        }
    }
}

void DEBLUR::thread_adjChImg_B_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        adjChImg_B_address0 = grp_cross_channel_deblur_fu_32_adjChImg2_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        adjChImg_B_address0 = grp_cross_channel_deblur_fu_32_Img_address0.read();
    } else {
        adjChImg_B_address0 = "XXXXXXXXXXXXXX";
    }
}

void DEBLUR::thread_adjChImg_B_address1() {
    adjChImg_B_address1 = grp_cross_channel_deblur_fu_32_adjChImg2_address1.read();
}

void DEBLUR::thread_adjChImg_B_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        adjChImg_B_ce0 = grp_cross_channel_deblur_fu_32_adjChImg2_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        adjChImg_B_ce0 = grp_cross_channel_deblur_fu_32_Img_ce0.read();
    } else {
        adjChImg_B_ce0 = ap_const_logic_0;
    }
}

void DEBLUR::thread_adjChImg_B_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        adjChImg_B_ce1 = grp_cross_channel_deblur_fu_32_adjChImg2_ce1.read();
    } else {
        adjChImg_B_ce1 = ap_const_logic_0;
    }
}

void DEBLUR::thread_adjChImg_B_d0() {
    adjChImg_B_d0 = grp_cross_channel_deblur_fu_32_Img_d0.read();
}

void DEBLUR::thread_adjChImg_B_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        adjChImg_B_we0 = grp_cross_channel_deblur_fu_32_Img_we0.read();
    } else {
        adjChImg_B_we0 = ap_const_logic_0;
    }
}

void DEBLUR::thread_adjChImg_G_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        adjChImg_G_address0 = grp_cross_channel_deblur_fu_32_adjChImg2_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        adjChImg_G_address0 = grp_cross_channel_deblur_fu_32_Img_address0.read();
    } else {
        adjChImg_G_address0 = "XXXXXXXXXXXXXX";
    }
}

void DEBLUR::thread_adjChImg_G_address1() {
    adjChImg_G_address1 = grp_cross_channel_deblur_fu_32_adjChImg2_address1.read();
}

void DEBLUR::thread_adjChImg_G_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        adjChImg_G_ce0 = grp_cross_channel_deblur_fu_32_adjChImg2_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        adjChImg_G_ce0 = grp_cross_channel_deblur_fu_32_Img_ce0.read();
    } else {
        adjChImg_G_ce0 = ap_const_logic_0;
    }
}

void DEBLUR::thread_adjChImg_G_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        adjChImg_G_ce1 = grp_cross_channel_deblur_fu_32_adjChImg2_ce1.read();
    } else {
        adjChImg_G_ce1 = ap_const_logic_0;
    }
}

void DEBLUR::thread_adjChImg_G_d0() {
    adjChImg_G_d0 = grp_cross_channel_deblur_fu_32_Img_d0.read();
}

void DEBLUR::thread_adjChImg_G_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        adjChImg_G_we0 = grp_cross_channel_deblur_fu_32_Img_we0.read();
    } else {
        adjChImg_G_we0 = ap_const_logic_0;
    }
}

void DEBLUR::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void DEBLUR::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void DEBLUR::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void DEBLUR::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void DEBLUR::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(grp_cross_channel_deblur_fu_32_ap_done.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void DEBLUR::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void DEBLUR::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(grp_cross_channel_deblur_fu_32_ap_done.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void DEBLUR::thread_denominator_B_address0() {
    denominator_B_address0 = grp_cross_channel_deblur_fu_32_coe_b_address0.read();
}

void DEBLUR::thread_denominator_B_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        denominator_B_ce0 = grp_cross_channel_deblur_fu_32_coe_b_ce0.read();
    } else {
        denominator_B_ce0 = ap_const_logic_0;
    }
}

void DEBLUR::thread_denominator_G_address0() {
    denominator_G_address0 = grp_cross_channel_deblur_fu_32_coe_b_address0.read();
}

void DEBLUR::thread_denominator_G_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        denominator_G_ce0 = grp_cross_channel_deblur_fu_32_coe_b_ce0.read();
    } else {
        denominator_G_ce0 = ap_const_logic_0;
    }
}

void DEBLUR::thread_denominator_R_address0() {
    denominator_R_address0 = ap_const_lv14_0;
}

void DEBLUR::thread_denominator_R_address1() {
    denominator_R_address1 = ap_const_lv14_0;
}

void DEBLUR::thread_denominator_R_ce0() {
    denominator_R_ce0 = ap_const_logic_0;
}

void DEBLUR::thread_denominator_R_ce1() {
    denominator_R_ce1 = ap_const_logic_0;
}

void DEBLUR::thread_denominator_R_d0() {
    denominator_R_d0 = ap_const_lv32_0;
}

void DEBLUR::thread_denominator_R_d1() {
    denominator_R_d1 = ap_const_lv32_0;
}

void DEBLUR::thread_denominator_R_we0() {
    denominator_R_we0 = ap_const_logic_0;
}

void DEBLUR::thread_denominator_R_we1() {
    denominator_R_we1 = ap_const_logic_0;
}

void DEBLUR::thread_grp_cross_channel_deblur_fu_32_Img_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_cross_channel_deblur_fu_32_Img_q0 = adjChImg_B_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_cross_channel_deblur_fu_32_Img_q0 = adjChImg_G_q0.read();
    } else {
        grp_cross_channel_deblur_fu_32_Img_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void DEBLUR::thread_grp_cross_channel_deblur_fu_32_adjChImg2_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_cross_channel_deblur_fu_32_adjChImg2_q0 = adjChImg_G_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_cross_channel_deblur_fu_32_adjChImg2_q0 = adjChImg_B_q0.read();
    } else {
        grp_cross_channel_deblur_fu_32_adjChImg2_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void DEBLUR::thread_grp_cross_channel_deblur_fu_32_adjChImg2_q1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_cross_channel_deblur_fu_32_adjChImg2_q1 = adjChImg_G_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_cross_channel_deblur_fu_32_adjChImg2_q1 = adjChImg_B_q1.read();
    } else {
        grp_cross_channel_deblur_fu_32_adjChImg2_q1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void DEBLUR::thread_grp_cross_channel_deblur_fu_32_ap_start() {
    grp_cross_channel_deblur_fu_32_ap_start = grp_cross_channel_deblur_fu_32_ap_start_reg.read();
}

void DEBLUR::thread_grp_cross_channel_deblur_fu_32_coe_a_M_imag_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_cross_channel_deblur_fu_32_coe_a_M_imag_q0 = nominator_B_M_imag_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_cross_channel_deblur_fu_32_coe_a_M_imag_q0 = nominator_G_M_imag_q0.read();
    } else {
        grp_cross_channel_deblur_fu_32_coe_a_M_imag_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void DEBLUR::thread_grp_cross_channel_deblur_fu_32_coe_a_M_real_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_cross_channel_deblur_fu_32_coe_a_M_real_q0 = nominator_B_M_real_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_cross_channel_deblur_fu_32_coe_a_M_real_q0 = nominator_G_M_real_q0.read();
    } else {
        grp_cross_channel_deblur_fu_32_coe_a_M_real_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void DEBLUR::thread_grp_cross_channel_deblur_fu_32_coe_b_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_cross_channel_deblur_fu_32_coe_b_q0 = denominator_B_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_cross_channel_deblur_fu_32_coe_b_q0 = denominator_G_q0.read();
    } else {
        grp_cross_channel_deblur_fu_32_coe_b_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void DEBLUR::thread_nominator_B_M_imag_address0() {
    nominator_B_M_imag_address0 = grp_cross_channel_deblur_fu_32_coe_a_M_imag_address0.read();
}

void DEBLUR::thread_nominator_B_M_imag_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        nominator_B_M_imag_ce0 = grp_cross_channel_deblur_fu_32_coe_a_M_imag_ce0.read();
    } else {
        nominator_B_M_imag_ce0 = ap_const_logic_0;
    }
}

void DEBLUR::thread_nominator_B_M_real_address0() {
    nominator_B_M_real_address0 = grp_cross_channel_deblur_fu_32_coe_a_M_real_address0.read();
}

void DEBLUR::thread_nominator_B_M_real_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        nominator_B_M_real_ce0 = grp_cross_channel_deblur_fu_32_coe_a_M_real_ce0.read();
    } else {
        nominator_B_M_real_ce0 = ap_const_logic_0;
    }
}

void DEBLUR::thread_nominator_G_M_imag_address0() {
    nominator_G_M_imag_address0 = grp_cross_channel_deblur_fu_32_coe_a_M_imag_address0.read();
}

void DEBLUR::thread_nominator_G_M_imag_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        nominator_G_M_imag_ce0 = grp_cross_channel_deblur_fu_32_coe_a_M_imag_ce0.read();
    } else {
        nominator_G_M_imag_ce0 = ap_const_logic_0;
    }
}

void DEBLUR::thread_nominator_G_M_real_address0() {
    nominator_G_M_real_address0 = grp_cross_channel_deblur_fu_32_coe_a_M_real_address0.read();
}

void DEBLUR::thread_nominator_G_M_real_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        nominator_G_M_real_ce0 = grp_cross_channel_deblur_fu_32_coe_a_M_real_ce0.read();
    } else {
        nominator_G_M_real_ce0 = ap_const_logic_0;
    }
}

void DEBLUR::thread_nominator_R_M_imag_address0() {
    nominator_R_M_imag_address0 = ap_const_lv14_0;
}

void DEBLUR::thread_nominator_R_M_imag_address1() {
    nominator_R_M_imag_address1 = ap_const_lv14_0;
}

void DEBLUR::thread_nominator_R_M_imag_ce0() {
    nominator_R_M_imag_ce0 = ap_const_logic_0;
}

void DEBLUR::thread_nominator_R_M_imag_ce1() {
    nominator_R_M_imag_ce1 = ap_const_logic_0;
}

void DEBLUR::thread_nominator_R_M_imag_d0() {
    nominator_R_M_imag_d0 = ap_const_lv32_0;
}

void DEBLUR::thread_nominator_R_M_imag_d1() {
    nominator_R_M_imag_d1 = ap_const_lv32_0;
}

void DEBLUR::thread_nominator_R_M_imag_we0() {
    nominator_R_M_imag_we0 = ap_const_logic_0;
}

void DEBLUR::thread_nominator_R_M_imag_we1() {
    nominator_R_M_imag_we1 = ap_const_logic_0;
}

void DEBLUR::thread_nominator_R_M_real_address0() {
    nominator_R_M_real_address0 = ap_const_lv14_0;
}

void DEBLUR::thread_nominator_R_M_real_address1() {
    nominator_R_M_real_address1 = ap_const_lv14_0;
}

void DEBLUR::thread_nominator_R_M_real_ce0() {
    nominator_R_M_real_ce0 = ap_const_logic_0;
}

void DEBLUR::thread_nominator_R_M_real_ce1() {
    nominator_R_M_real_ce1 = ap_const_logic_0;
}

void DEBLUR::thread_nominator_R_M_real_d0() {
    nominator_R_M_real_d0 = ap_const_lv32_0;
}

void DEBLUR::thread_nominator_R_M_real_d1() {
    nominator_R_M_real_d1 = ap_const_lv32_0;
}

void DEBLUR::thread_nominator_R_M_real_we0() {
    nominator_R_M_real_we0 = ap_const_logic_0;
}

void DEBLUR::thread_nominator_R_M_real_we1() {
    nominator_R_M_real_we1 = ap_const_logic_0;
}

void DEBLUR::thread_refImg_R_address0() {
    refImg_R_address0 = grp_cross_channel_deblur_fu_32_adjChImg_address0.read();
}

void DEBLUR::thread_refImg_R_address1() {
    refImg_R_address1 = grp_cross_channel_deblur_fu_32_adjChImg_address1.read();
}

void DEBLUR::thread_refImg_R_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        refImg_R_ce0 = grp_cross_channel_deblur_fu_32_adjChImg_ce0.read();
    } else {
        refImg_R_ce0 = ap_const_logic_0;
    }
}

void DEBLUR::thread_refImg_R_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        refImg_R_ce1 = grp_cross_channel_deblur_fu_32_adjChImg_ce1.read();
    } else {
        refImg_R_ce1 = ap_const_logic_0;
    }
}

void DEBLUR::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_cross_channel_deblur_fu_32_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_cross_channel_deblur_fu_32_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<4>) ("XXXX");
            break;
    }
}

void DEBLUR::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"refImg_R_address0\" :  \"" << refImg_R_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"refImg_R_ce0\" :  \"" << refImg_R_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"refImg_R_q0\" :  \"" << refImg_R_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"refImg_R_address1\" :  \"" << refImg_R_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"refImg_R_ce1\" :  \"" << refImg_R_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"refImg_R_q1\" :  \"" << refImg_R_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"adjChImg_G_address0\" :  \"" << adjChImg_G_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"adjChImg_G_ce0\" :  \"" << adjChImg_G_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"adjChImg_G_we0\" :  \"" << adjChImg_G_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"adjChImg_G_d0\" :  \"" << adjChImg_G_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"adjChImg_G_q0\" :  \"" << adjChImg_G_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"adjChImg_G_address1\" :  \"" << adjChImg_G_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"adjChImg_G_ce1\" :  \"" << adjChImg_G_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"adjChImg_G_q1\" :  \"" << adjChImg_G_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"adjChImg_B_address0\" :  \"" << adjChImg_B_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"adjChImg_B_ce0\" :  \"" << adjChImg_B_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"adjChImg_B_we0\" :  \"" << adjChImg_B_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"adjChImg_B_d0\" :  \"" << adjChImg_B_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"adjChImg_B_q0\" :  \"" << adjChImg_B_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"adjChImg_B_address1\" :  \"" << adjChImg_B_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"adjChImg_B_ce1\" :  \"" << adjChImg_B_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"adjChImg_B_q1\" :  \"" << adjChImg_B_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_R_M_real_address0\" :  \"" << nominator_R_M_real_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_R_M_real_ce0\" :  \"" << nominator_R_M_real_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_R_M_real_we0\" :  \"" << nominator_R_M_real_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_R_M_real_d0\" :  \"" << nominator_R_M_real_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nominator_R_M_real_q0\" :  \"" << nominator_R_M_real_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_R_M_real_address1\" :  \"" << nominator_R_M_real_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_R_M_real_ce1\" :  \"" << nominator_R_M_real_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_R_M_real_we1\" :  \"" << nominator_R_M_real_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_R_M_real_d1\" :  \"" << nominator_R_M_real_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nominator_R_M_real_q1\" :  \"" << nominator_R_M_real_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_R_M_imag_address0\" :  \"" << nominator_R_M_imag_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_R_M_imag_ce0\" :  \"" << nominator_R_M_imag_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_R_M_imag_we0\" :  \"" << nominator_R_M_imag_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_R_M_imag_d0\" :  \"" << nominator_R_M_imag_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nominator_R_M_imag_q0\" :  \"" << nominator_R_M_imag_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_R_M_imag_address1\" :  \"" << nominator_R_M_imag_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_R_M_imag_ce1\" :  \"" << nominator_R_M_imag_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_R_M_imag_we1\" :  \"" << nominator_R_M_imag_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_R_M_imag_d1\" :  \"" << nominator_R_M_imag_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nominator_R_M_imag_q1\" :  \"" << nominator_R_M_imag_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"denominator_R_address0\" :  \"" << denominator_R_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"denominator_R_ce0\" :  \"" << denominator_R_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"denominator_R_we0\" :  \"" << denominator_R_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"denominator_R_d0\" :  \"" << denominator_R_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"denominator_R_q0\" :  \"" << denominator_R_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"denominator_R_address1\" :  \"" << denominator_R_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"denominator_R_ce1\" :  \"" << denominator_R_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"denominator_R_we1\" :  \"" << denominator_R_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"denominator_R_d1\" :  \"" << denominator_R_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"denominator_R_q1\" :  \"" << denominator_R_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_G_M_real_address0\" :  \"" << nominator_G_M_real_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_G_M_real_ce0\" :  \"" << nominator_G_M_real_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nominator_G_M_real_q0\" :  \"" << nominator_G_M_real_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_G_M_imag_address0\" :  \"" << nominator_G_M_imag_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_G_M_imag_ce0\" :  \"" << nominator_G_M_imag_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nominator_G_M_imag_q0\" :  \"" << nominator_G_M_imag_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"denominator_G_address0\" :  \"" << denominator_G_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"denominator_G_ce0\" :  \"" << denominator_G_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"denominator_G_q0\" :  \"" << denominator_G_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_B_M_real_address0\" :  \"" << nominator_B_M_real_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_B_M_real_ce0\" :  \"" << nominator_B_M_real_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nominator_B_M_real_q0\" :  \"" << nominator_B_M_real_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_B_M_imag_address0\" :  \"" << nominator_B_M_imag_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"nominator_B_M_imag_ce0\" :  \"" << nominator_B_M_imag_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nominator_B_M_imag_q0\" :  \"" << nominator_B_M_imag_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"denominator_B_address0\" :  \"" << denominator_B_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"denominator_B_ce0\" :  \"" << denominator_B_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"denominator_B_q0\" :  \"" << denominator_B_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

